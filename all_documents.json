[
    {
        "filename": "GitLab Values _ The GitLab Handbook.pdf",
        "pages": [
            {
                "page": 1,
                "content": "GitLab Values\nLearn more about how we live our values at GitLab\nCREDIT\nGitLab\u02bcs six core values are \ud83e\udd1d Collaboration, \ud83d\udcc8 Results for Customers, \u23f1 Efficiency,\n\ud83c\udf10 Diversity, Inclusion & Belonging, \ud83d\udc63 Iteration, and \ud83d\udc41 Transparency, and together\nthey spell the CREDIT we give each other by assuming good intent. We react to them with\nvalues emoji and they are made actionable below.\nAbout our values\nWe take inspiration from other companies, and we always go for the boring solutions. Our\nCEO, Sid Sijbrandij, has shared the origin of each of the CREDIT values, but just like the\nrest of our work, we continually adjust our values and strive to make them better. GitLab\nvalues are a living document. In many instances, they have been documented, refined, and\nrevised based on lessons learned (and scars earned) in the course of doing business.\nWe used to have more values, but it was difficult to remember them all. In response, we\ncondensed them, created an acronym (CREDIT), and listed operating principles to guide\nbehavior.\nEveryone is welcome to suggest improvements. Please assign MRs to update these values\nto our CEO Sid and @mention him in Slack if you work at GitLab Inc. or on Twitter if you\ndon\u02bct.The GitLab Handbook\n\uf296GitLab\ue4bbTeamOps\uf02dHandbook\uf0c0Job Families\uf0f6Reports22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 1/55"
            },
            {
                "page": 2,
                "content": "Driving Results with CREDIT from GitLab on Vimeo.\n\ud83e\udd1d Collaboration\nTo achieve results, team members must work together effectively. At GitLab, helping others\nis a priority, even when it is not immediately related to the goals that you are trying to\nachieve. Similarly, you can rely on others for help and advice\u2014in fact, you\u02bcre expected to\ndo so. Anyone can chime in on any subject, including people who don\u02bct work at GitLab. The\nperson who\u02bcs responsible for the work decides how to do it, but they should always take\neach suggestion seriously and try to respond and explain why it may or may not have been\nimplemented.\nKindness\nWe value caring for others. Demonstrating we care for people provides an effective\nframework for challenging directly and delivering feedback. Kindness doesn\u02bct mean\nholding back on feedback or avoiding disagreements, these are crucial to professional\ngrowth and getting results for customers. Kindness means you make a separation between\nthe work and the person, you can criticize someone\u02bcs work but still be respectful to the\nperson. Give as much positive feedback as you can, and do it in a public way.\nShare\nThere are aspects of GitLab culture, such as intentional transparency, that are unintuitive\nto outsiders and new team members. Be willing to invest in people and engage in open\ndialogue. For example, consider making private issues public wherever possible so that we\nGitLabDriving Results with CREDIT\n03:4222/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 2/55"
            },
            {
                "page": 3,
                "content": "can all learn from the experience. Don\u02bct be afraid of judgement or scrutiny when sharing\npublicly, we all understand it\u02bcs impossible to know everything.\nEveryone can remind anyone in the company about our values. If there is a disagreement\nabout the interpretations, the discussion can be escalated to more people within the\ncompany without repercussions.\nShare problems you run into, ask for help, be forthcoming with information and speak up.\nNegative feedback is 1-1\nGive negative feedback in the smallest setting possible. One-on-one video calls are\npreferred.\nNegative feedback is distinct from negativity and disagreement. If there is no direct\nfeedback involved, strive to discuss disagreement in a public channel, respectfully and\ntransparently.\nIn a GitLab Unfiltered interview on values, GitLab co-founder and CEO Sid Sijbrandij offers\nthe following context.\nWe deal with negative all the time at GitLab. If it\u02bcs not a problem, then why are we\ndiscussing it? We deal with negativity a lot, and that\u02bcs also part of our ambition.\nIf you want to get better, you talk about what you can improve. We\u02bcre allowed to publicly\ndiscuss negative things; we\u02bcre not allowed to give negative feedback in a large setting if\nit could be feasibly administered in a smaller setting.\nNegative feedback can be given in a group setting if it\u02bcs to someone higher in the\nmanagement chain. This shows that no one is above feedback. GitLab co-founder and CEO\nSid Sijbrandij and former CTO Eric Johnson discuss this in this GitLab Unfiltered video.\nProvide feedback in a timely manner\nWe want to solve problems while they are small. If you are unhappy with anything (your\nduties, your colleague, your boss, your salary, your location, your computer), please voice\nyour concerns rather than keeping them to yourself. If you need to escalate beyond your\nmanager, you could consider speaking to your skip-level, a more senior person, or a people\nbusiness partner.\nSay thanks\nRecognize the people that helped you publicly, for example in our #thanks chat channel.\nWhen publicly thanking, it\u02bcs important to recognize the following:22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 3/55"
            },
            {
                "page": 4,
                "content": "Showing thanks in as large a setting as possible (company-wide) at a company as\nlarge as ours is the exception instead of the norm, it takes some getting used to.\nBeing thanked at the company level for what you view as a relatively small or\nminuscule contribution can feel awkward.\nThanking a person in #thanks should be done sincerely and summarize why you are\nthankful so the person on the receiving end can easily understand why they are being\nthanked. Even while assuming positive intent, not all folks are comfortable with public\npraise. Help this person understand how they went above and beyond and why you\nfelt it was important for the team member to be recognized.\nThere are a number of good ways and places to say thanks. We shouldn\u02bct limit saying\nthanks to just the #thanks channel.\nGive feedback effectively\nGiving feedback is challenging, but it\u02bcs important to deliver it effectively. When providing\nfeedback, always make it about the work itself; focus on the business impact and not the\nperson. Make sure to provide at least one clear and recent example. If a person is going\nthrough a hard time in their personal life, then take that into account. An example of giving\npositive feedback is our thanks chat channel. For managers, it\u02bcs important to realize that\nteam members react to a negative incident with their managers six times more strongly\nthan they do to a positive one. Keeping that in mind, if an error is so inconsequential that\nthe value gained from providing criticism is low, it might make sense to keep that feedback\nto yourself. In the situations where negative feedback must be given, focus on the purpose\nfor that feedback: to improve the team member\u02bcs performance going forward. Give\nrecognition generously, in the open, and often to generate more engagement from your\nteam.\nGet to know each other\nWe use a lot of text-based communication, and if you know the person behind the text, it\nwill be easier to prevent conflicts. So we encourage people to get to know each other on a\npersonal level through informal communication, for example, virtual coffee chats, and\nduring GitLab Contribute.\nReach across company departments\nWhile it\u02bcs wise to seek advice from experts within your function, we encourage GitLab team\nmembers to do the same across departments. This enables the company to iterate more\nquickly, embrace the understanding that everyone can contribute and include more diverse\nperspectives when possible.\nDon\u02bct pull rank22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 4/55"
            },
            {
                "page": 5,
                "content": "If you have to remind someone of the position you have in the company, you\u02bcre doing\nsomething wrong. People already know our decision-making process. Explain why you\u02bcre\nmaking the decision, and respect everyone irrespective of their function. This includes\nusing the rank of another person - including the CEO - to sell an idea or decision.\nAssume positive intent\nWe naturally have a double standard when it comes to the actions of others. We blame\ncircumstances for our own mistakes, but individuals for theirs. This double standard is\ncalled the Fundamental Attribution Error. In order to mitigate this bias, you should always\nassume positive intent in your interactions with others, respecting their expertise and\ngiving them grace in the face of what you might perceive as mistakes.\nWhen disagreeing, folks sometimes argue against the weakest points of an argument, or an\nimaginary argument (e.g. \u201cstraw man\u201d). Assume the points are presented in good faith, and\ninstead try to argue against the strongest version of your opponent\u02bcs position. We call this\narguing against a \u201csteel\u201d position, instead of a \u201cstraw\u201d one. This concept is borrowed from\nargue the \u201csteel man\u201d technique.\nA \u201csteel\u201d position should be against the absolute most effective version of your opponent\u02bcs\nposition \u2014 potentially even more compelling than the one they presented. A good \u201csteel\u201d\nposition is one where the other person feels you\u02bcve represented their position well, even if\nthey still disagree with your assumptions or conclusion.\nAddress behavior, but don\u02bct label people\nThere is a lot of good in this article about not wanting jerks on our team, but we believe\nthat jerk is a label for behavior rather than an inherent classification of a person. We avoid\nclassifications.\nSay sorry\nIf you made a mistake, apologize as soon as possible. Saying sorry is not a sign of\nweakness but one of strength. The people that do the most work will likely make the most\nmistakes. Additionally, when we share our mistakes and bring attention to them, others can\nlearn from us, and the same mistake is less likely to be repeated by someone else.\nMistakes can include when you have not been kind to someone. In order to reinforce our\nvalues, it is important, and takes more courage, to apologize publicly when you have been\nunkind publicly (e.g., when you have said something unkind or unprofessional to an\nindividual or group in a Slack channel).\nNo ego22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 5/55"
            },
            {
                "page": 6,
                "content": "Don\u02bct defend a point to win an argument or double-down on a mistake. You are not your\nwork; you don\u02bct have to defend your point. You do have to search for the right answer with\nhelp from others.\nIn a GitLab Unfiltered interview, GitLab Head of Remote Darren M. adds context on this\noperating principle.\nIn many organizations, there\u02bcs a subtle, low-level, persistent pressure to continually\nprove your worth. And I believe that this fuels imposter syndrome and wreaks havoc on\nmental health.\nWhat\u02bcs so troubling to me is how often perception is reality. In other words, those who\nhave mastered the art of being perceived as elite reap benefits, though this has nothing\nto do with actual results.\nAt GitLab, \u201cno ego\u201d means that we foster and support an environment where results\nmatter, and you\u02bcre given agency to approach your work in the way that makes sense to\nyou. Instead of judging people for not approaching work in an agreed-upon way, \u201cno\nego\u201d encourages people to glean inspiration from watching others approach work in\nnew and different ways.\nBeing no ego is a standard we hold ourselves as people to but is not one that applies to\nGitLab as a company or product. We want to celebrate and highlight GitLab\u02bcs\naccomplishments, including being one of the largest all-remote companies. This doesn\u02bct\nmean we don\u02bct recognize our mistakes, including how we handled telemetry.\nSee others succeed\nA candidate who has talked to a lot of people inside GitLab said that, compared to other\ncompanies, one thing stood out the most: everyone here mentioned wanting to see each\nother succeed.\nDon\u02bct let each other fail\nKeep an eye out for others who may be struggling or stuck. If you see someone who needs\nhelp, reach out and assist. This might involve offering to pair program or setting up a sync\nbrainstorming session. The goal is to connect them with someone else who can provide\nexpertise or assistance. We are a team, so we succeed and shine together by supporting\neach other!\nPeople are not their work\nAlways make suggestions about examples of work, not the person. Say \u201cYou didn\u02bct\nrespond to my feedback about the design\u201d instead of \u201cYou never listen\u201d. And, when22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 6/55"
            },
            {
                "page": 7,
                "content": "receiving feedback, keep in mind that feedback is the best way to improve, and that others\ngiving you feedback want to see you succeed.\nDo it yourself\nOur collaboration value is about helping each other when we have questions, need critique,\nor need help. No need to brainstorm, wait for consensus, or do with two what you can do\nyourself. The Bolt Handbook refers to this as the Founder Mentality, where all team\nmembers should approach the problem as if they own the company.\nBlameless problem solving\nInvestigate mistakes in a way that focuses on the situational aspects of a failure\u02bcs\nmechanism and the decision-making process that led to the failure, rather than cast blame\non a person or team. We hold blameless root cause analyses and retrospectives for\nstakeholders to speak up without fear of punishment or retribution.\nShort toes\nPeople joining the company frequently say, \u201cI don\u02bct want to step on anyone\u02bcs toes.\u201d At\nGitLab, we should be more accepting of people taking initiative in trying to improve things.\nAs companies grow, their speed of decision-making goes down since there are more\npeople involved. We should counteract that by having short toes and feeling comfortable\nletting others contribute to our domain. For example, pointed, respectful feedback to a\nproposal by GitLab\u02bcs CEO led to his own merge request being closed. However, it is not\nrequired to respond to comments.\nIt\u02bcs impossible to know everything\nWe know we must rely on others for the expertise they have that we don\u02bct. It\u02bcs OK to admit\nyou don\u02bct know something and to ask for help, even if doing so makes you feel vulnerable.\nIt is never too late to ask a question, and by doing so, you can get the information you need\nto produce results and to strengthen your own skills as well as GitLab as a whole. After\nyour question is answered, please document the answer so that it can be shared.\nDon\u02bct display surprise when people say they don\u02bct know something, as it is important that\neveryone feels comfortable saying \u201cI don\u02bct know\u201d and \u201cI don\u02bct understand.\u201d (As inspired by\nRecurse.)\nCollaboration is not consensus\nWhen collaborating, it is always important to stay above radar and work transparently, but\ncollaboration is not consensus and disagreement is part of collaboration. You don\u02bct need to\nask people for their input, and they shouldn\u02bct ask you \u201cWhy didn\u02bct you ask me?\u201d You don\u02bct22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 7/55"
            },
            {
                "page": 8,
                "content": "have to wait for people to provide input, if you did ask them. You don\u02bct need to have\neveryone agreeing to the same thing - they can disagree, commit, and disagree. Two-way\ndoors decisions can be reversed as part of disagree, commit, and disagree, while one-way\ndoor decisions benefit from more input. Recognize these reversible two-way door\ndecisions for when less input is required to iterate faster. We believe in permissionless\ninnovation\u2014you don\u02bct need to involve people, but everyone can contribute. This is core to\nhow we iterate, since we want smaller teams moving quickly rather than large teams\nachieving consensus slowly.\nCollaboration Competency\nCompetencies are the Single Source of Truth (SSoT) framework for things we need team\nmembers to learn. We demonstrate collaboration when we take action to help others and\ninclude other\u02bcs (both internal and external) input (both help and feedback) to achieve the\nbest possible outcome.\nGitLab\nJob\nGradeDemonstrates Collaboration Competency by\u2026 Knowledge\nAssessment\n5 Develops collaboration skills by learning from other team\nmembersKnowledge\nAssessment for\nIndividual\nContributors6 Grows collaboration skills by using different types of\ncommunication; files issues appropriately, asks in the\nright Slack channels and uses the right labels.\n7 Models collaborative behavior for fellow team members\nand others within the group.\n8 Coaches team members on how to collaborate more\neffectively and pointing team members to the right\nchannels to collaborate.Knowledge\nAssessment for\nPeople Leaders\n9 Fosters collaborative decision making and problem\nsolving across the departments.\n10 Drives team collaboration across divisions/departments,\nsilos, and division boundaries.\n11 Develops networks and builds partnerships, engages in\ncross-functional activities; collaborates across\nboundaries, and finds common ground with a widening\nrange of stakeholders. Utilizes contacts to build and\nstrengthen internal support base22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 8/55"
            },
            {
                "page": 9,
                "content": "12 Leads collaboration and teamwork in daily routines,\nprioritizing interactions, information sharing, and real\ntime decision making across divisions/departments.\nEncourages greater cross-functional collaboration\namong e-team leaders.\n14 Champions collaboration and teamwork into daily\nroutines, prioritizing interactions, information sharing,\nand real time decision making across\ndivisions/departments. Champions cross-functional\ncollaboration among e-team leaders and GitLab.\n\ud83d\udcc8 Results for Customers\nWe exist to help our customers achieve more. Everything we do should be in service of\nmaking our customers successful with GitLab. Results for Customers is at the top of our\nvalues hierarchy, as our customers achieving results drives overall business performance\nthat enables everything else.\nThe Results for Customers value is displayed through the following operating principles:\nSet Ambitious & Measurable goals\nWhile we iterate with small changes, we strive for large, ambitious results. We have an\nambitious mission and vision, and we aim to be the best in the world across all our\nfunctions. Setting ambitious, measurable goals enables us to best deliver customer results.\nWe agree in writing on measurable goals. Within the company we use OKRs to stay\naccountable. We have and report against KPIs with guiding targets.\nUnderstand our customers\nAll GitLab team members should understand our customers\u02bc needs, issues, and value\npropositions. We understand how they use GitLab and what they need from a platform in\norder to meet their goals. Internally facing teams consider the impact of their work as it\npertains indirectly to GitLab\u02bcs customers.\nWe better understand customers and their needs through:\nReviewing public facing GitLab issues from our customers and users\nDogfooding our product to understand the user experience\nReading customer stories from Marketing and Sales\nAttending Customer fireside chats22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 9/55"
            },
            {
                "page": 10,
                "content": "Learning feedback from our customers and users on product features and roadmap\nCo-create\nWe create together with our customers. There is an open dialogue between GitLab and our\ncustomers so that we can better identify what they need. As a result of building a solution\nfor them, we can also bring that solution to the world.\nKeep end users in sight\nOur focus is to increase customer results. At GitLab, one way to drive customer results is\nthrough platform enhancements that drive the most value for direct users. This requires\nbeing aware of the Concur effect.\nArvind Narayanan, a Princeton Professor, described his frustration with Blackboard in a\nviral Tweet:\nIt has every feature ever dreamed up. But like anything designed by a committee, the\ninterface is incoherent and any task requires at least fifteen clicks (and that\u02bcs if you\neven remember the correct sequence the first time).\nSoftware companies can be breathtakingly clueless when there\u02bcs a layer of indirection\nbetween them and their users. Everyone who\u02bcs suffered through Blackboard will have\nthe same reaction to this: try having less functionality!\nRyan Falor followed up on Narayanan\u02bcs tweet with his definition of the Concur Effect:\n\u0000. decision makers are not direct users\n\u0000. features are overwhelming and disjointed\n\u0000. user experience gets worse over time\nSee the Hacker News discussion for a specific UX example.\nAt GitLab, we want to drive customer results through focusing on platform enhancements\nthat drive the most value for direct users.\nCustomer results are more important than:\n\u0000. What we plan to make. If we focus only on our own plans, we would have only\nGitLab.com and no self-managed delivery of GitLab. This does not mean that we will\nagree to every feature request, but we won\u02bct let existing plans be an obstacle to\nworking on what will drive the most customer value.\n\u0000. Large customer requests. Catering to requests from large customers leads to the\ninnovator\u02bcs dilemma, we need to also focus on results for small and future customers.\n\u0000. Our existing scope. For example, when customers asked for better integrations and\ncomplained about integration costs and effort, we responded by expanding our scope22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 10/55"
            },
            {
                "page": 11,
                "content": "to create a single application for the DevOps lifecycle.\n\u0000. Our assumptions. Every company works differently, so we can\u02bct assume that what\nworks well for us will support our customers\u02bc needs. When we have an idea, we must\ndirectly validate our assumptions with multiple customers to ensure we create\nscalable, highly relevant solutions.\n\u0000. What we control. We strive to provide the best possible experience for each of our\ncustomers, and take responsibility for all of the aspects that we can reasonably\ncontrol.\nMeasure impact, not activity\nWe care about what you achieve: the code you shipped, the needle you moved, the user\nyou made happy, and the team member you helped. Someone who took the afternoon off\nshouldn\u02bct feel like they did something wrong, unless it negatively impacted a goal or result\nthey were responsible for. You don\u02bct have to defend how you spend your day if you are\nperforming and delivering against expectations. We trust team members to do the right\nthing instead of having rigid rules. We trust team members to show up and do their best\nwork. Do not incite competition by proclaiming how many hours you worked yesterday. If\nyou are working too many hours, talk to your manager to discuss solutions.\nDogfooding\nWe use our own product in the way our users do to surface improvements that will lead to\nbetter customer results. GitLab is a DevSecOps Platform that can be used by people\nthroughout the business. This is how we use it within GitLab. For example, we use our OKR\nfunctionality company-wide to inform product enhancements and for team members to\nhave a great understanding of the customer experience. We also dogfood in the following\nways:\n\u0000. Our development organization uses GitLab.com to manage the DevOps lifecycle of\nGitLab itself.\n\u0000. All team members use GitLab to collaborate on this handbook.\n\u0000. We capture content and processes in Git repos and manage them with GitLab.\nWhen something breaks, doesn\u02bct work well, or needs improvement, we are more likely to\nnotice it internally and address it before it impacts our larger community.\nGive agency\nWe give people agency to focus on what they think is most beneficial. If a meeting doesn\u02bct\nseem interesting and someone\u02bcs active participation is not critical to the outcome of the\nmeeting, they can always opt to not attend, or during a video call they can work on other\nthings if they want. Staying in the call may still make sense even if you are working on other22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 11/55"
            },
            {
                "page": 12,
                "content": "tasks, so other peers can ping you and get fast answers when needed. This is particularly\nuseful in multi-purpose meetings where you may be involved for just a few minutes.\nChallenger mindset\nChallenging the status quo can lead to remarkable results - we must never stop. A\nchallenger mindset requires that we continually ask ourselves bold, difficult questions\nabout our business the problems we solve while resisting complacency. To succeed we\nmust innovate and delight our customers with the value of the products we build. A\nchallenger mindset requires a relentless pursuit of excellence - we must be tenacious.\nEach win for our customers builds reputational capital we can use to earn the trust of\nprospects in a competitive market. While competition is a feature of capitalism internally as\nGitLab team members we must focus our efforts inwardly on achieving our very best\nresults for customers to win market share.\nGrowth mindset\nYou don\u02bct always get results and this will lead to criticism from yourself and/or others. We\nbelieve our talents can be developed through hard work, targeted training, learning from\nothers, on-the-job experience, and receiving input from others. It is in our DNA as a\ncompany and individuals to look for opportunity, stay humble, and never settle. We try to\nhire people based on their trajectory, not their pedigree. We also strive to foster a culture\nof curiosity and continuous learning where team members are provided and proactively\nseek out opportunities to grow themselves and their careers. We believe that with the right\nexpectations and direction, people can grow to take on new challenges and surpass\nexpectations.\nCross-functional optimization\nOur definition of cross-functional optimization is that you do what is best for the\norganization as a whole. Don\u02bct optimize for the goals of your team when it negatively\nimpacts the goals of other teams, our users, and/or the company. Those goals are also\nyour problem and your job. For example, you may have set a non-urgent functional\nmilestone that is supposed to land at the end of the quarter. If delivering within the last\nweek requires engagement from the GTM teams, the right decision may be to push your\nown team\u02bcs target by a week to reduce the ask for the GTM team as the GTM focuses on\nmeeting its revenue objectives.\nIn the context of collaboration, if anyone is blocked by you on a question, your approval, or\na merge request review, you should prioritize unblocking them, either directly or through\nhelping them find someone else who can.\nEmbrace Tenacity22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 12/55"
            },
            {
                "page": 13,
                "content": "We refer to this as \u201cpersistence of purpose\u201d. As talked about in The Influence Blog, tenacity\nis the ability to display commitment to what you believe in. You keep picking yourself up,\ndusting yourself off, and quickly get going again having learned a little more. We value the\nability to maintain focus and motivation when work is tough and asking for help when\nneeded.\nHave Ownership & Accountability\nWe expect team members to complete tasks that they are assigned. You are responsible\nfor executing with attention to detail, connecting the dots across the organization and\nanticipating and solving problems. As an owner, you are responsible for overcoming\nchallenges, not suppliers or other team members. Take initiative and proactively inform\nstakeholders when there is something you might not be able to solve.\nSense of urgency\nTime gained or lost has compounding effects. Try to get the results as fast as possible, but\nwithout compromising our other values and ways we communicate, so the compounding of\nresults can begin and we can focus on the next improvement.\nOperate with a bias for action\nIt\u02bcs important that we keep our focus on action, and don\u02bct fall into the trap of analysis\nparalysis or sticking to a slow, quiet path without risk. Decisions should be thoughtful, but\ndelivering fast results requires the fearless acceptance of occasionally making mistakes;\nour bias for action also allows us to course correct quickly. Try to get results as fast as\npossible, but without compromising our other values and ways of working\nDisagree, commit, and advocate\nWhen a decision is in place, we expect people to commit to executing it. Any past\ndecisions and guidelines are open to questioning as long as you act in accordance with\nthem until they are changed. This is a common principle. Every decision can be changed;\nour best decision was one that changed an earlier one. In a manager-report relationship,\nusually the report is the Directly Responsible Individuals (DRI). The manager may disagree\nwith the final decision, but they still commit to the decision of the DRI.\nIn a group setting, participants may disagree with a proposal but not articulate their views\nfor one reason or another. Sometimes, many or all individuals may disagree yet choose not\nto speak up, because no one believes they would get agreement from the group. As a\nresult, everyone loses out on their feedback. Dissent is expression of that disagreement.\nHowever, it can be difficult and even socially expensive. Expression of feedback is a way\nfor everyone to grow and learn, and is based on facts rather than opinions. Share your22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 13/55"
            },
            {
                "page": 14,
                "content": "perspective, rather than agreeing simply to avoid conflict or to go along with everyone\nelse.\nWhen you want to reopen the conversation on something, show that your argument is\ninformed by previous conversations and assume the decision was made with the best\nintent. You have to achieve results on every decision while it stands, even when you are\ntrying to have it changed. You should communicate with the DRI who can change the\ndecision instead of someone who can\u02bct.\nEscalate to unblock\nIf there is a disagreement and you can\u02bct move forward because of it, agree to escalate and\nescalate to one or both of your managers. Early escalation, delivered with context of the\nchallenge, enables managers to function as an unblocker.\nResults Competency\nCompetencies are the Single Source of Truth (SSoT) framework for things we need team\nmembers to learn. We demonstrate results when we do what we promised to each other,\ncustomers, users, and investors.\nGitLab Job\nGradeDemonstrates Results Competency by\u2026 Knowledge\nAssessment\n5 Develops the skills needed to commit and\nexecute on agreed actions.Knowledge\nAssessment for\nIndividual Contributors\n6 Applies commitment to results and demonstrates\nability to execute on agreed actions.\n7 Models a sense of urgency and commitment to\ndeliver results.\n8 Coaches team members to collaborate and work\niteratively towards results with the focus on the\noutcome and not hours worked.Knowledge\nAssessment for\nPeople Leaders\n9 Fosters a culture of ownership of personal\nperformance.\n10 Drives efficient execution of results ensuring\ncollaboration between team members.\n11 Develops quarterly OKR's ensuring the\nperformance and results of one or more teams.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 14/55"
            },
            {
                "page": 15,
                "content": "12 Leads the achievement of results while driving\nthe continued alignment to our values of\ncollaboration, efficiency, diversity, iteration and\ntransparency.\nEVP/CXOLeads the achievement of results while driving\nthe continued alignment to our values of\ncollaboration, efficiency, diversity, iteration and\ntransparency.\n\u23f1 Efficiency\nAt GitLab, efficiency means producing results without wasting materials, time, or energy.\nWe optimize solutions globally for the broader GitLab community over one person or a\nsmall group. Focus on efficiency should be global in nature, not just local to a given\nfunction. Global efficiency could include efficiency with customers, candidates, and\ncontributors as well. It is easy to prioritize consistency over efficiency because consistency\nis often more efficient initially and makes managing processes more efficient. We should\nslow down when optimizing for consistency. Taking a company-wide lens when evaluating\nchanges will help ensure that new processes will improve efficiency for GitLab as a whole\nand be the best decision for the company as a whole.\nWhen we work internally with other team members, we leverage GitLab\u02bcs unique working\npractices and operating principles to achieve top efficiency. We do not expect people\noutside of GitLab to conform to GitLab\u02bcs ways of working, and we will make\naccommodations to work effectively with them. For example, we may collaborate heavily\nin-person and not default to async communications.\nOnly Healthy Constraints\nMost companies regress to the mean and slow down over time. While some changes are\nrequired as a company grows and matures, not all change is inevitable or should be\nallowed to passively happen. As GitLab grows, we are conscious of how we operate and\nhow it enables our ability to continue to operate with the agility of a startup. We try to limit\nourselves to healthy constraints.\nWrite things down\nWe document everything: in the handbook, in meeting notes, in issues. We do that\nbecause \u201cthe faintest pencil is better than the sharpest memory.\u201d It is far more efficient to\nread a document at your convenience than to have to ask and explain. Having something in\nversion control also lets everyone contribute suggestions to improve it.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 15/55"
            },
            {
                "page": 16,
                "content": "Boring solutions\nUse the simplest and most boring solution for a problem, and remember that \u201cboring\u201d\nshould not be conflated with \u201cbad\u201d or \u201ctechnical debt.\u201d The speed of innovation for our\norganization and product is constrained by the total complexity we have added so far, so\nevery little reduction in complexity helps. Don\u02bct pick an interesting technology just to make\nyour work more fun; using established, popular tech will ensure a more stable and more\nfamiliar experience for you and other contributors.\nMake a conscious effort to recognize the constraints of others within the team. For\nexample, sales is hard because you are dependent on another organization, and\ndevelopment is hard because you have to preserve the ability to quickly improve the\nproduct in the future.\nSelf-service and self-learning\nTeam members should first search for their own answers and, if an answer is not readily\nfound or the answer is not clear, ask in public as we all should have a low level of shame.\nWrite down any new information discovered and pay it forward so that those coming after\nwill have better efficiency built on top of practicing collaboration, inclusion, and\ndocumenting the results.\nTeam members have more room to grow themselves when they are able to self-service and\nself-learn.\nEfficiency for the right group\nOptimize solutions globally for the broader GitLab community. As an example, it may be\nbest to discard a renewal process that requires thousands of customers to each spend two\nhours in favor of one that only takes sixty seconds, even when it may make a monthly\nreport less efficient internally! In a decision, ask yourself \u201cFor whom does this need to be\nmost efficient?\u201d Quite often, the answer may be your users, contributors, customers, or\nteam members that are dependent upon your decision.\nBe respectful of others\u02bc time\nConsider the time investment you are asking others to make with meetings and a\npermission process. Try to avoid meetings, and if one is necessary, try to make attendance\noptional for as many people as possible. Any meeting should have an agenda linked from\nthe invite, and you should document the outcome. Instead of having people ask\npermission, trust their judgment and offer a consultation process if they have questions.\nSpend company money like it\u02bcs your own22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 16/55"
            },
            {
                "page": 17,
                "content": "Every dollar we spend will have to be earned back. Be as frugal with company money as\nyou are with your own. In saying this, we ask team members to weigh the cost of\npurchases against the value that they will bring to the company.\nConsider the degree to which a purchase increases your ability to better accomplish your\nwork and achieve business results relative to cost. Lowering overhead reduces the cost to\noperate the business and lets us shift spend toward other priority areas.\nWe have guidelines around this operating principle to help team members better\nunderstand our expensing process and expectations.\nFrugality\nAmazon states it best with: \u201cAccomplish more with less. Constraints breed\nresourcefulness, self-sufficiency, and invention. There are no extra points for growing\nheadcount, budget size, or fixed expense.\u201d\nShort verbal answers\nGive short answers to verbal questions so the other party has the opportunity to ask more\nor move on.\nKeep broadcasts short\nKeep one-to-many written communication short, as mentioned in this HBR study: \u201cA\nmajority say that what they read is frequently ineffective because it\u02bcs too long, poorly\norganized, unclear, filled with jargon, and imprecise.\u201d\nManagers of one\nWe want each team member to be a manager of one who doesn\u02bct need daily check-ins to\nachieve their goals. Team members are given the freedom to own projects and initiatives\nand are trusted to see them through to a successful end.\nWhen team members are managers of one they can have an increased work/life balance,\nbecause they are more empowered to make decisions around how they allocate their time\nthroughout each day.\nFreedom and responsibility over rigidity\nWhen possible, we give people the responsibility to make a decision and hold them\naccountable for that, instead of imposing rules and approval processes. You should have\nclear objectives and the freedom to work on them as you see fit. Freedom and\nresponsibility are more efficient than rigidly following a process, or creating22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 17/55"
            },
            {
                "page": 18,
                "content": "interdependencies, because they enable faster decision velocity and higher rates of\niteration.\nWhen team members have freedom and responsibility over rigidity, they have more room to\nhelp others.\nAccept mistakes\nNot every problem should lead to a new process to prevent them. Additional processes\nmake all actions more inefficient; a mistake only affects one. Once you have accepted the\nmistake, learn from it. When team members are free to accept mistakes, they can take\nmore calculated risks.\nMove fast by shipping the minimal valuable change\nWe value constant improvement by iterating quickly, month after month. If a task is not the\nsmallest viable and valuable thing, cut the scope.\nEmbrace change\nAdoption of features, user requirements, and the competitive landscape change frequently\nand rapidly. The most successful companies adapt their roadmap and their organization\nquickly to keep pace. One of the things that makes this challenging is the impact on our\nteam. People may need to change teams, subject matter, or even who manages them. This\ncan rightly feel disruptive. If we coach ourselves to embrace the positive aspects of\nchange, such as increased opportunity and new things to learn, we can move faster as a\ncompany and increase our odds of success. It is important to hold management\naccountable for being deliberate.\nEfficiency Competency\nCompetencies are the Single Source of Truth (SSoT) framework for things we need team\nmembers to learn. We demonstrate efficiency when we work on the right things, not doing\nmore than needed, and not duplicating work.\nGitLab\nJob\nGradeDemonstrates Efficiency Competency by\u2026 Knowledge\nAssessment\n5 Develops an understanding of being a manager of 1 by\ntaking responsibility for your own tasks and delivering on\ncommitments. Brings up ideas for process improvements\nto 1\u00001s. Learns to write everything down as it is far moreKnowledge\nAssessment for\nIndividual\nContributors22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 18/55"
            },
            {
                "page": 19,
                "content": "efficient to read a document at your convenience than to\nhave to ask and explain.\n6 Develops a deeper understanding of efficiency and\nactively identifies process inefficiencies within the team.\nSeeks out ways to be more effective in their role, while\nalso starting to mentor others in ways to work efficiently.\n7 Models a culture of efficiency within the team where\npeople make good, timely decisions using available data\nand assessing multiple alternatives. Models using boring\nsolutions for increasing the speed of innovation for our\norganization and product.\n8Takes ownership of own team process inefficiencies,\nimplements cross team efforts in ensuring things are\nrunning smoothly. Implements a way of working in the\nteam where team members first search for their own\nanswers and, if an answer is not readily found or the\nanswer is not clear, ask in public as we all should have a\nlow level of shame.Knowledge\nAssessment for\nPeople Leaders\n9Takes ownership of group level process inefficiencies\nand guides cross sub-departments in ensuring things are\nrunning smoothly. Fosters a culture in the sub-\ndepartments where you respect others' time and\npromote self-service and self-learning.\n10 Drives the framework of frugality on a department level\nand owns departments efforts in ensuring things are\nrunning smoothly. Drives efficient resolution of highly\ncomplex or unusual business problems that impact the\ndepartment / team. Holds their managers and peers\naccountable for upholding this value.\n11 Develops the framework and strategy of frugality cross\ndivision resulting in efforts ensuring things are running\nsmoothly. Develops leaders to action on\ndivision/department/team inefficiencies. Hold their\nmanagement teams accountable for upholding this value.\n12 Leads with efficiency across the company. Ensures\nefficient resource allocation decisions across the\ncompany. Leads across company strategy and policy\nimprovements that move the business towards more22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 19/55"
            },
            {
                "page": 20,
                "content": "efficiency. They hold their senior management and the e-\ngroup accountable for upholding this value.\nEVP/CXOChampions GitLab's strategy for efficiency internally and\nexternally. Constantly looking for efficiency\nimprovements cross company and holding other e-group\nmembers accountable for upholding efficiency too. They\nare comfortable leading through frugality and accepting\nof mistakes.\n\ud83c\udf10 Diversity, Inclusion & Belonging\nDiversity, inclusion and belonging are fundamental to the success of GitLab. We aim to\nmake a significant impact in our efforts to foster an environment where everyone can\nthrive. We are designing a multidimensional approach to ensure that GitLab is a place\nwhere people from every background and circumstance feel like they belong and can\ncontribute. We actively chose to build and institutionalize a culture that is inclusive and\nsupports all team members equally in the process of achieving their professional goals. We\nhire globally and encourage hiring in a diverse set of countries. We work to make everyone\nfeel welcome and to increase the participation of underrepresented minorities and\nnationalities in our community and company. For example, we celebrate our sponsorship of\ndiversity, inclusion & belonging events.\nBias towards asynchronous communication\nTake initiative to operate asynchronously whenever possible. This shows care and\nconsideration for those who may not be in the same time zone, are traveling outside of\ntheir usual time zone, or are structuring their day around pressing commitments at home or\nin their community.\nThis is demonstrated by communicating recordings of meetings, using GitLab Issues and\nMerge Requests rather than texts, calls, or Slack messages, and being sensitive to local\nholidays and vacation statuses. Encourage others to default to documentation rather than\npressuring others to be online outside of their working hours.\nEmbracing uncomfortable ideas and conversations\nPart of embracing diversity is a willingness to embrace often uncomfortable conversations\nand situations. This concept is also at the core of inclusion and helping to eliminate the\nproblems that are faced by certain GitLab team members who may not be in the majority.\nWe believe that being willing to embrace discomfort is the path forward to a safe, balanced\nand inclusive work place for all. Challenge yourself, challenge your own pre-set notions and22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 20/55"
            },
            {
                "page": 21,
                "content": "ideas about different cultures or things you don\u02bct understand. When we are willing to\nembrace being uncomfortable, we can focus on actually fixing the issues at hand rather\nthan simply \u201cappearing to care\u201d.\nUnderstanding the impact of microaggressions\nMicroaggressions are much more than merely rude or insensitive comments. They can\nwear people down by slowly chipping away their sense of belonging/safety/inclusion over\ntime. What is a microaggression?\n\u201cThe everyday slights, indignities, put downs and insults that people of color, women,\nLGBT populations or those who are marginalized experiences in their day-to-day\ninteractions with people.\u201d - Derald W. Sue\nAt GitLab we believe that everyone is entitled to a safe working space where they can\nexpress who they are and participate in conversations without worry of being spoken to in\na harmful way, given that we want to encourage everyone to be mindful of what is a\nmicroaggression and be mindful of their potential impact.\nSeek diverse perspectives\nWe believe that team members seeking feedback from a diverse group of team members,\ninside and outside of their group or function, leads to better decisions and a greater sense\nof team member belonging. For more guidance on how we define Diversity, please refer to\nGitLab\u02bcs definition of Diversity, Inclusion & Belonging. Feedback from a more heterogenous\ngroup often leads to better business outcomes as we incorporate diverse perspectives and\nuncover unconscious bias.\nAn example of this operating principle in action showcases the value of actively seeking\ndiverse perspectives. The term \u201cBrag Document\u201d was used to describe when individuals\ndocumented their accomplishments. Documenting accomplishments is critical to team\nmember development. However, team members had the psychological safety to raise the\nquestion of whether or not the title of the document made some feel uncomfortable. In an\neffort to seek a diverse perspective, a survey was conducted in one of the Team Member\nand Advocacy Resource Group (TMRG) channels. The poll results showed that 100% of\nthose polled preferred a different title and the title was changed.\nMake family feel welcome\nOne of the unique elements to an all-remote culture is the ability to visit a person\u02bcs home\nwhile collaborating. If the tenor of the meeting allows, feel welcome to invite your family\nmembers or pets to drop by and greet your colleagues. Be mindful of language and use of\nprofanity to encourage a family-friendly environment.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 21/55"
            },
            {
                "page": 22,
                "content": "Shift working hours for a cause\nCaregiving, outreach programs, and community service do not conveniently wait for\nregular business hours to conclude. If there\u02bcs a cause or community effort taking place,\nfeel welcome to work with your manager and shift your working hours to be available\nduring a period where you\u02bcll have the greatest impact for good. For colleagues supporting\nothers during these causes, document everything and strive to post recordings so it\u02bcs easy\nfor them to catch up.\nBe a mentor\nPeople feel more included when they\u02bcre supported. To encourage this, and to support\ndiversified learning across departments, consider GitLab\u02bcs Internship for Learning program.\nCulture fit is a bad excuse\nWe don\u02bct hire based on culture or select candidates because we\u02bcd like to have a drink with\nthem. We hire and reward team members based on our shared values as detailed on this\npage. We want a values fit, not a culture fit. We want cultural diversity instead of cultural\nconformity. Said differently: \u201cculture add\u201d > \u201cculture fit\u201d or \u201chire for culture contribution\u201d\nsince our mission is that everyone can contribute.\nReligion and politics at work\nWe generally avoid discussing politics or religion in public forums because it is easy to\nalienate people that have a minority opinion. This doesn\u02bct mean we never discuss these\ntopics. Because we value diversity, inclusion and belonging, and want all team members to\nfeel welcome and contribute equally, we encourage free discussion of operational\ndecisions that can move us toward being a more inclusive company. GitLab also publicly\nsupports pro diversity, inclusion & belonging activities and events.\nThere is sometimes a grey area where advocating for diversity and political activities may\nintersect. Team members should use discretion in grey area communications, because a\nculture of belonging requires us to be respectful of the broad spectrum of views within our\nwork environment. What does this mean in practice? Please feel empowered to share\ninformation that highlights diversity, inclusion and belonging issues and how GitLab and\nGitLab team members can get involved. In line with our Code of Business Conduct and\nEthics, avoid posting articles that reference specific political figures or parties.\nWhile it is acceptable for individuals to bring up politics and religion in social contexts such\nas coffee chats and real-life meetups with other coworkers (with the goal to understand\nand not judge), always be aware of potential sensitivities, exercise your best judgment, and\nmake sure you stay within the boundaries of our Code of Business Conduct and Ethics.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 22/55"
            },
            {
                "page": 23,
                "content": "We\u02bcre a global company where perspectives and local norms may differ from culture to\nculture. Diversity, inclusion and belonging is about broad inclusion at a worldwide level. If\nthere is a question or concern, please reach out to diversityinclusion@gitlab.com or\n#diversity_inclusion_and_belonging.\nQuirkiness\nUnexpected and unconventional things make life more interesting. Celebrate and\nencourage quirky gifts, habits, behavior, and points of view. Open source is a great way to\ninteract with interesting people. We try to hire people who think work is a great way to\nexpress themselves.\nBuilding a safe community\nDo not make jokes or unfriendly remarks about characteristics of the people who make up\nGitLab and how they identify. Everyone has the right to feel safe when working for GitLab\nand/or as a part of the GitLab community. We do not tolerate abuse, harassment,\nexclusion, discrimination, or retaliation by/of any community members, including our team\nmembers. You can always refuse to deal with people who treat you badly and get out of\nsituations that make you feel uncomfortable.\nUnconscious bias\nWe recognize that unconscious bias is something that affects everyone and that the effect\nit has on us as humans and our company is large. We are responsible for understanding\nour own implicit biases and helping others understand theirs. We are continuously working\non getting better at this topic.\nInclusive benefits\nWe list our Parental Leave publicly so people don\u02bct have to ask during interviews.\nInclusive language & pronouns\nUse inclusive language. For example, prefer \u201cHi everybody\u201d or \u201cHi people\u201d to \u201cHi guys\u201d,\nand \u201cthey\u201d instead of \u201che/she\u201d. While there are several good guides from folks like 18f,\nUniversity of Calgary, and Buffer on using inclusive language, we don\u02bct keep an exhaustive\nlist. When new possibly non-inclusive words arise, we prefer to be proactive and look for\nan alternative. If your goal is to be inclusive, it is more effective to make a small adjustment\nin the vocabulary when some people have a problem with it, rather than making a decision\nto not change it because some people don\u02bct think it is a problem. And if you make a\nmistake (e.g. accidentally using the wrong pronoun or an outdated phrase), acknowledge\nit, apologize gracefully and move on; there is no need to dwell on it, and you can work to\navoid making that mistake in the future. Please also visit our Gender and Sexual-orientation22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 23/55"
            },
            {
                "page": 24,
                "content": "Identity Definitions and FAQ page if you have questions around pronouns and other topics\nrelated to gender / sexual orientation.\nLearn how to pronounce other people\u02bcs names\nWe attach part of our identity to our names, and if it is mispronounced it can feel less\ninclusive. If it happens repeatedly, you may be unintentionally sending a message to that\nperson that you are not interested in learning how to pronounce their name correctly. This\napplies to everyone you are in contact with: team members, customers, candidates for\njobs, and anyone else.\nPeople whose name is repeatedly mispronounced might feel unimportant or self-\nconscious, and might not speak up about it. Other negative behaviors include giving a\nperson a nickname without their permission, or actively avoiding using their name in sync\ncalls.\nIt might be challenging to pronounce names from a different language or culture than your\nown, but with some effort, name pronunciation can be learned by anyone. Some ways to\nachieve this are:\nAsk the person for help in a private space: \u201cI\u02bcm sorry, I don\u02bct think I am pronouncing\nyour name correctly. Can you help me with the correct pronunciation?\u201d\nUse the written and recorded pronunciation tools in Slack.\nUse online tools such as videos recorded on YouTube or NameShouts.\nPractice the pronunciation with a friend or team member who knows the correct\npronunciation.\nAlways avoid making jokes or comments about how it is difficult to pronounce their\nname.\nUse of nicknames\nSome people might choose to use a nickname, for example: \u201cBob\u201d instead of \u201cRobert\u201d. As\nlong as this is their choice this is perfectly acceptable. We should avoid assigning a\nnickname to a person without their permission.\nSlack pronunciation features\nSlack has two features to help with this issue: the phonetic name pronunciation field and\nthe ability to record your own name pronunciation audio clip. We encourage all team\nmembers to complete both of these. Update them by editing your profile.\nInclusive interviewing\nThis is documented on our page about interviewing.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 24/55"
            },
            {
                "page": 25,
                "content": "Inclusive meetings\nBe consciously inclusive in meetings by giving everyone present an opportunity to talk and\npresent their points of view. This can be especially important in a remote setting.\nWith internal meetings, consider using an agenda document for questions. For example,\nwith GitLab Group Conversations, every meeting has a numbered list that GitLab team\nmembers can add questions to. During the meeting, questions are answered in turn and\ndiscussions noted in the same document. Sometimes, these documents can have so much\ntraffic (during the meeting) such that only a limited number of people can edit the\ndocument. In these situations, those who have questions should post on zoom chat and\nthose who can edit the document should help copy the question over to the document. In\naddition, those who can edit the document should also post in zoom chat to see if anyone\nhas any questions that they could help add to the document so that meeting attendees are\nmore empowered to contribute to the conversation.\nCustomers are not used to working in this way. To promote inclusion with customers: ask\nparticipants for their goals; make sure during demos that you pause for question; leave\ntime for discussion.\nInclusive and fair policy to regions with fewer employees\nBeing globally distributed has the benefit that someone can cover for you when you are off\nwork. However, population density is not balanced across timezones. Policies should\nremain fair to those in less dense regions.\nFor example, the Asia Pacific region covers more timezones but has fewer team members.\nIf we use an algorithm to assign tasks to those in later timezones, all American tasks would\nfall on the fewer Asia Pacific employees. This can damage belonging and inclusivity and\nshould be avoided.\nWhen planning an event, the organizer should cater for location density differences to\nmaximize participation in all regions.\nSee Something, Say Something\nAs a globally-dispersed company, we have team members from many different\nbackgrounds and cultures. That means it is important for each of us to use great judgment\nin being respectful and inclusive of our teammates. At the same time, we may sometimes\nnot fully realize we have said or done something to offend someone. It is important that our\nteammates hold each other accountable and let them know if they have unintentionally or\nintentionally done something so they can learn and gain additional understanding of\nperspectives different from our own. It is also important that our teammates don\u02bct feel\nexcluded or minimized by the words we use or the things we do. Thus, we all need to speak\nup when we see something that isn\u02bct respectful or inclusive.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 25/55"
            },
            {
                "page": 26,
                "content": "Embracing Neurodiversity\nNeurodiversity refers to variations in the human brain regarding learning, attention,\nsociability, mood, and other mental functions. There are various neurodevelopmental\nconditions, like autism, ADHD, dyslexia, dyscalculia, dyspraxia, cognitive impairment,\nschizophrenia, bipolarity, and other styles of neurodivergent functioning. While\nneurodivergent individuals often bring unique skills and abilities which can be harnessed\nfor a competitive advantage in many fields (for example, cybersecurity), neurodivergent\nindividuals are often discriminated against. Due to non-inclusive hiring practices, they\nsometimes have trouble making it through traditional hiring processes. Neurodiversity\ninclusion best practices benefit everyone, and at GitLab, everyone can contribute. The\nhandbook, values, strategy, and interviewing processes must support the ability for\neveryone to thrive.\nAt GitLab we embrace Neurodiversity through adopting a variety of different work styles\nand communication styles, and we lean into transparency, asynchronous as a default\nworking style, and pre-filled meeting agendas. These best practices become even more\nimportant when embracing neurodiversity. Providing multiple ways to consume information\n(written / video / audio) allows everyone to contribute independent of their preferred\ncomprehension style. It is important to ask team members specifically what their preferred\ncommunication method is in order to provide them information in a format that is easily\nconsumable for them.\nRemember, brains work differently and always assume positive intent, even if someone\nbehaves in an unexpected way. While it may be an unexpected behavior to you, it may not\nbe unexpected to the individual exhibiting the behavior. That is the beauty and value of\ndiversity, embracing differences and becoming stronger and better as a result.\nWe also recommend that all team members review the Reasonable Accommodation\nprocess. A Reasonable Accommodation for a team member could include noise-cancelling\nheadphones, scheduling smaller group session zoom calls, providing very explicit and\nprecise instructions and due-dates when given tasks, or providing a variety of supportive\nsoftware tools.\nThe most important thing that managers can do is facilitate an environment in which all\nteam members feel psychologically safe enough to make requests for what they need in\norder to do their job.\nFamily and friends first, work second\nLong-lasting relationships are the rocks of life, and come before work. As someone said in\nour #thanks channel after helping a family member for five days after a hurricane: \u201cTHANK\nYOU to GitLab for providing a culture where \u201cfamily first\u201d is truly meant\u201d. Use the hashtag:\n#FamilyAndFriends1st22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 26/55"
            },
            {
                "page": 27,
                "content": "Equity not just equality\nEquity vs. Equality: What\u02bcs the Difference?\nWhile the terms equity and equality may sound similar, the implementation of one\nversus the other can lead to dramatically different outcomes for marginalized people.\nEquality means each individual or group of people is given the same resources or\nopportunities. Equity recognizes that each person has different circumstances and\nallocates the exact resources and opportunities needed to reach an equal outcome.\nDiversity, Inclusion & Belonging Competency\nCompetencies are the Single Source of Truth (SSoT) framework for things we need team\nmembers to learn. We demonstrate diversity, inclusion and belongings when we foster an\nenvironment where everyone can thrive and ensuring that GitLab is a place where people\nfrom every background and circumstance feel like they belong and can contribute.\nIf you would like to improve your skills or expand your knowledge on topics relating to\nDiversity, Inclusion, & Belonging at GitLab, check out our resources:\nBeing an Ally\nBeing Inclusive\nRecognizing Bias\nGitLab\nJob\nGradeDemonstrates Diversity\n& Inclusion Competency\nby\u2026Demonstrates DIB Behaviors\nby\u2026\n(Should not be considered an\nexhaustive list)Knowledge\nAssessment\n4 Learns to understand the\nimpact of biases.\nGathering more\ninformation about the\nskills needed to be\naccountable for their\nactions, apologizes and\nlearn.\n5 Develops an\nunderstanding of the\nimpact of biases; seeks to\nlearn more about their\nown biases. Is\naccountable for theirDIB training and/or other\ncompany wide training to\nfurther education on DIB\nAttend DIB Initiatives Calls\nto stay informed andKnowledge\nAssessment\nfor Individual\nContributors22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 27/55"
            },
            {
                "page": 28,
                "content": "actions, apologizes and\nlearns from their\nmistakes.connected with ongoing\nefforts and discussions\nParticipate in a DIB\nInitiative: join TMRGs you\nidentify with, support other\ngroups as an Ally, attend\nevents, \"like\" slack posts\nand spread the word\nParticipate in a TMRG\ninitiative\nMember of a working\ngroup related to a DIB\ninitiative, e.g. participate in\na Mentorship program6 Has a growing\nunderstanding of the\nimpact of biases; fosters\na sense of inclusion and\nbelonging on their team.\nHolds themselves and\npeers accountable for\nupholding this value by\nkindly pointing out when\nmistakes might be made.\nEncourages an inclusive\nteam environment where\ndifferences are\nencouraged and everyone\ncan contribute.\n7 Actively aware of how\nbias or exclusion might\noccur on a team and\nhelps to facilitate a team\nenvironment where team\nmembers belong and feel\nsafe. Models empathy\nwith their interactions\nwith customers and cross\nfunctional team\nmembers.\n8 Implements best\npractices to limit bias on\ntheir team. They ensure\nblameless accountability\nis practiced throughout\ntheir team. Creates an\nenvironment where team\nmembers feel safe to\nshare ideas and\nwelcomes individual\ndifferences.DIB training and/or other\ncompany wide training to\nfurther education on DIB\nAttend DIB Initiatives Calls\nto stay informed and\nconnected with ongoing\nefforts and discussions\nParticipate in a DIB\nInitiative: join TMRGs you\nidentify with, support other\ngroups as an Ally, attendKnowledge\nAssessment\nfor People\nLeaders22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 28/55"
            },
            {
                "page": 29,
                "content": "events, like posts and\nspread the word\nParticipate in a TMRG\ninitiative\nMember of a working\ngroup related to a DIB\ninitiative, e.g. participate in\na Mentorship program\nHiring Manager ensure a\ndiverse candidate slate and\ninterview panel\nActive participant and\nadvocate for department\nDIB goals9 Proactively finds ways of\nfacilitating an inclusive\nteam environment and\nassesses processes to\nprotect against\nunconscious bias. They\nhold their team members\naccountable including\ncross functional\nstakeholders. Promotes\nindividual differences\nacross their team and\nother departments.\n10 Drives diversity, inclusion\nand sense of belonging\nacross their department.\nThey hold their managers\nand peers accountable\nfor upholding this value.\nThey are actively involved\nin the execution of D&I\nstrategies and encourage\nothers to participate.Black is Tech, Grace\nHopper\n11 Embeds the value of\nDiversity & Inclusion\nacross their division and\nfinds opportunities to\nlimit the impact of bias on\ndecision making\nprocesses. Uses\nfeedback and data to\nformulate a strategy on\nhow to make\nimprovements. They hold\ntheir management teams\naccountable for\nupholding the value.\n12 Leads with the value of\nDiversity & Inclusion\nacross the company andDIB Team & Leadership DIB\nCouncil to establish an22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 29/55"
            },
            {
                "page": 30,
                "content": "finds opportunities to\nlimit the impact of bias on\ndecision making\nprocesses. They sponsor\ninternal initiatives to\nincrease trust,\npsychological safety and\ninclusion. They hold their\nsenior management and\nthe e group accountable\nfor upholding this value.action plan for your\ndepartments & division\nServe as an TMRG\nexecutive sponsor\nEmbed DIB into All hands\nor in person events\ne.g.review organizations\nOKR as it relates to DIB\nprogress, champion\ntrainings related to further\nDIB knowledge, invite\nguest speakers to\nadvocate\nEVP/CXOChampions the value of\nDiversity, Inclusion and\nBelonging into the\ncompany's strategy. They\nchampion and sponsor\ninternal and external D&I\ninitiatives. They speak to\nthe importance of this\nvalue in company-wide\nmeetings. They hold their\nleaders and other e group\nmembers accountable for\nupholding this value.\nThey continuously seek\nways to increase trust,\npsychological safety and\ninclusion across the\nbroader company.Yearlies initiative focused\non continuing to build a\ndiverse team of top talent\nthat we retain and grow\nAdvocate and Integrate DIB\ninto your organizational\nKPIs/OKRs, e.g.OKR:\ncontinue to build and grow\na diverse\nworkforce/organization\nPartner with the DIB Team\n& Leadership DIB Council\nto establish an action plan\nfor your departments &\ndivision\nServe as a TMRG executive\nsponsor\nEmbed DIB into All hands\nor in person events\ne.g.review organizations\nOKR as it relates to DIB\nprogress, champion\ntrainings related to further\nDIB knowledge, invite\nguest speakers to\nadvocate22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 30/55"
            },
            {
                "page": 31,
                "content": "\ud83d\udc63 Iteration\nMerriam-Webster defines iteration as the \u201cthe action or a process of iterating or repeating:\nsuch as a procedure in which repetition of a sequence of operations yields results\nsuccessively closer to a desired result.\u201d At GitLab, we iterate to do the smallest viable and\nvaluable thing, and get it out quickly for feedback. This thing may be additive (adding\nsomething) or subtractive (removing something). If you make suggestions that can be\nexcluded from the first iteration, turn them into a separate issue that you link. While you\nshould have a clear vision of the desired outcome, don\u02bct write a large plan; only write the\nfirst step. Trust that you\u02bcll know better how to proceed after something is released. You\u02bcre\ndoing it right if you\u02bcre slightly embarrassed by the minimal feature set shipped in the first\niteration. This value is the one people most underestimate when they join GitLab. The\nimpact both on your work process and on how much you achieve is greater than\nanticipated. In the beginning, it hurts to make decisions fast and to see that things are\nchanged with less consultation. But frequently, the simplest version turns out to be the\nbest one.\nPeople that join GitLab all say they already practice iteration. But this is the value that is the\nhardest to understand and adopt. People are trained that if you don\u02bct deliver a perfect or\npolished thing, there will be a problem. If you do just one piece of something, you have to\ncome back to it. Doing the whole thing seems more efficient, even though it isn\u02bct. If the\ncomplete picture is not clear, your work might not be perceived as you want it to be\nperceived. It seems better to make a comprehensive product. They see other GitLab team\nmembers being really effective with iteration but don\u02bct know how to make the transition,\nand it\u02bcs hard to shake the fear that constant iteration can lead to shipping lower-quality\nwork or a worse product. It is possible to ship a minimally viable product while continuing\nto adhere to the documented quality standards.\nThe way to resolve this is to write down only what value you can add with the time you\nhave for this project right now. That might be 5 minutes or 2 hours. Think of what you can\ncomplete in that time that would improve the current situation. Iteration can be\nuncomfortable, even painful. If you\u02bcre doing iteration correctly, it should be. Reverting work\nback to a previous state is positive, not negative. We\u02bcre quickly getting feedback and\nlearning from it. Making a small change prevented a bigger revert and made it easier to\nrevert.\nHowever, if we take smaller steps and ship smaller, simpler features, we get feedback\nsooner. Instead of spending time working on the wrong feature or going in the wrong\ndirection, we can ship the smallest product, receive fast feedback, and course correct.\nPeople might ask why something was not perfect. In that case, mention that it was an\niteration, you spent only \u201cx\u201d amount of time on it, and that the next iteration will contain \u201cy\u201d\nand be ready on \u201cz\u201d.\nIteration enables results and efficiency22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 31/55"
            },
            {
                "page": 32,
                "content": "In the GitLab Unfiltered video embedded above, GitLab CEO and co-founder Sid Sijbrandij\nshares key operating principles to reinforce iteration in an organization.\nStart with a long-term vision\nIteration involves driving results in pursuit of a long-term vision. While the intermediate\ngoals may change as we iterate, we are unlikely to be successful if we don\u02bct start with a\nvision of what we are working toward. Shipping that vision in iterations allows us to learn\nfrom customers using it and adjust the vision if needed. Iteration for the sake of iteration\ncan lead to inefficiencies and not deliver desired results.\nDon\u02bct wait\nDon\u02bct wait. When you have something of value like a potential blog post or a small fix,\nimplement it straight away. Right now, everything is fresh in your head and you have the\nmotivation. Inspiration is perishable. Don\u02bct wait until you have a better version. Don\u02bct wait\nuntil you record a better video. Don\u02bct wait for an event (like Contribute). Inventory that isn\u02bct\nreleased is a liability since it has to be managed, becomes outdated, and you miss out on\nthe feedback you would have received had you implemented it straight away. When we\ndon\u02bct wait we signal intent to others that we have a purpose to resolve something.\nIterate toward global maximum\nIf we are not aware of interdependencies beyond our team and collaborating with others\nacross the organization, we risk deliverables that settle into a \u201clocal maxima\u201d of quality,\nrichness, and efficiencies. This localization is largely defined by team structure and\norganizational boundaries. While an iteration can take place within a single team, that team\nis responsible for identifying inter-dependencies and proactively communicating andHow t o do iter ation with Car ol Teskey & Sid How t o do iter ation with Car ol Teskey & Sid22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 32/55"
            },
            {
                "page": 33,
                "content": "aligning with other teams working on related projects. This helps ensure that iterations are\nnot \u201chalf-baked\u201d and align with work being done across the broader organization.\nSet a due date\nWe always try to set a due date. If needed, we cut scope. If we have something planned for\na specific date, we make that date. For example we shipped over 133 monthly releases. But\nevery one of them doesn\u02bct contain all the features we planned. If we planned an\nannouncement for a certain date, we might announce less or indicate what is still\nuncertain. But we set a due date because having something out there builds trust and\ngives us better feedback.\nCleanup over sign-off\nAs discussed in Sid\u02bcs interview on iteration, waiting for approval can slow things down. We\ncan prevent this with automation (e.g. tests of database migration performance) or clean-\nup after the fact (refactor a Pajamas if something was added that isn\u02bct coherent), but we\ntry to ensure that people don\u02bct need to wait for sign-off.\nStart off by impacting the fewest users possible\nIf you do a gradual rollout of your change prefer: few users over many users, internal users\n(dogfooding) over external ones, environments you get faster feedback about (SaaS) over\nlow feedback ones (self-managed), etc.\nReduce cycle time\nShort iterations reduce our cycle time.\nWork as part of the community\nSmall iterations make it easier to work with the wider community. Their work looks more\nlike our work, and our work is also quicker to receive feedback.\nMinimal Valuable Change (MVC)\nWe encourage MVCs to be as small as possible. Always look to make the quickest change\npossible to improve the user\u02bcs outcome. If you validate that the change adds more value\nthan what is there now, then do it. This may be additive (adding something) or subtractive\n(removing something). No need to wait for something more robust. More information is in\nthe product handbook, but this applies to everything we do in all functions. Specifically for\nproduct MVCs, there is additional responsibility to validate with customers that we\u02bcre\nadding useful functionality without obvious bugs or usability issues.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 33/55"
            },
            {
                "page": 34,
                "content": "Make a proposal\nIf you need to decide something as a team, make a concrete proposal instead of calling a\nmeeting to get everyone\u02bcs input. Having a proposal will be a much more effective use of\neveryone\u02bcs time. Every meeting should be a review of a proposal. We should be\nbrainwriting on our own instead of brainstorming out loud. State the underlying problem so\nthat people have enough context to propose reasonable alternatives. The people that\nreceive the proposal should not feel left out and the person making it should not feel bad if\na completely different proposal is implemented. Don\u02bct let your desire to be involved early or\nto see your solution implemented stand in the way of getting to the best outcome. If you\ndon\u02bct have a proposal, don\u02bct let that stop you from highlighting a problem, but please state\nthat you couldn\u02bct think of a good solution and list any solutions you considered.\nBy making a proposal you also provide better visibility into the work and the context\nsurrounding it.\nIn this GitLab Unfiltered video, GitLab CEO and co-founder Sid Sijbrandij converses about\niteration in engineering, leveraging proposals to break work into smaller components.\nEverything is in draft\nAt GitLab, we rarely mark any content or proposals as drafts. Everything is always in draft\nand subject to change. When everything is in draft, contributions from team members as\nwell as the wider community are welcomed. By having everything in draft and assuming\nothers have low context, confusion can be reduced as people have shared access to\ninformation.\nUnder construction\nAs we get more users, they will ask for stability, especially in our UX. We should always\noptimize for the long term. This means that users will be inconvenienced in the short term,\nbut current and future users will enjoy a better product in the end.\nEducating users on the longer-term plan helps create a shared understanding of how a\nsmall change will incrementally grow into something more. For example, we could share\nhow a dropdown will evolve into a much more nuanced solution in the future. We can take\nthe following steps to articulate our plan:\n\u0000. Open a feedback issue that provides context about the initial MVC (example)\n\u0000. Ensure the direction page articulates a long-term plan (example)\n\u0000. Announce the MVC in a release post, link to the feedback issue, and link to the\ndirection page (example)\nLow level of shame22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 34/55"
            },
            {
                "page": 35,
                "content": "When we talked to Nat Friedman, he said: \u201cA low level of shame is intrinsic to your culture.\u201d\nThis captures the pain we feel by shipping something that isn\u02bct where we want it to be yet.\nGitLab Head of Remote Darren M. adds context on this operating principle.\nIn many organizations, you take a risk when you put forth any work that\u02bcs not perfect \u2014\nwhere you haven\u02bct spent endless cycles planning for contingencies or counterpoints.\nBecause of this, you\u02bcre incentivized to invest a lot of time and effort into preparing for\n\u2018What if?\u02bc scenarios before any work is presented.\nThe downside to that is clear. If you do eventually put forth the work, but it needed to be\ncourse corrected a long time ago, you\u02bcve now squandered a lot of time that you could\nhave spent improving it via iteration.\nHaving a low level of shame requires you to combat a natural inclination to conceal work\nuntil it\u02bcs perfect, and instead celebrate the small changes.\nCultural lens\nCultural differences can bring unique challenges and expectations to iteration. For some,\nexpressions like \u201cit doesn\u02bct have to be perfect\u2026\u201d can challenge cultural norms. We\nencourage you to bring your authentic self and seek shared understanding when iterating.\nGiving feedback and ensuring psychological safety are necessary for every iterative\nattempt.\nFocus on improvement\nWe believe great companies sound negative because they focus on what they can improve,\nnot only on what is working well. In every conversation, inside and outside the company, we\nshould ask a question: What do you think we can improve? This doesn\u02bct mean we don\u02bct\nrecognize our successes; for example, see our Say Thanks value.\nWe are positive about the future of the company. We are Short Term Critical And Long\nTerm Optimistic (STeCALTO, for short).\nBe deliberate about scale\nFirst, optimize for speed and results (and be deliberate about how your change affects\nother processes/functionality); when it is a success, figure out how to scale it. Great\nexamples are in this article by Paul Graham.\nResist bundling\nResist the urge to bundle a series of smaller iterations so team members don\u02bct see a\nproject as their last (or best) opportunity to contribute. It\u02bcs tempting to create22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 35/55"
            },
            {
                "page": 36,
                "content": "encompassing projects or initiatives that roll many smaller projects up. This incarnation of\nscope creep drives up cost, encourages fewer risks, and incentivizes perfection (via longer\ncycle times) over progress. When we resist bundling, we reduce the risk that work will be\ncanceled due to scale or scope. By resisting bundling we also reduce the coordination\nneeded because fewer people or teams may be involved.\nMake two-way door decisions\nMost decisions are easy to reverse. In these cases, the Directly Responsible Individual\nshould go ahead and make them without approval. Only when you can\u02bct reverse them\nshould there be a more thorough discussion. By embracing iteration and making two-way\ndoor decisions, we are more efficient and achieve more results.\nChanging proposals isn\u02bct iteration\nChanging something without shipping it is a revision, not iteration. Only when the change is\nrolled out to users can you learn from feedback. When you\u02bcre changing a proposal based\non different opinions, you\u02bcre frequently wasting time; it would be better to roll out a small\nchange quickly and get real world feedback. Never call a revision an iteration because it is\nalmost the opposite.\nA few challenges have arisen with how we approach iteration. The best example may be\nthe proposal of a two-month release cycle. The argument was that a longer release cycle\nwould buy us time for bug fixes and feature development, but we don\u02bct believe that is the\ncase. As detailed above, we aim to make the absolute smallest viable and valuable thing\npossible, and that doing otherwise will only slow us down.\nThat said, we would love to work on a two-week release cycle, but that should be another\nconversation.\nEmbracing Iteration\nIn order to embrace iteration, we should have the attitude that we are trying to achieve as\nmuch as possible in a small amount of time; it\u02bcs where we are at the end state of an\niteration, that counts. The benefit of iteration is to get feedback from the end-user. Focus\non sharing context on the end of the first iteration rather than a hypothetical future state\nrequiring multiple iterations. By embracing iteration we can increase creativity in\nincremental components.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 36/55"
            },
            {
                "page": 37,
                "content": "Make small merge requests\nWhen you are submitting a merge request for a code change, or a process change in the\nhandbook, keep it as small as possible. If you are adding a new page to the handbook,\ncreate the new page with a small amount of initial content, get it merged quickly via\nHandbook Usage guidelines, and then add additional sections iteratively with subsequent\nmerge requests. Similarly, when adding features to GitLab, consider ways to reduce the\nscope of the feature before creating the merge request to ensure your merge request is as\nsmall as possible.\nAlways iterate deliberately\nRapid iteration can get in the way of results if it\u02bcs not thought out; for example, when\nadjusting our marketing messaging (where consistency is key), product categories (where\nwe\u02bcve set development plans), organizational structure or product scope alignment (where\nreal human stresses and team stability are involved), sales methodologies (where we\u02bcve\ntrained our teams) and this values page (where we use the values to guide all GitLab team\nmembers). In those instances, we add additional review to the approval process; not to\nprohibit, but to be more deliberate in our iteration. The change process is documented in\nthe GitLab Handbook Usage page and takes place via merge request approvals.\nSee it in action\nIteration is so important to GitLab that the CEO hosted Iteration Office Hours to provide\nguidance and assist in breaking large, complex topics into MVCs and smaller iterations of\nwork.GitLab CEO and CFO with the Learning & De velopment Team discuss E GitLab CEO and CFO with the Learning & De velopment Team discuss E \u2026\u202622/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 37/55"
            },
            {
                "page": 38,
                "content": "\u0000. 2019-11-19\n\u0000. 2020-01-15\n\u0000. 2020-01-17\n\u0000. 2020-02-18\nYou can view these on our GitLab Unfiltered YouTube channel.\nExamples of iteration in other companies\nIteration is a key value in many disruptive and successful organizations. Below are some\nexamples:\nSpaceX\n12 things that are not iteration\nIteration is often counterintuitive and difficult to do. To clarify what an iteration is, it helps\nto see examples of what is not an iteration. Below are 12 examples of things we\u02bcve seen\nmistaken as iteration, but don\u02bct meet our definition of iteration.\n\u0000. Reducing quality\n\u0000. Avoiding or reducing documentation\n\u0000. Compromising on security\n\u0000. Delivering something that\u02bcs not the recommended path or on by default\n\u0000. Shipping something of no value\n\u0000. An excuse to focus on unimportant items\n\u0000. Changing or lowering goal posts\n\u0000. Revisions you don\u02bct ship or publish\n\u0000. An excuse to impose unrealistically tight timelines\n\u0000\u0000. An excuse to avoid planning\n\u0000\u0000. Imposing long hours\n\u0000\u0000. Expecting others to fix your work\nIn this GitLab Unfiltered video, GitLab co-founder and CEO Sid Sijbrandij elaborates on\neach of these 12 things that are not iteration.\nIteration Competency\nCompetencies are the Single Source of Truth (SSoT) framework for things we need team\nmembers to learn. We demonstrate iteration when we do the smallest viable and valuable\nthing, get it out quickly for feedback, and make changes based that feedback.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 38/55"
            },
            {
                "page": 39,
                "content": "GitLab\nJob\nGradeDemonstrates Iteration Competency by\u2026 Knowledge\nAssessment\n5 Develops own knowledge by trying and failing. When\nasking questions isn't content with silence or\nunhelpful/incomplete responses, seeks out primary\nsources.Knowledge\nAssessment for\nIndividual\nContributors\n6 Actively looks for opportunities to iterate and contribute\nto boring solutions. Balances short term gains and long\nterm benefit with team's help. Ships things that aren't\n100% knowing that you'll be able to improve them in the\nnext revision. Asks questions with abandon. Publicly\nshares failures if you'll help colleagues learn.\n7 Independently balances short term gains and long term\nbenefit. Identifies opportunities to deliver projects in an\niterative way.\n8 Is able to take long term goals and turn them into small\nactionable steps that can be implemented in an iterative\nway. Identifies and prevents decisions that are not \"two-\nway door decisions\". Ships. All the time. Sounds like a\nbroken record in discussions with more junior members\nof the team; always asking if we can make something\nsmaller.Knowledge\nAssessment for\nPeople Leaders\n9 In addition to upholding the requirements of a\nStaff/Manager level, a Principal/Sr. Manager practices\nand fosters the value of iteration to team members. They\nhold their team members accountable for iteration and\nboring solutions.\n10 In addition to upholding the requirements of a\nPrincipal/Sr. Manager, a Distinguished/Director\nproactively finds ways to drive the value of iteration and\nboring solutions.\n11 In addition to upholding the requirements of a\nDistinguished/Director , a Sr. Distinguished/Sr. Director\nembeds the value of Iteration across the department and\ndivision. They use their cognitive and analytical abilities\nto anticipate and adapt to unpredictabilities in regard to\nstrategic risk in a way that benefits all involved.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 39/55"
            },
            {
                "page": 40,
                "content": "12 In addition to upholding the requirements of a Sr.\nDistinguished/Sr. Director , a Fellow/VP leads the way for\nthe value of Iteration across the division and cross\nfunctional teams. They confidently lead their teams\nthrough change and proactively take risks based on\nvalues and the strategic vision.\nEVP/CXOIn addition to upholding the requirements of a Fellow/VP,\nthe EVP champions the value of Iteration across GitLab.\nThey are comfortable leading through discomfort and\nthe unease associated with change and innovation.\n\ud83d\udc41 Transparency\nBe open about as many things as possible. By making information public, we can reduce\nthe threshold to contribution and make collaboration easier. Use public issue trackers,\nprojects, and repositories when possible. Transparency is not communication. Just\nbecause something exists in the handbook or elsewhere doesn\u02bct mean it can\u02bct be\ncommunicated again or in a more robust fashion to the people who need to understand or\nacknowledge it. On a personal level, be direct when sharing information, and admit when\nyou\u02bcve made a mistake or were wrong. When something goes wrong, it is a great\nopportunity to say \u201cWhat\u02bcs the kaizen moment here?\u201d and find a better way without hurt\nfeelings.\nEven as a public company, we know that our value of transparency will be key to our\nsuccess. This value can be hard to follow at times. You might ask yourself: what should be\nshared, how much to share, whether or not to speak up but definitely take the time to\nalways opt for maximum transparency by adhering to the operating principles below. Often,\ncompany values get diluted as they grow, most likely because they do not write anything\ndown. But we will make sure our values scale with the company. As a public company, we\ndeclare everyone in the company as an insider, which allows us to remain transparent\ninternally about our numbers, etc. Everything else that can be transparent will continue to\nbe so.\nWhen there are exceptions, material that is not public by default is documented.\nPublic by default\nEverything at GitLab is public by default. The public process does two things: allows others\nto benefit from the conversation and acts as a filter. Since there is only a limited amount of\ntime, we prioritize conversations that a wider audience can benefit from.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 40/55"
            },
            {
                "page": 41,
                "content": "One example of transparency at GitLab is the public repository of this website that also\ncontains this company handbook. Others include the GitLab CE and GitLab EE issue\ntrackers, as well as marketing and infrastructure. Transparency creates awareness for\nGitLab, allows us to recruit people that care about our values, gets us more and faster\nfeedback from people outside the company, and makes it easier to collaborate with them.\nIt is also about sharing great software, documentation, examples, lessons, and processes\nwith the whole community and the world in the spirit of open source, which we believe\ncreates more value than it captures.\nIn line with our value of transparency and being public by default, all GitLab team member\nprofiles should be public. Public profiles also enable broader collaboration and efficiencies\nbetween teams. To do so, please make sure that the checkbox under the Private profile\noption is unchecked in your profile settings. If you do not feel comfortable with your full\nname or location on your profile, please change it to what feels appropriate to you as these\nare displayed even on private profiles.\nBecause we are public by default and have the SAFE framework we don\u02bct need to make\ncases for why things should be transparent. If something is unSAFE and needs to remain\nnot public it can be.\nNot public\nWe make information public by default because transparency is one of our values. However\nit is most important to focus on results. Therefore, a category of information is public\nunless there is a reason for it not to be. If something is not public, there should be a\nreference in the handbook that states a confidential decision was taken with a link to our\nNot Public guidelines, unless GitLab Legal and Corporate Affairs believes it carries undue\nrisk. We document what is not public by default on our communication page.\nIf you believe something shouldn\u02bct be public that currently is (or vice versa), then make a\nmerge request to the relevant page(s) suggesting the change so that you can collaborate\nwith others and discuss with the DRI. When content contains information which is not\npublic it is recommended to remove the specific sections which are not public, put them on\ntheir own page in the internal handbook, and then link out to that with a \u201cnot public/internal\nonly\u201d note. Always share publicly what we can.\nWhen information is not public, it may also be treated as limited access, only shared with\ncertain GitLab roles, teams, or team members due to privacy considerations, contractual\nobligation, or other reasons that the author or DRI can specify. Certain kinds of information\ndefault to limited access, including details about team members or customers who did not\ngive permission to share the information.\nMost companies become non-transparent over time because they don\u02bct accept any\nmistakes. Instead, we should always err on the side of transparency when there is a choice\nto be made between caution or inaction, and transparency. If we make a mistake, we now22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 41/55"
            },
            {
                "page": 42,
                "content": "know what the limits of transparency are for the company and we should document this.\nThe only exception to this rule would be in the case when there are legal concerns.\nBecause some information is not public the public information can be lacking some\ncontext. We should be cognizant of that.\nDirectness\nBeing direct is about being transparent with each other. We try to channel our inner Ben\nHorowitz by being both straightforward and kind. Feedback is always about your work and\nnot your person. That doesn\u02bct mean it will be easy to give or receive it.\nArticulate when you change your mind\nIf you state one thing, and then change course and support a different direction, point, or\noutcome, articulate this. It is OK to have your position changed by new data. Articulating\nthat an earlier stance is not your current stance provides clarity to others and encourages\ndata-driven decision making.\nSurface issues constructively\nBe transparent to the right people (up) at the right time (when still actionable). If you make\na mistake, don\u02bct worry; correct it and proactively let the affected party, your team, and the\nCEO know what happened, how you corrected it, and how\u2014if needed\u2014you changed the\nprocess to prevent future mistakes.\nTransparency is most valuable if you continue to do it when there are costs\nWe practice transparency even when hiding the facts would be easier. For example, many\ncompanies do not give you the real reason why they declined your application because it\nincreases the chance of legal action. We want to only reject people for the right reasons\nand we want to give them the opportunity to grow by getting this feedback. Therefore,\nwe\u02bcll accept the increased risk of holding ourselves to a high standard of making decisions\nand do the right thing by telling them what we thought. Other examples are being\ntransparent about security incidents and participating in and contributing to Live\nBroadcasts.\nTransparency has costs (distraction, mis-interpretation, etc.) but also great benefits\n(productivity, hiring, retention, brand awareness, etc). Team members can view more\ndetails on these benefits by referencing the \u201cTransparency Benefit Quantification\u201d slides in\nGoogle Drive). We should carefully weigh the tradeoff between costs and benefits, to\nprevent a knee-jerk reaction to reduce transparency when it has costs.\nSingle Source of Truth22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 42/55"
            },
            {
                "page": 43,
                "content": "By having most company communications and work artifacts be public to the Internet, we\nhave one single source of truth for all GitLab team members, users, customers, and other\ncommunity members. We don\u02bct need separate artifacts with different permissions for\ndifferent people.\nFindability\nOur transparency value means more than just making information accessible to all. In order\nto improve performance it\u02bcs important that we not only ensure information is accessible,\nbut also ensure it flows to the correct places and is findable by those who need it.\nFocusing on information flow will ensure you, for example, utilize multi-modal\ncommunication, or that you keep your stakeholders informed of changes by posting links\nto MRs in Slack.\nSay why, not just what\nTransparent changes have the reasons for the change laid out clearly along with the\nchange itself. This leads to fewer questions later on because people already have some\nunderstanding. A change with no public explanation can lead to a lot of extra rounds of\nquestioning, which is less efficient.\nThis also helps with institutional memory: a year from now when you want to know why a\ndecision was made, or not, the issue or MR that has the decision also shares why the\ndecision was made. This is related to Chesterton\u02bcs fence - it\u02bcs much easier to suggest\nremoving or changing something if you know why it exists in the first place.\nIf you use generalized terms such as \u201cindustry standard\u201d or \u201cbest practices,\u201d be sure to\ngive context, as without context they can be seen as potentially vague or opaque.\nSimilarly, merely stating a single value isn\u02bct a great explanation for why we are making a\nparticular decision. Many things could be considered \u201citeration\u201d or \u201cefficiency\u201d that don\u02bct\nmatch our definition of those values. Try to link to an operating principle of the value or\nprovide more context, instead of just saying a single value\u02bcs name.\nSaying why and not just what enables discussion around topics that may impact more than\none value; for instance, when weighing the efficiency of boring solutions with the focus on\ncustomer results. When decisions align with all of our values, they are easy to discuss and\ndecide. When there are multiple values involved, using our values hierarchy and directly\ndiscussing the tradeoffs is easier with more context.\nArticulating why also helps people understand how something changed when you\narticulate that you changed your mind.\nSaying why does not mean justifying a decision against all other suggestions. The DRI is\nresponsible for their decision. The DRI is not responsible for convincing other people, but22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 43/55"
            },
            {
                "page": 44,
                "content": "they should be able to articulate their reasoning for the change.\nWhen a GitLab Team Member comes across an ask or material (MR, handbook, etc.) that\ndoes not provide a \u201cwhy\u201d with sufficient context, the Team Member is responsible for\ngetting the why and, if needed, working with the DRI to ensure that it is adequately\ndocumented and communicated to give context to other team members. In the absence of\na why, team members may speculate the why. This is something that can lead to disruption\nand inefficiency.\nReproducibility\nEnable everybody involved to come to the same conclusion as you. This not only involves\nreasoning, but also providing, for example: raw data and not just plots; scripts to automate\ntasks and not just the work they have done; and documenting steps while analyzing a\nproblem. Do your best to make the line of thinking transparent to others, even if they may\ndisagree.\nTransparency Competency\nCompetencies are the Single Source of Truth (SSoT) framework for things we need team\nmembers to learn. We demonstrate transparency when we are open with as many things as\npossible reducing the threshold to contribution and make collaboration easier.\nGitLab\nJob\nGradeDemonstrates Transparency Competency by\u2026 Knowledge\nAssessment\n5Uses public issue trackers, projects, and repositories\nwhen possible. Looks for opportunities to publicly share\nthe things that they are working on.Knowledge\nAssessment for\nIndividual\nContributors\n6 Provides context and background on projects and issues\nso that those with no prior knowledge are able to\ncontribute to the discussion. They welcome feedback\nand new ideas as they know that will lead to a better\nsolution.\n7 Continually surfaces improvements across their\nfunctional area of expertise. They share feedback with\nothers and understand how to disagree and commit to\nsolutions. They model what it means to be as open as\npossible. They encourage conversation in public\nchannels.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 44/55"
            },
            {
                "page": 45,
                "content": "8 Implements open processes across their team. They also\ntrack team issues and projects openly so their team\nmembers are aware of everything that is happening on a\nteam at a given time. They leverage feedback to drive the\nbest possible outcomes with the information they have\navailable. They also share feedback with their team and\ntheir peers in a timely, kind manner so their position on a\ngiven topic is known.Knowledge\nAssessment for\nPeople Leaders\n9 Fosters and coaches openness across cross functional\ndepartments. They lead cross functional issues, projects\nand ideas inviting feedback to generate the best possible\nsolution. They hold their teams accountable to continue\nto find opportunities to share things openly. They give\nfeedback to their team members, peers and managers in\na timely, kind manner so their position on a topic is\nknown.\n10 Drives their departmental strategy with openness as a\nkey value. They hold their management team\naccountable to working openly and pushes them to make\neverything transparent even when it might be difficult to\ndo so. They coach managers on the value that additional\nfeedback can bring to the end solution.\n11 Develops leaders that work openly and continue to\nprovide timely, kind feedback across their division. They\ndevelop leaders that drive their teams with openness as\na foundational part of the way that they operate.\n12 Leads the company by being open in all things. They are\nopen with things that might traditionally not be shared\nbroadly. They communicate directly and provide\nfeedback in a timely manner to initiatives happening\nwithin their department and across the company. They\nhold the e group and other leaders accountable for\nupholding this value.\nEVP/CXOChampions transparency both internally, across the\ncompany and externally. They participate both internally\nand externally in events and share the value that being\nopen can provide to increasing trust with team members\nand others that interact with our product. They provide\ntimely, kind feedback with initiatives happening internally22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 45/55"
            },
            {
                "page": 46,
                "content": "and externally. They hold the e group and other leaders\naccountable for upholding this value.\nWhy have values\nOur values provide guidelines on how to behave and are written to be actionable. They help\nus describe the type of behavior that we expect from GitLab team members. They help us\nto know how to behave in the organization and what to expect from others.\nValues provide a framework for distributed decision making, detailed in GitLab\u02bcs TeamOps\nmanagement philosophy. They allow individuals to determine what to do without asking\ntheir manager and they allow teams to make consistent decisions. When teams across the\norganization reference the same values in their decision making, there is consistency in\nhow decisions are made. This ensures that our culture remains driven by our values.\nLastly, values create a conscious culture that is designed to help you prosper and\nexperience exceptional personal growth through work.\nFive dysfunctions\nOur values also help us to prevent the five dysfunctions:\n\u0000. Fear of conflict Seeking artificial harmony over constructive passionate debate =>\nprevented by transparency, specificallydirectnessand collaboration, specificallyshort\ntoes\n\u0000. Absence of trust Unwilling to be vulnerable within the group => prevented by\ncollaboration, specificallykindness\n\u0000. Avoidance of accountability Ducking the responsibility to call peers on\ncounterproductive behavior which sets low standards => prevented by results,\niteration, andtransparency\n\u0000. Inattention to results Focusing on personal success, status, and ego before team\nsuccess => prevented byresults\n\u0000. Lack of commitment Feigning buy-in for group decisions creates ambiguity\nthroughout the organization => prevented by transparency, specificallydirectness\nSome dysfunctions are not addressed directly by our values; for example, trust is not one\nof our values. Similar to happiness, trust is something that is an outcome, not something\nyou can strive for directly. We hope that the way we work and our values will instill trust,\ninstead of mandating it from people; trust is earned, not given.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 46/55"
            },
            {
                "page": 47,
                "content": "Operating principles\nOperating principles are behaviors that empower GitLab team members to definitively live\nout a given value. They clarify what a given core value means and looks like at GitLab.\nUnderstanding this distinction is critical to thriving at GitLab, particularly for newer team\nmembers who may be familiar with a prior organization\u02bcs interpretation of iteration or\ncollaboration (as examples).\nProcess for removing operating principles\nValues are not just things we do, but things that actively drive good behavior. When we\nremove them it doesn\u02bct mean we stopped believing in it, just that it wasn\u02bct actively helping\nto drive behavior. If we don\u02bct prune our operating principles, then we will be like every\nother company: things that make sense but are not leading to a better culture.\n\u0000. To remove an operating principle from the Handbook page, submit your change\nthrough a merge request and explain your reasons in the merge request description.\n\u0000. The GitLab Value Handbook Page owner must approve and merge the request.\nMention the specific value\nMost companies have a list of values. In companies without strong values, folks often use\ngeneralizations when they refer to values. For example, \u201cnot a value add\u201d or \u201cscored well\non values during our interview.\u201d In companies with strong values, folks name the specific,\nrelevant value as it applies to a given topic or situation. Values are only powerful when they\nare individually understood and applied by team members.\nHow to scale the business while preserving GitLab\nvalues?\nFor certain business decisions or projects (such as compensation and end-point\nmanagement ), GitLab team members may have a lot of opinions and interest, and they\nwant to provide their feedback and comments. On the other hand, it might be challenging\nfor the project DRI to digest and respond to all these inputs. What should you do in this\nscenario?\nEveryone can contribute at GitLab. We encourage team members to share feedback and\nleave comments on issues. Leaving feedback and comments shows that team members\ncare about a topic and about GitLab as a company. These perspectives may also uncover\npotential risks and problems in the project.\nThere shouldn\u02bct be a \u201cDon\u02bct they have their job to do?\u201d type of response. Furthermore, we\nshouldn\u02bct judge team members who are perceived as being the \u201csqueaky wheel.\u201d At GitLab,22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 47/55"
            },
            {
                "page": 48,
                "content": "we measure results, not hours. As long as a team member is producing required results,\nthey are empowered to decide how to spend their time.\nOn the other hand, as GitLab grows in size, we need to make decisions and the decisions\nmay not be agreed to by everyone. If a decision or project is sensitive or controversial, and\nreceives large amounts of feedback, it can be challenging for the project DRI to handle. In\nthese cases, it\u02bcs best to have time-boxed feedback built into timelines.\nIn a hypothetical example where a DRI needs to decide between red and gold potatoes for\na stew, they would create an issue with the following sentiment:\nWe\u02bcre deciding between red potatoes and gold potatoes to go into the stew. We have to\ndecide by Tuesday 2020-07-14 so that we can get our order to the grocery store on\nWednesday 2020-07-15. We\u02bcll be collecting input and feedback until that point. Jane is\nthe DRI and will make the decision on 2020-07-14 with all the information we have at\nthat point. Here is the framework we\u02bcre using for the decision:\nare there allergies to consider?\ncost per pound\nteam member preferences\nOnce the decision is made, it will be what is going into the stew.\nThis method has shown itself to be effective at soliciting productive feedback that doesn\u02bct\nderail a timeline while ensuring team members feel heard.\nWhy our values are public\nCompanies are encouraged to copy and implement GitLab\u02bcs values. They are Creative\nCommons and can be copied verbatim.\nWe make our values public for the same reasons we make our OKRs (Objectives and Key\nResults) and strategy public. There is great power and efficiency in teams who share\ncompany values. Concealing values until after someone is hired into an organization is not\na wise strategy.\nNot everyone will see our values and feel aligned with them, and that\u02bcs OK. By making\nvalues public, it shows respect for the time of job seekers who conduct due diligence on\nprospective employers. When people who are aligned with GitLab\u02bcs values apply for an\nopen vacancy, this allows our hiring teams to more efficiently move candidates through the\ninterview process.\nIn a GitLab Unfiltered interview on values, GitLab co-founder and CEO Sid Sijbrandij offers\nthe following context.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 48/55"
            },
            {
                "page": 49,
                "content": "Companies may ask you to write a blank check. They\u02bcll say, \u2018Come join our organization,\nand when you\u02bcre here, you need to subscribe to our values, our way of working, and our\nstrategy. It\u02bcs very essential, and it\u02bcs part of our identity!\u02bc\nBut these companies don\u02bct give you the opportunity up front to evaluate it. It doesn\u02bct\nmake any sense to me. If it\u02bcs so important that people share your values, have them out\nthere.\nHierarchy\nOccasionally, values can contradict each other. It\u02bcs useful to keep in mind this hierarchy to\nresolve confusion about what to do in a specific circumstance, while remaining consistent\nwith our core values.\nThink of the hierarchy as a weighting system. Values higher in the hierarchy do not\nautomatically override values lower in the hierarchy. Here are some examples:\nIf a change impacts Transparency positively but impacts Efficiency negatively in\nroughly the same amount, we would move ahead since Transparency is higher in the\nhierarchy than Efficiency.\nIf a change has a massive positive impact on Diversity but negatively impacts Iteration,\nwe would move ahead even though Diversity is lower in the hierarchy than Iteration\nbecause the overall impact is more positive than negative.\nCC \u00a0 o l l a b o r a t i o nDD \u00a0 i v e r s i t y ,  I n c l u s i o n ,\n& B e l o n g i n gEE \u00a0 f f i c i e n c yII \u00a0 t e r a t i o n TT \u00a0 r a n s p a r e n c yRR \u00a0 e s u l t s  f o r\nC u s t o m e r sO u r n u m b e r  o n e  p r i o r i t y  i s  R e s u l t s  f o r  C u s t o m e r s\nI t e r a t i o n  a n d  T r a n s p a r e n c y  a r e  m o s t\nn o t i c e a b l e  f r o m  o u t s i d e  t h e  o r g a n i z a t i o n\nC o l l a b o r a t i o n ,  D I B ,  a n d  E f f i c i e n c y\na r e t h e  f o u n d a t i o n  o f  o u r  v a l u e s\nIn a GitLab Unfiltered interview on values, GitLab co-founder and CEO Sid Sijbrandij offers\nthe following context.\nIt\u02bcs an attempt to relieve at least some of the tension. It\u02bcs not absolute. If you think of\nvalues as binary, that\u02bcs not going to work. There will always be interpretation, and\nthere\u02bcs always magnitude to consider.\nWe made a hierarchy so that it\u02bcs clear, in the end, the result matters most. For instance,\nwe\u02bcre not going to be transparent for the sake of being transparent. We\u02bcre not radical in\nour transparency. We do it because we think it will lead to better outcomes.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 49/55"
            },
            {
                "page": 50,
                "content": "Those hierarchies are really important. They won\u02bct preempt every debate, but it helps.\nUpdating our values\nOur values are updated frequently and as needed. Everyone is welcome to make a\nsuggestion to improve them. To update: make a merge request and assign it to the CEO. If\nyou\u02bcre a team member or in the core team please post a link to the MR in the #values\nSlack channel. If you\u02bcre not part of those groups, please send a direct Twitter message to\n@sytses.\nHow do we reinforce our values\nWhatever behavior you reward will become your values. We reinforce our values by:\n\u0000. Criteria we use for promotions and communicate to the whole company on\nannouncement.\n\u0000. What we select for during hiring.\n\u0000. What we emphasize during on-boarding.\n\u0000. Criteria we use for our annual compensation review.\n\u0000. What we refer to when making decisions.\n\u0000. The example the E-group sets for the company since a fish rots from the head down.\n\u0000. What we expect from all team members, as ambassadors for our values.\n\u0000. Keeping them up to date with a stream of commits that add details.\n\u0000. Behavior we give each other 360 feedback on.\n\u0000\u0000. Behavior we compliment.\n\u0000\u0000. Criteria we use for discretionary bonuses.\n\u0000\u0000. What we include in our offer letters\n\u0000\u0000. Criteria we use to manage underperformance.\n\u0000\u0000. What we do when we let people go.\n\u0000\u0000. Giving value awards during Contribute.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 50/55"
            },
            {
                "page": 51,
                "content": "\u0000\u0000. Providing GitLab team members and qualified individuals transparency into all aspects\nof the company through the CEO Shadow Program to enable them to better engage\nand collaborate cross-functionally.\n\u0000\u0000. Linking the takeaways of courses to our values, like we did for the Crucial\nConversations training.\n\u0000\u0000. The default settings of the software we use (for example: Speedy meetings, document\nsharing, agendas, etc.)\n\u0000\u0000. Reinforcing our values with features in GitLab, for example the Iterations feature.\n\u0000\u0000. Applying one of our values virtual backgrounds in video calls.\n\u0000\u0000. Our GitLab Song Book, the song lyrics often mention GitLab values.\n\u0000\u0000. Regularly conduct a values exercise at the e-group offsite.\nThe most important moments to reinforce our values are decisions which affect individual\nteam members most: hiring, promotions, and bonuses, which is why every promotion\ndocument at GitLab is shared with the entire company and uses the values as its core\nstructure.\nIn negative feedback, we should be specific about what the problem is. For example,\nsaying someone is \u201cnot living the values\u201d isn\u02bct helpful.\nYour values are what you hire for, what you praise people for, and what you promote\nthem for. By definition, what you do in those instances are your values. It\u02bcs not what you\nsay they are. Values should be explicitly part of our hiring process, our job profiles, and\nour review process.\nWhen we give bonuses and promotions, they are always linked to values. That\u02bcs the\ncrucial thing. If you reinforce them there, that\u02bcs the most powerful thing you can do. \u2014\nSid Sijbrandij, GitLab co-founder and CEO\nWhat to do if values aren\u02bct being lived out\nValue erosion can occur when indifference and apathy are tolerated. It can also occur when\nindividuals justify undesired behaviors by interpreting values as \u201cme values\u201d rather than\n\u201ccompany values.\u201d For example, a team member may speak to the importance of personal\nefficiency in order to justify not collaborating professionally with peers. This is not what we\nexpect from team members in terms of efficiency and collaboration.\nIf you feel that values are not being lived out in a given scenario, speak up and ask for\ncontext in a respectful manner. Navigating value conflicts starts with assuming positive\nintent from other team members. Offer links to relevant values and/or operating principles22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 51/55"
            },
            {
                "page": 52,
                "content": "when discussing the issue. If there is confusion or disagreement about the interpretation of\na value, please surface the discussion in GitLab\u02bcs #values Slack channel (for GitLab team\nmembers) or @-mentioning @gitlab on Twitter (for those who do not work at GitLab).\nIn a GitLab Unfiltered interview on values, GitLab co-founder and CEO Sid Sijbrandij offers\nthe following context.\nAlmost every time we face a hard decision at GitLab, it\u02bcs because values are in conflict.\nIt\u02bcs not binary logic. It requires conversation, and sometimes there is no obvious answer.\nWe can only achieve resolution by respectfully talking with each other and trusting the\nDRI to make the ultimate decision.\nPermission to play\nFrom our values we excluded some behaviors that are obvious; we call them our\npermission to play behavior:\n\u0000. Be truthful and honest.\n\u0000. Be dependable and reliable.\n\u0000. Try to keep promises. If you might not keep a promise, proactively communicate as\nsoon as you suspect it.\n\u0000. Be deserving of the trust of our team members, users and customers.\n\u0000. Be committed to the success of the whole organization.\n\u0000. Act in the best interest of the company, our team members, our customers, users, and\ninvestors.\n\u0000. Make the best decisions for GitLab.\n\u0000. Act in accordance with the law.\n\u0000. Don\u02bct show favoritism as it breeds resentment, destroys employee morale, and creates\ndisincentives for good performance. Seek out ways to be fair to everyone.\nPlaying politics is counter to GitLab values\nWe don\u02bct want people to play politics at GitLab.\nAn example of politics is people discussing a proposal and being overly focused on whose\nproposal it is. This is a manifestation of the Belief Bias, where we judge an argument\u02bcs\nstrength not by how strongly it supports the conclusion but by how strongly we support\nthe conclusion. Proposals should be weighed on their merits and not on who proposed\nthem. Another example is people being promoted based on others liking them or having a\nlot of alliances. We want people to be promoted based on their results. We value\ncollaboration, but that\u02bcs different from being promoted just because people like you.22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 52/55"
            },
            {
                "page": 53,
                "content": "Below are some attributes of political and non-political work environments. GitLab plans to\nmaintain a non-political one.\nPolitical environment Non-political environment\nValues are weaponized and used out of\ntheir intended contextTeam members utilize values with a positive\nintent\nTeam members are driven by self-\ninterestTeam members are driven by company\ninterest\nTeam members work in silos Team members optimize globally\nPeople have territorial behaviors and\nare quick to perceive suggestions as\nattacksPeople have short toes\nPeople have unhealthy alliances with\nbackroom conversationsPeople have good intent and actively\ncollaborate with folks\nInformation is intentionally withheldInformation is shared early (often WIP) and at\nthe same time with all interested parties\nPeople try to undermine each other\u02bcs\ncredibility by arguing with the weakest\npart of their argumentPeople take a \u201csteel man\u201d position and argue\nagainst the strongest version of your\nopponent\u02bcs position\nFolks do not provide direct feedback.\nInstead, they withhold their thoughts or\nspeak behind each other\u02bcs backsFeedback is given directly. This includes\nfeedback about a manager\u02bcs team\nCommunicating your own suggestions\nthrough a report instead of directlyFeedback is given directly from the person\nwho has it\nEvaluating proposals or work by who\nsaid or did it instead of by what is in itProposals\u00a0and work is evaluated without\nregard to who worked on them\nLack of transparency in escalations.\nTeam members go to a manager\nwithout first attempting to align with\npeers on an issue or letting peers knowTeam members speak directly to each other\nabout feedback and requests in order to\nresolve their own conflicts. When they\nescalate, they do it in an effective way22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 53/55"
            },
            {
                "page": 54,
                "content": "Values make choices\nValues make and clarify choices. A well-chosen value has a defensible opposite. Apple, for\nexample, values secrecy over transparency and product perfection over iteration. They are\nsuccessful building around our counter values \u2014 although the result is a very different\ncompany.\nWhat is not a valueGitLab CEO Sid Sijbr andij talks about how t o prevent politics within a co GitLab CEO Sid Sijbr andij talks about how t o prevent politics within a co \u2026\u2026\nValues mak e choices Values mak e choices22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 54/55"
            },
            {
                "page": 55,
                "content": "All-remote isn\u02bct a value. It is something we do because it helps to practice our values\nof transparency, efficiency, results, and diversity, inclusion & belonging.\nQuestions from new team members\nDuring every GitLab 101 session with new hires we discuss our values. We document the\nquestions and answers to Frequently Asked Questions about the GitLab Culture.\nNew team members should read GitLab\u02bcs guide to starting a new remote role, and\nreference interviews centered on values within the GitLab Unfiltered YouTube channel.\nMission\nOur mission is that everyone can contribute. This mission guides our path, and we live\nour values along that path.\nMitigating Concerns\nWe have a page which documents our Mitigating Concerns. Many of our values help to\nmitigate some of these concerns.\nGitLab Values Quiz\nAnyone with a GitLab account can access the GitLab Values Quiz. To participate in the\nquiz, you will need to complete this learning course in Level Up. If you have questions,\nplease reach out to our L&D team at learning@gitlab.com.\nLast modified October 11, 2024: Update Values Handbook Page (bc79bb67)\n\uf1c9 View page source - \uf044 Edit this page - please contribute. \n22/10/2024, 15:02 GitLab Values | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/values/ 55/55"
            }
        ]
    },
    {
        "filename": "CEO _ The GitLab Handbook.pdf",
        "pages": [
            {
                "page": 1,
                "content": "CEO\nThis page details processes specific to Sid, CEO of GitLab.\nIntro\nThis page details processes specific to Sid, CEO of GitLab. The page is intended to be\nhelpful, feel free to deviate from it and update this page if you think it makes sense. If there\nare things that might seem pretentious or overbearing please raise them so we can remove\nor adapt them. Many items on this page are a guidelines for our Executive Business\nAdministrators (EBAs).\nCEO Bio\nSid Sijbrandij is the Co-founder, Chief Executive Officer and Board Chair of GitLab Inc., the\nmost comprehensive AI-powered DevSecOps platform. GitLab\u02bcs single application helps\norganizations deliver software faster and more efficiently while strengthening their security\nand compliance.\nSid\u02bcs career path has been anything but traditional. He spent four years building\nrecreational submarines for U-Boat Worx and while at Ministerie van Justitie en Veiligheid\nhe worked on the Legis project, which developed several innovative web applications to aid\nlawmaking. He first saw Ruby code in 2007 and loved it so much that he taught himself\nhow to program. In 2012, as a Ruby programmer, he encountered GitLab and discovered\nhis passion for open source. Soon after, Sid commercialized GitLab, and by 2015 he led the\ncompany through Y Combinator\u02bcs Winter 2015 batch. Under his leadership, the company\nhas grown with an estimated 30 million+ registered users from startups to global\nenterprises.\nSid studied at the University of Twente in the Netherlands where he received an M.S. in\nManagement Science. Sid was named one of the greatest minds of the pandemic by\nForbes for spreading the gospel of remote work.\nSijbrandij pronunciation hint\nA pronunciation hint for Sijbrandij: It\u02bcs like when you have seen some distilled wine, and\nwant to point it out: Sid, see brandyThe GitLab Handbook\n\uf296GitLab\ue4bbTeamOps\uf02dHandbook\uf0c0Job Families\uf0f6Reports22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 1/18"
            },
            {
                "page": 2,
                "content": "Related pages\nCEO shadow program\nCEO Job Description\nFavorite Restaurants\nMoved to a google document internal to GitLab team only. Please search in Google Drive\nfile name: CEO\u02bcs Favorite Restaurants. If you have questions please message the Staff EBA\nto the CEO in #eba-team or DM.\nFlaws\nTransparency and directness are part of our values and I want to live them by sharing the\nflaws I know I have. I\u02bcm fully responsible for improving the things below, listing them is no\nexcuse. They are listed here for two reasons. The first one is so that people know it is not\nthem but my fault. The second one is so I can improve, I hope that listing them lets people\nknow I appreciate when people speak up about them.\n\u0000. I look serious all the time, it is OK to say \u2018maybe you can smile more.\u02bc\n\u0000. I love debating, it is OK to say \u2018please stop debating and start collaborating\u02bc or \u2018we\nshould have a dialectic instead of a debate.\u02bc\n\u0000. My English pronunciation, choice of words, and grammar are not great. I\u02bcm taking\nlessons but I welcome corrections when we\u02bcre having a 1\u00001 conversation and/or when it\nmight confuse people.\n\u0000. When in a rush I will jump to conclusions, it is OK to ask \u2018can we take more time to\ndiscuss this.\u02bc\n\u0000. I sometimes make reports feel like I\u02bcm scolding them, as in being angry for a perceived\nfault. It is OK to say, I don\u02bct mind you making that point but your tone doesn\u02bct make me\nfeel respected.\n\u0000. In my feedback I sometimes sound more like I\u02bcm giving an order instead of offering a\nsuggestion, even when I mean the latter. It is OK to say \u02bcthat sounds like an order, I\nwould have appreciated it more in the form of a suggestion.\u02bc\n\u0000. I sometimes fail to distinguish which of the three levels of performance I\u02bcm talking\nabout. It is OK to ask \u2018is that a commitment, an aspiration, or a possibility?\u02bc.\n\u0000. I come across as negative since I focus on what can be improved. It is OK to ask \u2018what\nrecent improvements are you happy about\u02bc?\nIf you speak up about them I should thank you for it, it is OK to say \u02bcthis was on your list of\nflaws so I kinda expected a thank you\u02bc. I\u02bcm sure I have more flaws that affect my22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 2/18"
            },
            {
                "page": 3,
                "content": "professional life. Feel free to send a merge request to add them or communicate them\nanonymously to one of our people operations team members so that they can send a\nmerge request.\nNot a flaw but something to know about me, I have strong opinions weakly held. Or as\nsomeone said, I come in hot but am open to new evidence.\nStrengths\nSid is easy to talk to on any subject. He is good at drawing people out and challenging\nthem to grow, in a supportive way. He can meet anyone on their level and have a productive\nconversation. Watch a quick video from a CEO Shadow recounting her observations.\nPointers from CEO Direct Reports\n\u0000. Sid takes hard feedback well, but he\u02bcs difficult to give feedback to because he can be\nintimidating. Build up your muster and don\u02bct hold back.\n\u0000. Sid is worth managing up to. The learning curve he\u02bcs on is as steep as it gets, and he\ndoes learn/change/adapt readily, so you will see a return from investment.\n\u0000. Sid is GitLab\u02bcs product visionary.\n\u0000. He\u02bcs the anchor of all-remote.\n\u0000. Sid is the source of our transparency value.\n\u0000. Sid is also the driving force for our iteration value. For example, he may hold Iteration\nOffice Hours.\n\u0000. Sid really values 1\u00001 preparation.\n\u0000. Sid believes in \u201cstrong opinions, weakly held.\u201d He doesn\u02bct always seem like it, but he\nwill change his mind quickly if you present him with compelling new information and a\ndata driven perspective.\n\u0000. Sid loves naming things, and strongly believes in the power of clear language. Learn\nand use (and add to) our terminology e.g. It's not a \"best practice\", it's a\n\"boring solution\". The product categories page is a good example. Sid advocates\nfor using MECEFU terms to keep communication efficient.\nInterviewing and conducting meetings\nThis section was started by GitLab\u02bcs Head of Remote Darren M. to coach and provide\ncontext to others who meet with and interview Sid. The below are suggestions based on a\nhistory of personal interviews, extracted lessons from GitLab Unfiltered interviews, and22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 3/18"
            },
            {
                "page": 4,
                "content": "observations during a CEO Shadow rotation. Others are welcome to create a merge\nrequest and add more.\n\u0000. How scripted are interviews? Sid does well in unscripted interviews, but prefers\nquestions outlined in a Google document and attached in the meeting invite in\nadvance. The EBA to the CEO can assist you with this. Interviews tend to go well when\nit is clear ahead of time what the crux of the conversation will be about, and there is\ndocumented context which can be consumed asynchronously ahead of time.\n\u0000. What if questions arise which aren\u02bct in the agenda? Do you add them and keep\nthe conversation going? Expert interviewers will actively anticipate that new and\nunexpected questions will arise. You may be surprised by the question, but not that\nthe question happened. The interviewer is responsible for keeping the conversation on\ntrack according to the agenda. If you feel that a question veers the conversation too\nfar off track, document the question and add a to-do for a follow-up or asynchronous\nanswer. At GitLab, agendas are revered; feel confident in using the agenda to keep the\ninterview crisp.\n\u0000. Do you script perspective and commentary? Unscripted, authentic feedback and\ncommentary is appreciated and shows preparation for the subject matter and an\nunderstanding of discussion flow. With Sid (and other interview subjects), practice\ngets you closer to perfection. Professional media training creates a deeper\nunderstanding of this concept.\n\u0000. Do you worry about saying the wrong thing? This may be challenging to overcome.\nA list of tips for overcoming this are below.\n\u0000. Be comfortable with (seemingly) awkward silence. Sid appreciates time to analyze\nand gather his thoughts to provide the most thoughtful, cohesive response.\nSilence is not an indicator of his disapproval of the question or angle.\n\u0000. Make it personal. Ask Sid \u201cWhy do you feel this way?\u201d or \u201cWhat did you learn from\nthis?\u201d or \u201cWhat happens in your day that relates to this?\u201d Sid is able to craft\nstories which involve personal anecdotes that create deeper understanding and\nlearning for the audience.\n\u0000. Be bold in your questions. Sid enjoys the challenge of a hard or (thoughtfully)\naudacious question. Sid fields a lot of questions on a daily basis, many of which can be\nanswered by referencing the GitLab handbook. By referencing a current state in the\nhandbook and digging for more context and nuance, this provides opportunity for Sid\nto answer and provide value to more than just the interviewer \u2014 the new context\nshould be added to the handbook after the interview to benefit all.\n\u0000. Apply to the CEO Shadow program. There is no equivalent to watching Sid meet\nwith and interview a global array of people for two weeks. The program is an efficient\nway to gain a deeper understanding of Sid\u02bcs style and personality. Moreover, the\nprogram enables GitLab team members to realize that Sid is not only a CEO, but also\nan individual who enjoys working with others who will challenge him and accelerate his\npersonal growth.22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 4/18"
            },
            {
                "page": 5,
                "content": "\u0000. Don\u02bct be ashamed with ending early. It is natural to try to fill an allotted time block\nwith a CEO. Remember GitLab\u02bcs value of Efficiency and be bold if you\u02bcre able to\nprogress through an agenda quickly. A recommend close-out statement is: \u201cWe were\nvery efficient driving through the agenda. Any final points before we close?\u201d\n\u0000. Listen to Sid\u02bcs interview on the Changelog podcast. There are hundreds of hours of\nSid speaking on the internet, but this interview showcases a talented interviewer\n(Adam) extracting nuance and detail from Sid in a comfortable and professional way.\nThe interviewer is thoughtful yet audacious in his questions, while also bold and\nconsiderate. He challenges Sid and commands mutual respect.\nCommunication\nThanks to M\u00e5rten Mickos for the inspiration for this section. All good ideas are his, all bad\nones are mine.\nI am a visual person much more than auditory, and I am a top-down person much more\nthan bottom-up. This means that I love written communication: issues, email, Google Docs,\nand chat. Feel free to send me as many emails and chat messages as you like, and about\nwhatever topics you like. I prefer chat over email.\nIf you have a great new idea or suggestion for me, I appreciate if you can convey it in a\npicture or in written words, because I learn by seeing more than I learn by hearing. I don\u02bct\nmind if you send me or point me to plans that are in draft mode or not ready. I am happy if I\ncan give useful feedback early. It doesn\u02bct have to be perfect and polished when presented\nto me.\nIn written communication, I appreciate the top-down approach. Set the subject header to\nsomething descriptive. Start the email by telling me what the email is about. Only then go\ninto details. Don\u02bct mix separate topics in the same email, it is perfectly fine to send two\nemails at almost the same time. Try to have a concrete proposal so I can just reply with OK\nif that is possible.\nI get many email on which I am only cc\u02bcd on, I would very much appreciate if you started\nemails intended specifically for me with \u201cSid,\u201d or some other salutation that makes it clear\nthat the message is for me.\nPresentations and slide decks\nShare slide decks in advance of meeting with me per few meetings with presentations\ncommunication guideline. I can be tagged in a relevant Slack channel.\nWhen sharing slides with me, limit the content on each slide to one concept. Avoid\ncondensing multiple concepts into one slide. Additionally, the slide title should be specific22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 5/18"
            },
            {
                "page": 6,
                "content": "to the content on that slide. For example, instead of condensing two lists onto one slide,\nseparate the lists onto two separate slides with slide titles specific to each list.\nThis also applies if you are providing slides for me to present.\nConnecting on Social Media\nI have accounts on LinkedIn and Facebook. I will not send invites to team members on\nthose networks since as the CEO I don\u02bct want to impose myself on anyone. But I would love\nto connect and I will happily accept your LinkedIn and Facebook friend request. Please\nping the Staff EBA to the CEO in #eba-team on slack and they will accept your connection\nrequest. You can also find me on Twitter as @sytses, I won\u02bct request to follow private\ntwitter accounts, I assume I\u02bcm welcome to follow public twitter accounts, if not please let\nme know.\nCommunicating Follow Ups\nSometimes I will ask to be kept apprised of an action item or follow up. One common way\nfor me to express this desire is by applying the CEO Interest label on a GitLab issue. When\nkeeping me apprised please tend toward over-communication. The primary method to\ncommunicate your follow up to me should be via MR or issue updates posted in the #ceo\nslack channel including specific notification when an issue is completed or closed. It might\nfeel like you are being bothersome or distracting, but it is not. If I ever feel like you are truly\nover-communicating, I will let you know.\nCommunicating in Slack\nI get a lot of @ mentions in Slack, often when I\u02bcm being discussed. Please only @ mention\nme when you need me to see something or approve something, when you just want to\nrefer to me you can just say Sid. This saves time and enables increased efficiency.\nIf there is a suggested message draft that you\u02bcd like me to post in Slack, you should send\ntwo messages to me. The first message should include the context behind the ask, the\nsuggested timing for posting, and a link to the channel that the draft will be posted in.\nUnder this message reply in thread with your second message. This should only contain\nthe draft message. This allows me to easily copy and paste on mobile.\nNo Sacred Cows\nI\u02bcve been thinking about the notion of Sacred Cows since I heard that people use \u201cSid said\u201d\nas an argument in conversations.\nThe phrase comes from the belief of devout Hindus that cows are sacred animals and\nshould never be harmed. In the US, we use this term to mean \u201cone that is often22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 6/18"
            },
            {
                "page": 7,
                "content": "unreasonably immune from criticism or opposition.\u201d If we\u02bcre truly practicing continuous\nlearning, we have to question the Sacred Cows that can subtly and profoundly influence\nhow we make decisions and conduct business. We need to examine Sacred Cows with\nruthless compassion. By that I mean that we should be ruthless about examining and\nquestioning their validity while being compassionate with the person citing the Sacred\nCow.\nJust because I said something doesn\u02bct make it inviolable law like a law of physics. My\nutterances are usually merely an opinion based on the context of the discussion and the\nmoment. As new context is revealed, we need to be willing to reexamine what we say and\niterate.\nWhat I propose is that next time \u2018Sid said\u02bc is mentioned you check in with me, I might say:\n\u0000. \u201cYes, here\u02bcs my reasoning .. what is yours\u201d we then choose to:\nKeep it and maybe document the reasoning so it can be falsified in the future.\nChange it based on your reasoning\nBut it is also possible that:\n\u0000. \u201cI never made the statement\u201d\n\u0000. \u201cI don\u02bct recall making it\u201d, or\n\u0000. \u201cIt\u02bcs been misinterpreted.\u201d And\n\u0000. \u201cNow that you mention it, it doesn\u02bct hold up in light of the situation we\u02bcre in now\u201d\nCommunicating Merge Requests\nPlease follow these steps if you\u02bcd like me to review a Merge Request (MR) for approval:\n\u0000. Create the MR\n\u0000. Have the MR reviewed by a peer or your manager if you\u02bcd like early feedback\n\u0000. Ensure that the MR is mergeable:\n\u0000. All comment threads are resolved\n\u0000. If the MR is a draft, mark the MR as ready\n\u0000. The CI/CD pipeline ran successfully and deployed the latest review app\n\u0000. When the MR is ready for my review:\n\u0000. Add @sytses as a Reviewer to the MR. You can use this quick action:\n/assign_reviewer @sytses.\n\u0000. Post to the #ceo Slack channel, @ mentioning me asking for my review. Please\nprovide a brief description sharing the context.\n\u0000. Optional: Add a direct URL to the deployed review app to the Slack message for\nfaster access22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 7/18"
            },
            {
                "page": 8,
                "content": "\u0000. Address any feedback I provide and ensure that the MR is mergeable (see #3\nabove)\n\u0000. After my approval is given merge the MR if I have not\nPlease chat me the subject line of emails\nI prefer other forms of communication (e.g. slack) over email. I get a lot of email and I\u02bcm\nfrequently not on top of it. I appreciate it if you send my EBA a slack message if I need to\nrespond to an email. Please quote the subject line of the email in your chat message.\nSending email\nIf someone else in the company wants to have me send an email they should email me and\ncc my EBA with:\n\u0000. Instruction: \u201cPlease email this, please BCC: me on the outgoing email, forward any\nresponses, and cc: me on any further emails.\u201d\n\u0000. Recipient name\n\u0000. Recipient email\n\u0000. Email subject\n\u0000. Email body (text based, no HTML or rich text)\nWhen receiving such an email my EBA should stage a draft email to the recipient and a\ndraft answer \u2018done\u02bc.\nThe email should only be the body. Greetings and niceties are handled by the EBA.\nMeeting request requirements\nFor scheduling a video call or meeting with me or other execs, please see the EBA\nhandbook page. Please do not use Zoom waiting rooms for meetings scheduled with me or\non my behalf. If attendees are joining separate sections of a meeting, you can break the\nsession into multiple Zoom calls or have a Slack channel to manage attendee entrances\nand exits.\nCEO Meeting Cadence\nAs part of my role, I participate in a variety of meetings both internal and external. Please\nsee below for a general overview of these.\nDaily Meetings22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 8/18"
            },
            {
                "page": 9,
                "content": "\u0000. Group Conversation. 25 minutes.\nWeekly Meetings\n\u0000. 1-1s with my direct reports and EBA. 25-50 minutes.\n\u0000. E-Group Call. 120 minutes.\n\u0000. If there are open positions Talent Acquisition Syncs on key Executive hires. 25\nminutes.\n\u0000. Topical conversations on top cross-functional initiatives or other areas of importance\nto the CEO. 25 minutes.\n\u0000. Candidate Interviews. 50 minutes.\nMonthly Meetings\n\u0000. Key Review with Executives and function leaders. 25 minutes.\n\u0000. CEO Group Conversation. 25 minutes.\n\u0000. 1-1 with CEO Coach. 80 minutes.\n\u0000. Industry Analyst Meetings. 25-50 minute meetings.\n\u0000. Coffee Chats. 25 minutes.\n\u0000. Retrospective. 25 minutes.\n\u0000. Monthly Release Kick-off. 25 minutes.\n\u0000. CEO 101. 50 minutes.\n\u0000. Customer meetings or on-site visits. 25-90 minutes.\n\u0000\u0000. Executive AMA\u02bcs (Ask Me Anything). 25 minutes.\n\u0000\u0000. Investor Relations meetings at the request of the CFO and/or VP, Investor Relations.\nRange from 25 minutes to 1+ days.\nQuarterly Meetings\n\u0000. E-Group Offsite Monday-Thursday. After QBR\u02bcs and before the Board of Directors\nmeeting.\n\u0000. GitLab Board of Directors Meeting. 3.5 hours via Zoom. Usually preceded by a dinner\nor followed by a lunch for those who wish to attend in-person in San Francisco.\n\u0000. GitLab Board of Director Committee Meetings => Audit Committee, Compensation and\nLeadership Development Committee, and Nominating and Corp Governance Meeting.\n50 minutes.\n\u0000. Skip Levels with direct report\u02bcs leadership team. 25 minutes.\n\u0000. 1-1 with GitLab Board Members. 25-50 minutes.\n\u0000. OKR E-Group Planning 50-90 minutes.22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 9/18"
            },
            {
                "page": 10,
                "content": "\u0000. OKRs How to Achieve Meeting. 25 minutes with each function Executive.\n\u0000. Board Member AMA\u02bcs. 25-50 minutes.\nAnnual Meetings\n\u0000. Annual Planning with the GitLab Board of Directors. 50-80 minutes.\n\u0000. Fiscal Year Kickoff. 50 minutes.\n\u0000. Industry Conferences such as: DevOps Enterprise Summit, AWS re:Invent, KubeCon,\nLinux Summit\nCEO Vacation Preference\nI try to plan my vacations around times when many team members in the United States are\non vacation. A rough overview of these times is captured on GitLab\u02bcs cadence page. Other\nteam members may also preference taking off work during these windows as there tends\nto be less demand for synchronous collaboration during these times.\nCandidate interviews\n\u0000. Candidate interviews should default to 50 minutes unless there is a specific request to\nmake the meeting shorter or longer.\n\u0000. There should be an invite that includes both the candidate and the CEO. If this is a C-\nlevel candidate or it is otherwise requested, the meeting should have \u201cprivate\u201d\nvisibility. Otherwise, it can be \u201cpublic.\u201d\n\u0000. There should be a second calendar invite from Sid\u02bcs account with the subject:\n[Shadow or No Shadows] CEO Briefing Doc: [Person\u02bcs Name]. This should follow the\n\u201cprivate\u201d conventions shared in item 2. This invite should include a briefing document\nthat is shared with the hiring manager and recruiter (if there is one). The document\ncontains the following information:\n\u0000. Role with a link to the job family\n\u0000. Candidate\u02bcs LinkedIn link\n\u0000. Link to resume\n\u0000. Link to the prep package from the recruiter (relevant for searches with external\nrecruiters)\n\u0000. Summary of interviews to date\n\u0000. Concerns for the interviewer to dig into.\n\u0000. Focus of the call. Is it more about evaluating the candidate or more about getting\nthe candidate excited about the position?\n\u0000. The Greenhouse link or a place for \u201cCEO Notes\u201d22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 10/18"
            },
            {
                "page": 11,
                "content": "Candidate interviews with GitLab Board Members\nThe recruiter should share a prep package with the Board Member at least 3 business days\nin advance of a candidate interview. This should include:\n\u0000. The purpose of the interview. The specific ask (for ex, sell, evaluate expertise in x)\nshould be clearly stated\n\u0000. Summaries per interview of all interviews done to date\n\u0000. Any concerns\n\u0000. Guidance on how to provide feedback after the conversation\nPick Your Brain interviews\nTo schedule a Pick Your Brain interview with me, please see the EBA handbook page. To\nwatch and read prior Pick Your Brain interviews about all-remote, please see the Interviews\npage.\nFor scheduling a video call or meeting with me or other execs, please see the EBA\nhandbook page.\nExternal Speaking Engagements\nTo schedule Sid to speak at an external engagement please contact the EBA to the CEO\nwith the details outlined in the Executive External Event Brief. The EBA to the CEO will gain\napproval from the function head of the requester on whether the CEO will attend or not.\nSid\u02bcs preference is to participate in 1\u00001 fireside chats or conduct a stand alone presentation\n(audience Q&A is fine). He does not participate in panels with multiple speakers.\nRequests for audio/visual check meetings\nIf the organizer of an event requests a prep meeting with Sid to check audio and visual\nbefore a remote presentation, we can schedule for 5 minutes before the event for Sid to\nlogin and confirm that audio and visual are working as expected. A longer prep meeting is\nnot required as Sid has a robust remote work setup.\nSales meetings\nI love to talk to users or potential users of GitLab anytime.\nTraveling is not efficient because it can take 2 to 10 times the time of the meeting\nitself.22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 11/18"
            },
            {
                "page": 12,
                "content": "Some general guidelines of what travel is appropriate, these guidelines are not fixed, feel\nfree to ask for exceptions:\n\u0000. Check my availability with the EBA, reschedule with the EBA, cancel with the EBA, not\nme.\n\u0000. I\u02bcll take any meeting via video conference or in our boardroom.\n\u0000. I\u02bcll take a meeting in the Bay Area as long as it is not an SMB organization.\n\u0000. I\u02bcll take a meeting outside the Bay Area but in the US with large or strategic\norganizations.\n\u0000. I\u02bcll take a meeting outside the US with strategic organizations.\nConsider the following to increase efficiency:\nCombine meetings with multiple organizations in the same location.\nGet meetings with multiple stakeholders in the same company.\nApart from the formal meetings try to organize a meal with stakeholders.\nRecord the meeting so you can distribute it to others in the organization.\nPlease check with the EBA to look at my calendar to leverage my existing travel plans.\nMake sure to let the EBA know what you expect from me. E.g. arrive an hour before, do\na pitch etc.\nPlease plan audio only meetings only when the customer explicitly declines a video\ncall.\nAny meeting that requires travel should be properly prepared and any lessons relayed\nto the marketing team.\nConferences\nWhen at conferences I want to achieve results for the company and be efficient with my\ntime. Please ask sales and/or marketing to set up meetings for me in advance. I don\u02bct mind\ndoing booth duty, presenting, or any other way I can contribute. I do mind unscheduled\ntime randomly wandering the hallways, I\u02bcve found this to be ineffective.\nEach year I want to attend the Linux Foundation Member Summit (formerly the Open\nSource Leadership Summit). Please ensure:\n\u0000. We submit at least one talk.\n\u0000. We book the on-site hotel on the day it opens up.\n\u0000. We let the sales team know we would love to set up meetings and schedule these with\nmy EBA at least a week before the conference.\n\u0000. There is same timezone EBA coverage during the conference.22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 12/18"
            },
            {
                "page": 13,
                "content": "If I am asked to keynote a conference, it is up to the executive of the function asking me to\nattend to decide. For example, if the request is coming from marketing, the CMO decides;\nif the request is coming from Finance, the CFO decides. Please follow the process outlined\nunder [meeting request requirements]({{ ref \u201ceba#meeting-request-requirements\u201d >}}) and\nwork with my EBA who will shepherd the decision about whether or not I will attend.\nTeleprompter Preferences\nIf possible, I use a teleprompter when giving keynotes. I prefer to use the teleprompter app\n\u201cPromptSmart\u201d along with the \u201cPromptSmart Remote Control.\u201d Ideally, someone will scroll\nthrough the script on my behalf, at my pace.\nRecording Content for Conferences\nI\u02bcm always willing to record video content for conferences I\u02bcm unable to attend. Email my\nEBA to coordinate the recording.\nFavorite Beverages\nOften when attending an event, the organizers will reach out to see if I want a certain snack\nor drink. If possible, I would prefer:\n\u0000. Non-Carbonated Celsius. For example: Celsius Raspberry Acai Green Tea\nHome Office Setup\nPeople regularly ask what I use for my home office setup. Below is a list of the items I use:\nMicrophone: Shure MV7\nBoom Arm: RODE PSA 1 Swivel Mount Studio Microphone Boom Arm\nCamera: Sony Alpha 7C Full-Frame Mirrorless Camera - Silver (ILCE7C/S)\nCamera Adapter: Tengdaxing NP-FZ100 AC Power Supply Adapter\nCamera Holder: Heron - 3FT Camera Mount with Desk Clamp\nPorts: CalDigit ts3-plus\nDesk: Jarvis Laminate Standing Desk\nLaptop: 13-inch MacBook Pro\nStand: rain design mStand\nKeyboard: Apple Magic Keyboard22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 13/18"
            },
            {
                "page": 14,
                "content": "Mouse: Microsoft Pro IntelliMouse\nMonitor: Apple Pro Display XDR and/or LG Ultrafine 5K\nLight: Elgato Keylight\nGreen screen: I use a cloth one. Roll Down/up screens are a space saver but can be on\nthe small side. Painting the room has mixed results because different surfaces reflect\nlight different even with the same paint.\nNote: I have paid for all of these items myself. Please refer to GitLab\u02bcs expense policy for\noffice equipment and supplies when purchasing and expensing home office items.\nCEO Voice\nWhen preparing scripts or documents in my voice, please follow these guidelines. This list\ncan help you prepare a draft that is as close as possible to my natural way of\ncommunicating. For additional information or questions, please contact the #external-\ncomms Slack channel or the Chief of Staff to the CEO.\n\u0000. Avoid \u201cwe\u201d or \u201cour\u201d when discussing the product. I don\u02bct wish to speak on behalf of\nothers or to imply that GitLab team members are owners of GitLab or its users.\nEveryone can contribute = everyone has some ownership of GitLab.\n\u0000. Less is more. If you can say something in fewer words, do so. I prefer speaking in\nshorter sentences.\n\u0000. Always be inclusive. No gendered terms if it can be avoided.\n\u0000. Be as direct and specific as possible. Don\u02bct assume the reader/audience knows what\nyou mean (low-context communication). No vague statements.\n\u0000. Remove unnecessary words, assuming statements or lead-ins that don\u02bct add value. Ex:\n\u201cAs you know.\u201d\n\u0000. When writing a script, read it out loud. If it\u02bcs not easy to say in one try, edit the script to\nmake it easy to speak.\n\u0000. Any time you make a statement, consider whether there exist any data/proof points to\nback it up, and include the proof. This proof might exist internally through work our\nteams are doing, or externally through analyst reports or other such reporting.\n\u0000. Familiarize yourself with GitLab\u02bcs Misused Terms and avoid using these. For example,\nalways use \u201cTeam members\u201d instead of Employees.\n\u0000. Run text through a readability checker, such as the ones on this page. Aim to have a\nFlesch Reading Ease score above 80. This is the score for a document that is \u201ceasy\u201d to\nread.\n\u0000\u0000. No interrupters. Interrupters are little thoughts in the middle of a thought and they\ncomplicate sentences. So use \u2018Q2 was a great quarter. I am pleased with the results.\u02bc\ninstead of \u2018Q2, happily, was a great quarter.\u02bc\n\u0000\u0000. Be exact, not approximate.22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 14/18"
            },
            {
                "page": 15,
                "content": "\u0000\u0000. Don\u02bct sugarcoat bad news.\n\u0000\u0000. Celebrate, but don\u02bct boast or brag.\n\u0000\u0000. Rarely make comparisons to other people, especially negative ones. Comparing to\ncompetitors is fine, usually in the context of highlighting what differentiates GitLab.\n\u0000\u0000. Explain the why.\n\u0000\u0000. When providing slides for me to present, follow the presentations and slide decks\nguidance.\nTransport\nThe CEO will pay for all transport expenses (flight, Uber, etc.) personally. By default flying\nbusiness class. On short flight with other team members fly economy if we can sit\ntogether, in this case still pay personally.\nThree levels of performance\nThere are three levels of performance:\n\u0000. Commitment: what we promise to our stakeholders.\n\u0000. Aspiration: want to get to 70% of this, these are our OKRs\n\u0000. Possibility: what we are intrigued by, inspired by, and what I talk about\nI\u02bcm driven by what is possible, the aspiration, what can be. Others\u02bc expectations of a\nperson affect the person\u02bcs performance with high expectations leading to better\nperformance, this is called the Pygmalion effect. What is possible is more than what we are\nsatisfied with or what we promised to our stakeholders. We can be above what we\npromised and below what is possible and still have done a good job, we can win without\ndoing everything we aspired to do, or everything that is possible. It is unlikely that we win\nwithout doing what we promised. I have to be clear in distinguishing these level when I\ndiscuss a goal with my reports.\nHow do we keep shipping\nOne of the hardest things in business is not to slow down as the organization grows. An\napplicant asked how we manage to do this and these are the factors that come to mind:\n\u0000. Don\u02bct ever slow down because it is very hard to recover from that. As soon as you stop\nshipping (for a big refactor, a security initiative, etc.) it is very hard to get back up to\nthe old speed. The organization has accepted a slower rate and there are always22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 15/18"
            },
            {
                "page": 16,
                "content": "enough reasons to go slower. You have to do the refactors and other things during the\ncourse of business, never slow down.\n\u0000. Everyone in the business wants to do the right thing for the existing users and\ncustomers. The problem is that people already using you prefer stability in scope over\nchange in scope. You need to optimize for all people, both the current users and\npeople not using GitLab yet because it is missing features.\n\u0000. Separate execution from goal-setting. At GitLab, product decides what to ship and\nengineering is responsible for shipping it. Both report in to the CEO. If you have a head\nof product that also runs engineering, they are more likely to slow down because it will\nmake engineers\u02bc tasks easier.\n\u0000. Separate decision making from giving input. As detailed in our handbook we leave the\ndecision to the person doing the work or their manager, this prevents the need for\nexponentially more coordination as we grow.\n\u0000. We iterate so that we keep learning quickly and reduce the risk of decisions.\n\u0000. We have functional teams that make us efficient but as mentioned in that text we\npromote organic cross-functional collaboration by giving people stable natural\ncounterparts.\nEvolution of the handbook\nAs the company keeps growing my use of the handbook is also changing.\n\u0000. Until 20 people I mostly did things myself.\n\u0000. From then on I focused on documenting things in the handbook.\n\u0000. Then I asked people to document things.\n\u0000. Now we documented to document it.\nIteration Office Hours\nThese office hours are an opportunity for GitLab team members to discuss how to take a\nmore iterative approach to a specific activity or to highlight how a more iterative approach\nhelped drive results. Iteration is one of the hardest things to learn about working at GitLab\nand these office hours are a great opportunity for me to help coach folks who are\ninterested in better understanding it. We learned iteration at YC, where we took our plan for\nthe next 3 months and compressed it into 2 weeks. Give yourself a really tight deadline and\nsee what you can do. The smaller we split things up, the smaller steps we take and the\nfaster we can go.22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 16/18"
            },
            {
                "page": 17,
                "content": "External Networking\nI keep in touch with various industry leaders on a regular basis (monthly, quarterly or\nannually). They are people who have accomplished extraordinary things at prominent\ncompanies such as hypergrowth hiring, ambitious revenue growth, or created\ntransformative technologies. In these meetings, I get to learn from and know senior leaders\nwithin the industry. This helps me to understand what great looks like as it offers me a lens\ninto other companies and what has made them successful or held them back. I ask\nquestions about how they would approach GitLab\u02bcs\u00a0current challenges or opportunities. IHow GitLab disco vered the v alue of Iter ation How GitLab disco vered the v alue of Iter ation\nIteration O\u0000ce Hours with CEO (Public Liv e Str eam) Iteration O\u0000ce Hours with CEO (Public Liv e Str eam)22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 17/18"
            },
            {
                "page": 18,
                "content": "often share insights from my conversations with functional leaders and\u00a0other\u00a0team\nmembers.\nI have these conversations across all functions because it is important for me to have\nexternal, subject-specific mentors. Better understanding individual\u00a0functions helps me set\nbetter targets, ask better questions, and be a better partner to functional\u00a0leaders. This\nallows me to be a better manager and CEO.\nI try to prioritize people from underrepresented groups, because I see value in learning\nfrom folks with different backgrounds. These same folks may eventually become GitLab\nteam members who would add diversity to GitLab.\nCEO scam\nSee CEO and executive fraud in the security practices section of the handbook.\nCEO Shadow Program\nAt GitLab, being a CEO Shadow is not a job title, but a temporary assignment to shadow\nthe CEO\nOffice of the CEO\nDetails about Office of the CEO (OCEO) at GitLab\nLast modified August 21, 2024: Fix incorrect links (fc0f5a61)\n\uf1c9 View page source - \uf044 Edit this page - please contribute. \n22/10/2024, 14:56 CEO | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/ceo/ 18/18"
            }
        ]
    },
    {
        "filename": "messy_customer_support_logs_large.pdf",
        "pages": [
            {
                "page": 1,
                "content": "messy_customer_support_logs_largetimestampcustomer_idsupport_repcommunication_typemessageadditional_metadata2024-10-10 09:00:001234OliviaemailCan you assist me with cancelling my subscription?n/a2024-10-10 09:01:006789OliviaemailThe latest update messed my settings. Fix this pls!!!ticket escalated2024-10-10 09:02:009876JohnemailHi, I hve problem wth my accnt. Can you pls helpe?resolved yesterday2024-10-10 09:03:006781TinachatI need to update my billing info. Can you guide me through the process?follow up needed2024-10-10 09:04:006781SandraemailCan you assist me with cancelling my subscription?high priority2024-10-10 09:05:002345AlexemailThe download link is broken. Can you send me another one?high priority2024-10-10 09:06:001092SteveemailThe download link is broken. Can you send me another one?response pending2024-10-10 09:07:001092StevechatThe latest update messed my settings. Fix this pls!!!response pending2024-10-10 09:08:001122StevechatIt's stil not working. When will the update be ready?!ticket escalated2024-10-10 09:09:006789TinaemailIt's stil not working. When will the update be ready?!resolved yesterday2024-10-10 09:10:002345SandrachatHi, I hve problem wth my accnt. Can you pls helpe?urgent2024-10-10 09:11:001092OliviaemailThe latest update messed my settings. Fix this pls!!!follow up needed2024-10-10 09:12:005467StevechatMy app isnt loading! Can you see what's happning?!!follow up needed2024-10-10 09:13:002345SandraemailMy app isnt loading! Can you see what's happning?!!high priority2024-10-10 09:14:005467SteveemailMy app isnt loading! Can you see what's happning?!!follow up needed2024-10-10 09:15:001092SteveemailThe download link is broken. Can you send me another one?response pending2024-10-10 09:16:006789SteveemailWhy is my account suspended? I never received any warning!!urgent2024-10-10 09:17:001122StevechatWhy is my account suspended? I never received any warning!!resolved yesterday2024-10-10 09:18:001234SandrachatHi, I hve problem wth my accnt. Can you pls helpe?response pending2024-10-10 09:19:009931TinaemailThe latest update messed my settings. Fix this pls!!!response pending2024-10-10 09:20:002345MariaemailHi, I hve problem wth my accnt. Can you pls helpe?response pending2024-10-10 09:21:009876MariachatI've been charged twice for the same service. Please \ufb01x this ASAP .resolved yesterday2024-10-10 09:22:001234TinaemailHi, I hve problem wth my accnt. Can you pls helpe?follow up needed2024-10-10 09:23:006789SandraemailIt's stil not working. When will the update be ready?!urgent2024-10-10 09:24:004321OliviaemailI've been charged twice for the same service. Please \ufb01x this ASAP .urgent2024-10-10 09:25:009876SandrachatLucid Labs is fun to work for, we hide memes in messy customer dataresolved yesterday2024-10-10 09:26:001122MariaemailThe download link is broken. Can you send me another one?urgent2024-10-10 09:27:009931TinaemailMy app isnt loading! Can you see what's happning?!!ticket escalated2024-10-10 09:28:004321SandrachatIt's stil not working. When will the update be ready?!resolved yesterday2024-10-10 09:29:004321TinaemailHi, I hve problem wth my accnt. Can you pls helpe?follow up needed2024-10-10 09:30:001092AlexemailMy app isnt loading! Can you see what's happning?!!urgent2024-10-10 09:31:006789MariaemailIt's stil not working. When will the update be ready?!response pending2024-10-10 09:32:009876AlexemailI've been charged twice for the same service. Please \ufb01x this ASAP .n/a2024-10-10 09:33:001122TinachatI've been charged twice for the same service. Please \ufb01x this ASAP .ticket escalated2024-10-10 09:34:006781SandrachatI've been charged twice for the same service. Please \ufb01x this ASAP .n/a2024-10-10 09:35:001122TinaemailWhy is my account suspended? I never received any warning!!n/a2024-10-10 09:36:006789MariachatIt's stil not working. When will the update be ready?!urgent2024-10-10 09:37:004321SteveemailHi, Tina. I tried resetting my password, but I never received a con\ufb01rmation email.n/a2024-10-10 09:38:005467MariaemailIt's stil not working. When will the update be ready?!n/a2024-10-10 09:39:005467JohnemailMy app isnt loading! Can you see what's happning?!!resolved yesterday2024-10-10 09:40:006781StevechatThe download link is broken. Can you send me another one?high priority2024-10-10 09:41:001092SteveemailCan you assist me with cancelling my subscription?n/a2024-10-10 09:42:001234TinachatI need to update my billing info. Can you guide me through the process?resolved yesterday2024-10-10 09:43:009876MariaemailMy app isnt loading! Can you see what's happning?!!ticket escalated2024-10-10 09:44:009876TinachatHi, I hve problem wth my accnt. Can you pls helpe?ticket escalated2024-10-10 09:45:001092TinaemailThe latest update messed my settings. Fix this pls!!!follow up needed2024-10-10 09:46:001234MariachatHi, I hve problem wth my accnt. Can you pls helpe?resolved yesterday2024-10-10 09:47:006789MariachatI need to update my billing info. Can you guide me through the process?follow up needed2024-10-10 09:48:004321OliviaemailI need to update my billing info. Can you guide me through the process?high priority2024-10-10 09:49:006781OliviachatHi, I hve problem wth my accnt. Can you pls helpe?high priority2024-10-10 09:50:001122TinachatThe latest update messed my settings. Fix this pls!!!resolved yesterday2024-10-10 09:51:006781AlexchatCan you assist me with cancelling my subscription?response pending2024-10-10 09:52:005467JohnchatCan you assist me with cancelling my subscription?high priority2024-10-10 09:53:005467JohnemailIt's stil not working. When will the update be ready?!n/a2024-10-10 09:54:006789JohnemailI've been charged twice for the same service. Please \ufb01x this ASAP .resolved yesterday2024-10-10 09:55:009931AlexemailI've been charged twice for the same service. Please \ufb01x this ASAP .response pending2024-10-10 09:56:001092StevechatHi, Tina. I tried resetting my password, but I never received a con\ufb01rmation email.resolved yesterday2024-10-10 09:57:005467TinaemailHi, I hve problem wth my accnt. Can you pls helpe?follow up needed2024-10-10 09:58:005467OliviaemailWhy is my account suspended? I never received any warning!!n/a2024-10-10 09:59:006789OliviaemailMy app isnt loading! Can you see what's happning?!!high priority 1"
            },
            {
                "page": 2,
                "content": "2024-10-10 10:00:006789MariaemailIt's stil not working. When will the update be ready?!follow up needed2024-10-10 10:01:006781SandraemailMy app isnt loading! Can you see what's happning?!!follow up needed2024-10-10 10:02:001092SteveemailHi, Tina. I tried resetting my password, but I never received a con\ufb01rmation email.n/a2024-10-10 10:03:004321AlexchatThe latest update messed my settings. Fix this pls!!!resolved yesterday2024-10-10 10:04:001122StevechatWhy is my account suspended? I never received any warning!!resolved yesterday2024-10-10 10:05:005467StevechatHi, I hve problem wth my accnt. Can you pls helpe?high priority2024-10-10 10:06:009876JohnchatIt's stil not working. When will the update be ready?!ticket escalated2024-10-10 10:07:002345OliviaemailI've been charged twice for the same service. Please \ufb01x this ASAP .n/a2024-10-10 10:08:002345JohnchatThe download link is broken. Can you send me another one?urgent2024-10-10 10:09:006781SteveemailMy app isnt loading! Can you see what's happning?!!resolved yesterday2024-10-10 10:10:001122MariachatThe latest update messed my settings. Fix this pls!!!urgent2024-10-10 10:11:009931SandraemailWhy is my account suspended? I never received any warning!!resolved yesterday2024-10-10 10:12:005467AlexchatHi, I hve problem wth my accnt. Can you pls helpe?ticket escalated2024-10-10 10:13:002345JohnemailCan you assist me with cancelling my subscription?urgent2024-10-10 10:14:009876AlexchatI've been charged twice for the same service. Please \ufb01x this ASAP .ticket escalated2024-10-10 10:15:001122SteveemailThe latest update messed my settings. Fix this pls!!!urgent2024-10-10 10:16:005467JohnemailI need to update my billing info. Can you guide me through the process?response pending2024-10-10 10:17:006781SandrachatThe download link is broken. Can you send me another one?high priority2024-10-10 10:18:004321JohnchatHi, Tina. I tried resetting my password, but I never received a con\ufb01rmation email.follow up needed2024-10-10 10:19:004321AlexemailI've been charged twice for the same service. Please \ufb01x this ASAP .urgent2024-10-10 10:20:006781OliviachatHi, Tina. I tried resetting my password, but I never received a con\ufb01rmation email.n/a2024-10-10 10:21:001234TinachatThe latest update messed my settings. Fix this pls!!!resolved yesterday2024-10-10 10:22:005467OliviachatMy app isnt loading! Can you see what's happning?!!follow up needed2024-10-10 10:23:006781TinachatMy app isnt loading! Can you see what's happning?!!urgent2024-10-10 10:24:004321OliviachatWhy is my account suspended? I never received any warning!!high priority2024-10-10 10:25:009876MariachatMy app isnt loading! Can you see what's happning?!!ticket escalated2024-10-10 10:26:001092TinaemailMy app isnt loading! Can you see what's happning?!!follow up needed2024-10-10 10:27:001092OliviaemailHi, Tina. I tried resetting my password, but I never received a con\ufb01rmation email.resolved yesterday2024-10-10 10:28:006789TinaemailHi, I hve problem wth my accnt. Can you pls helpe?n/a2024-10-10 10:29:006781StevechatI've been charged twice for the same service. Please \ufb01x this ASAP .urgent2024-10-10 10:30:006781AlexchatHi, Tina. I tried resetting my password, but I never received a con\ufb01rmation email.urgent2024-10-10 10:31:009876JohnchatThe latest update messed my settings. Fix this pls!!!resolved yesterday2024-10-10 10:32:009931TinachatI've been charged twice for the same service. Please \ufb01x this ASAP .ticket escalated2024-10-10 10:33:004321SandrachatI need to update my billing info. Can you guide me through the process?ticket escalated2024-10-10 10:34:001092MariachatMy app isnt loading! Can you see what's happning?!!resolved yesterday2024-10-10 10:35:005467MariachatWhy is my account suspended? I never received any warning!!high priority2024-10-10 10:36:009931AlexchatHi, Tina. I tried resetting my password, but I never received a con\ufb01rmation email.resolved yesterday2024-10-10 10:37:004321MariaemailIt's stil not working. When will the update be ready?!resolved yesterday2024-10-10 10:38:006789StevechatHi, I hve problem wth my accnt. Can you pls helpe?ticket escalated2024-10-10 10:39:009876AlexchatCan you assist me with cancelling my subscription?resolved yesterday\n 2"
            }
        ]
    },
    {
        "filename": "Expense Reports.pdf",
        "pages": [
            {
                "page": 1,
                "content": ""
            },
            {
                "page": 2,
                "content": "Mobile Web Requirements\n\nCreated by Mitch Davis, last modified just a moment ago\n\nTarget release\n\nEpic\n\nDocument status\n\nDocument owner\n\nDesigner\n\nDevelopers\n\nQa\n\nRequirements\n\n#\n\nUser story\ntitle\n\nFacebook\nIntegration\n\nMDT-13\nTODO\n\nActivity\nStream\n\n\u00a9 moT-14\nToDo\n\nPost Updates\n\n@ MoDT-15\nTODO\n\n \n\n1.0\n\n(8) MDT-18 - Mobile optimized web app To DO\nDRAFT\n\n@Cassie Owens\n\n@Harvey Jennings\n\n@Kevin Campbell\n\nUser story description\n\nAuser wants to sign up via Facebook\n\nA.user wants to view the latest updates via the\nmobile dashboard so that they can get a\nbetter understanding of what is in place\n\nAuser wants to be able to post status\nupdates on the go\n\nA developer wants to integrate with the mobile\napp so that they can embed the activity\nstream on their website\n\nPriority Notes\nMust + We will need to talk to Cassie Owens.\nHave + There has also been some research\ndone on this (see Facebook\nintegration prototype)\nMust\nHave\nMust The key things we will need to support:\nneve + Text status updates\n+ Mentions\n+ Support for images\n+ Smart embedding for YouTube vids\nShould + We should chat to Team Dyno as\nHave they did something similar.\n\nBackground and strategic fit\n\nWe all know mobile is on the rise. A recent\nsurvey to customers showed that 85% of users\nuse their mobile on a daily basis. Most of our\ncustomers also use competitor apps, so this is\nsomething we need to have.\n\nCustomer research\n\n+ Customer interview - Netflix\n+ Customer interview - Homeaway\n+ Customer interview - Bitbucket"
            },
            {
                "page": 3,
                "content": ""
            },
            {
                "page": 4,
                "content": "AGI AGAT 'N\n\n91-01-2001 a6 7a2Z\nREG 0162\n\nDEPTO1 $30.00\nDEPTO1 ole. O02\nDEPTO1 o20ue\nDEPTO1 $2.00\nDEPTO1 es Oe\nCHECK\n\nb \u201cA \\a0\n\nYOUR RECE LPT\nTHANK YOU\nCAs Din Ags A TN\n\nO1-01=200% 06:32\nREG 0163\n\npepe NC)\nae $59.\nECKL ei Ss <3 cy ps"
            }
        ]
    },
    {
        "filename": "Data Team Organization _ The GitLab Handbook.pdf",
        "pages": [
            {
                "page": 1,
                "content": "Data Team Organization\nGitLab Data Team Organization\nData Team Organization\nThe Data Team Organization model is guided by three primary business needs:\n\u0000. The need for bespoke data solutions unique to the GitLab business.\n\u0000. The need for high-performance and reliable data storage and compute platform to\nsupport distributed analyst teams.\n\u0000. The need for centers of excellence for data technologies and advanced analytics.\n\u0000. The need for flexible data solutions driven by varying urgency and quality\nrequirements.\nBased on these needs, the Data Team is organized in the following way:\n\u0000. Data Pods: Pods are assembled to provide concentrated focus on delivering &\nmaintaining data products for strategic company initiatives. Pods are staffed with\nmultiple data personas including Data Analyst, Data Scientist, Analytics Engineer, and\nsupported by Data Engineer as stable counterpart.\n\u0000. Analytics Engineering: Transform raw data into clean, structured, and usable formats\nfor data decision-making. The Lead Analytics Engineer serves as a stable counterpart\nfor business departments and functional analytics teams.\n\u0000. Data Platform & Engineering Team:Center of Excellence for data technologies,\nincluding owning and operating the Data Stack\n\u0000. Data Science Team:Center of Excellence for advanced analytics, including delivery\nof data science projects to the business\nData Pod Assignments\nThe GitLab Handbook\n\uf296GitLab\ue4bbTeamOps\uf02dHandbook\uf0c0Job Families\uf0f6Reports22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 1/12"
            },
            {
                "page": 2,
                "content": "POD Data Product ManagerAnalytics EngineerData AnalystData Scient\nEnterprise\nMetrics@nmcavinue@lisvinueza\n@chrissharp@annie-\nanalyst\nCustomer\nIntelligence@nmcavinue@snalamaru@jonglee1218\nCustomer\nProduct\nAdoption@mdrussell@michellecooper\n@utkarsh060\nAnalytics Engineering - Business Stable Counterpart\nAssignments\nDepartment Functional Analytics Team Analytics Engineer\nSales Revenue Strategy and Analytics@snalamaru\nMarketing Marketing Strategy and Analytics@snalamaru\nFinance FP&A Analytics @chrissharp\nCustomer SuccessCS Strategy and Analytics@mdrussell\nProduct Product Data Insights@michellecooper\nEngineering Engineering Analytics@michellecooper\nSecurity Engineering Analytics@michellecooper\nSupport N/A @michellecooper\nPeople People Analytics@rakhireddy (ramping)\nData Platform Team Stable Counterpart\nAssignments\nPOD Data Engineer\nEnterprise Metrics@juwong22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 2/12"
            },
            {
                "page": 3,
                "content": "POD Data Engineer\nCustomer Intelligence@rigerta\nCustomer Product Adoption@rbacovic\nManager, Data\nIn support of the Data Pod, the Manager, Data fulfills the below responsibilities from the\nSenior Manager, Data Job Responsibilites:\n\u0000. Works with the Director, Data to envision and draft Quarterly Objectives, driven by\nrequirements gathered from multiple business partners.\n\u0000. Monitor, measure, and improve key aspects of the Data Pods.\n\u0000. Regularly meet with business partners to it/data-team/stand and solve for data needs.\n\u0000. Serve as a primary or back-up Maintainer on the Data Team Project. Provide final\nreview, feedback, and approval of Merge Requests submitted by the Data Pod and\nstable counterparts.\nLead Analytics Engineer (Stable Counterparts for the Business)\nIn support of the Data Pod and Stable Counterpart relationships, the Lead Analytics\nEngineer fulfills the below responsibilities from the Senior Analytics Engineer Job\nResponsibilites:\n\u0000. Own one or more stakeholder relationship in Go To Market, Research & Development,\nGeneral & Administrative, Financial Analytics, or Engineering Analytics business\nfunctions.\n\u0000. Co-DRI of Key Results along with the Manager, Data.\n\u0000. Lead work breakdown sessions for OKRs.\n\u0000. Work with functional stakeholders to prioritze P3-Other issues.\n\u0000. Serve as a primary or back-up Maintainer on the Data Team Project. Provide final\nreview, feedback, and approval of Merge Requests submitted by the Data Pod and\nstable counterparts.\n\u0000. Review the weekly stand-up and provide support as needed to unblock team members\nand answer questions.\nData Platform Team Stable Counterpart\nFollowing the GitLab Stable Counterpart principles, every Data Pod have a Data Platform\nTeam Stable Counterpart assigned. The Data Platform Stable Counterpart divides their\ntime, work and priorities between the Data Platform Team and Data Pod (general an22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 3/12"
            },
            {
                "page": 4,
                "content": "average of 50% each, P2-OKR scheduled ahead of the quarter in collaboration with the\nrespective Pod). The Stable Counterpart is aware of the direction and priorities of the Data\nPod and when needed brought into discussion with the Data Platform Team. I.e. when\nthere is a bigger demand than the Stable Counterpart can handle in the assigned\navailability or architectural direction needs to change. The Stable Counterpart recognize,\nflags and address this with the applicable stakeholders (in general the Lead/DRI of the Data\nPlatform Team and the Data Pod).\nThe stable counterpart is expected to participate in the following meetings asynchronously\nor synchronously. When in doubt, please reach out to the Data Pod Manager to learn which\nmeetings on the calendar you should participate in. In general, the meetings in scope are\nas follows:\n\u0000. Data Pod Iteration Planning Meetings.\n\u0000. Data Pod Team Meetings.\nData Program Recruiting\nRecruiting great people is critical to our success and we\u02bcve invested much effort into\nmaking the process efficient. Here are some reference materials we use:\na GitLab Data Recruiting video to say \u201cHi\u201d and give you some insight into how we work\nand what we work on. Enjoy!\nData Roles and Career Development to help existing team members and prospects\nit/data-team/stand growth opportunities\na Take Home Test that we ask each candidate to complete; this test is good for the\ncandidate and for us because it represents the type of work we perform regularly and\nif the candidate is not interested in this work it helps them make a more informed\ndecision about their application\nData Roles and Career Development\nData Internships\nSee Data Team Internships.\nData Platform\nData Engineering Job Family22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 4/12"
            },
            {
                "page": 5,
                "content": "Data Engineering R oles\nData Engineer\nSenior Data Engineer\nStaff Data Engineer\nIntermediate and Senior Data Engineer Onboarding Timeline\nBy Day 30 By Day 60 By Day 90By Day 120\nComplete People\nand Data\nOnboardingPerform triage activitiesExtract new\ndata sourcesOwn a specific area of\nthe data platform\nCreate a MR to\ncontribute to\nhandbook or\ntemplatesInvestigate incidents and\nissuesWork on OKR\nassignmentsPropose new ideas\nand come up with\nData Platform\nimprovement\ninitiatives\nit/data-team/stand\nthe current setup\nof the data\nplatformMake small/corrective\nchanges to the platform\ninfrastructure or data\npipelinesContribute on\nwork\nbreakdown\nData Analyst\nData Analyst Job Family22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 5/12"
            },
            {
                "page": 6,
                "content": "Data Analyst R oles\nData Analyst Intern\nJunior Data Analyst\nData Analyst\nSenior Data Analyst\nStaff Data Analyst\nIntermediate and Senior Data Analyst Onboarding Timeline\nBy Day 30 By Day 60 By Day 90 By Day 120\nComplete People\nand Data OnboardingExtend an existing\nTableau dashboard\nor complete the\ntriage phase for a\ndbt issueRun a project end-\nto-end as DRI with\nsupport from a\nData Fusion TeamCreate ERDs/Data\nArtifacts (e.g.\ndashboards) or\ncomplete a product\nevaluation22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 6/12"
            },
            {
                "page": 7,
                "content": "By Day 30 By Day 60 By Day 90 By Day 120\nStart attending Data\nFusion Team and\nBusiness Team\nsynchronous\nmeetingsPerform triage\nactivities\nComplete First Issue:\nS to M T-Shirt Size\nData Science\nData Science Job Family\nData Science R oles\nData Scientist\nSenior Data Scientist\nStaff Data Scientist\nPrincipal Data Scientist\nIntermediate and Senior Data Scientist Onboarding Timeline22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 7/12"
            },
            {
                "page": 8,
                "content": "By Day 30 By Day 60 By Day 90 By Day 120\nComplete People\nand Data\nOnboardingMeet stakeholders\nacross the\norganizationRe-train or\nenhance an\nexisting data\nscience modelMake a contribution to\nimprove the Data\nScience handbook,\npackages, or\nprocesses\nStart attending Data\nScience Team\nmeetingsRefine/improve one\ndata science\ndashboardWork on OKR\nassignmentsTake ownership of at\nleast one quarterly\nOKR\nit/data-team/stand\nthe current data\nscience systems\nand processes\nAnalytics Engineering\nAnalytics Engineering Job Family\nAnalytics Engineering Job Family22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 8/12"
            },
            {
                "page": 9,
                "content": "Analytics Engineer R oles\nAnalytics Engineer\nSenior Analytics Engineer\nStaff Analytics Engineer\nPrincipal Analytics Engineer\nIntermediate and Senior Analytics Engineer Onboarding Timeline\nBy Day 30 By Day 60 By Day 90 By Day 120\nComplete People and\nData OnboardingExtend an\nexisting dbt\nTrusted Data\nModelsRun a project end-to-\nend as DRI with\nsupport from a Data\nFusion TeamCreate\nERDs/Data\nArtifacts\nStart attending Data\nFusion Team and\nBusiness Team\nsynchronous meetingsPerform triage\nactivities\nComplete First Issue: S to\nM T-Shirt Size\nData Management22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 9/12"
            },
            {
                "page": 10,
                "content": "Data Management Job Family\nData Management R oles\nManager , Data\nSenior Manager , Data\nDirector , Data\nSenior Director , Data\nData Manager Onboarding Timeline\nBy Day 30By Day 60 By Day 90 By Day 120\nComplete\nPeople, Data,\nand Manager\nOnboardingMeet everyone on\nthe team and\nbusiness data\nchampionsComplete a Team\nAssessmentDraft a people\ndevelopment Roadmap\nit/data-\nteam/stand the\ncurrent setup\nof the data\nplatformWork on OKR\nassignments and\nmap them to the\ndata platformLead discussions with\nUsers/Stakeholders on\ninitiatives and OKRsDraft a program\ndevelopment Roadmap\n(Process Improvements\n/Future State)22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 10/12"
            },
            {
                "page": 11,
                "content": "By Day 30By Day 60 By Day 90 By Day 120\nAdd a new\npage to the\nhandbookMake regular\ncontributions to\nthe handbook\nspanning your\narea of\nmanagementBecome DRI for major\nportions of the Data\nHandbookSystem/Application\nChange Control\nManagement of one or\nmore modules\nTool Technology Tandem\nTool Technology Tandems (TTT) are supporting to get the maximum value out of business\nopportunities we have in the Data Program. TTT are experts in a specific (software) tool or\ntechnology to support business opportunities or challenges we have by leveraging the tool\nor technology to the maximum. Although this is not the goal, we want to get the maximum\nvalue out of our technology stack. At the moment we see that we are not leveraging our\ntechnology stack to the maximum, where there are useful features or opportunities in our\ntechnology that could support in fulfilling business opportunities.\nThe reason is that from the technology side we don\u02bct know the business and from the\nbusiness side we don\u02bct know the technology. The TTT will bridge this gap by it/data-\nteam/standing the needs and bring this together in a technological way. We expect from\nTTT to do consulting, guiding and educating.\nNote: TTT will not search for business opportunities to use any tool feature. TTT has to\nit/data-team/stand business opportunities and translate this into what software could bring\nto the table.\nA single TTT consists of minimum 2 and maximum 3 GitLab Team Members with different\nroles. There are no requirements in which team a Team Member is part of(so this could be\noutside of the central Data Team as well) as long as the TTT meets the expectations\ndescribed below.\nTool / TechnologyTandem\nSnowflake t.b.d.\nMonte Carlot.b.d.\ndbt t.b.d.\nTableau t.b.d.22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 11/12"
            },
            {
                "page": 12,
                "content": "What do we expect from TTT\nWe expect TTT to get in touch with our business partners and all functions that\ncontribute to the data program or work with our Data Platform, to it/data-team/stand\ntheir challenges.\nWe expect TTT to get up to date with the latest in their area. They it/data-team/stand\nthe full capabilities of the tool / technology, have regular touchpoints with the\nrespective vendor and have a good it/data-team/standing of the latest released\nfeatures.\nTTT will guide and educate our business partners.\nTTT will initiate design-spikes for quarterly planning.\nData Analytics at GitLab\nGitLab Data Analytics Team Handbook\nData Platform at GitLab\nGitLab Data Platform Team Handbook\nData Science Handbook\nGitLab Data Science Team Handbook\nData Team Internships\nGitLab Data Team Internships\nLast modified August 21, 2024: Move the Data team handbook into /enterprise-data top\nlevel (f156d4f3)\n\uf1c9 View page source - \uf044 Edit this page - please contribute. \n22/10/2024, 15:00 Data Team Organization | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/organization/ 12/12"
            }
        ]
    },
    {
        "filename": "Org structure subsidy TC.pdf",
        "pages": [
            {
                "page": 1,
                "content": "# TechCorp Organizational Structure\n## Table of Contents\n1. [Introduction ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n2. [Executive Leadership ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n3. [Engineering Department ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n4. [Product Management ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n5. [Sales and Marketing ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n6. [Customer Success ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n7. [Human Resources ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n8. [Finance and Administration ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n9. [Research and Development ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n10. [Cross-Functional Teams ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n11. [Reporting Structure ](https://www.notion.so /TechCorp-Organizational-Structure-\n11f8c4eac04181d89913df1195bf9f83 ?pvs=21)\n## Introduction\nThis document outlines the organizational structure of TechCorp, providing an overview of  \nour departments, key roles, and reporting lines. Our structure is designed to foster  \ninnovation, encourage collaboration, and ensure efficient decision-making.\n## Executive Leadership\n- CEO (Chief Executive Officer): Sarah Chen\n- CTO (Chief Technology Officer): Dr. Alex Rivera\n- CFO (Chief Financial Officer): Michael Johnson\n- CPO (Chief Product Officer): Emily Wong\n- CSO (Chief Sales Officer): David Thompson\n## Engineering Department\nLed by the CTO, Dr. Alex Rivera\n- VP of Engineering: Rajesh Patel\n    - Frontend Development Team (10 members)\n        - Team Lead: Lisa Gordon\n    - Backend Development Team (12 members)\n        - Team Lead: Carlos Mendoza\n    - DevOps Team (6 members)\n        - Team Lead: Aisha Khan\n    - QA and Testing Team (8 members)\n        - Team Lead: Trevor Williams\n- Information Security Team (5 members)\n    - CISO (Chief Information Security Officer): Natalie Foster\n## Product Management\nLed by the CPO, Emily Wong\n- Director of Product Management: James Lee\n    - Product Managers (6 members)\n    - UX/UI Design Team (4 members)\n- Technical Writing Team (3 members)22/10/2024, 15:34 tmpw27pp6kt.html\n\ufb01le:///private/var/folders/z8/lzg1ky6j6n98zstxj6ybggtr0000gn/T/tmpw27pp6kt.html 1/3"
            },
            {
                "page": 2,
                "content": "## Sales and Marketing\nLed by the CSO, David Thompson\n- VP of Sales: Jennifer Martinez\n    - Enterprise Sales Team (8 members)\n    - SMB Sales Team (6 members)\n- Director of Marketing: Chris Anderson\n    - Digital Marketing Team (4 members)\n    - Content Marketing Team (3 members)\n    - Events and PR Team (2 members)\n## Customer Success\n- VP of Customer Success: Olivia Parker\n    - Customer Support Team (10 members)\n    - Customer Onboarding Team (5 members)\n    - Account Management Team (7 members)\n## Human Resources\n- Director of HR: Samuel Kim\n    - Recruitment Team (3 members)\n    - Employee Relations Team (2 members)\n    - Learning and Development Team (2 members)\n## Finance and Administration\nLed by the CFO, Michael Johnson\n- Controller: Rebecca Liu\n    - Accounting Team (4 members)\n- Financial Planning and Analysis Team (3 members)\n- Legal Counsel: Gregory Watson\n- Facilities and Administration Team (3 members)\n## Research and Development\n- Chief Scientist: Dr. Elena Rodriguez\n    - AI Research Team (6 members)\n    - Data Science Team (5 members)\n    - Innovation Lab (4 members)\n## Cross-Functional Teams\nWe also maintain several cross-functional teams for specific initiatives:\n- AI Ethics Committee\n- Diversity and Inclusion Task Force\n- Sustainability Initiative Team\n## Reporting Structure\n- All VPs and Directors report to their respective C-level executives.\n- Team Leads report to their department VP or Director.\n- Individual contributors report to their Team Lead or directly to their department  \nVP/Director in smaller teams.\nNote: This structure is subject to change as the company grows and evolves. Regular  \nupdates will be made to reflect any organizational changes.\nLast updated: October 15, 2023\nFor any questions about the organizational structure or to report any discrepancies,  \nplease contact HR at [hr@techcorp.com ](mailto:hr@techcorp.com ).\n![Screenshot 2024-10-14 at 13.44.58.png ]22/10/2024, 15:34 tmpw27pp6kt.html\n\ufb01le:///private/var/folders/z8/lzg1ky6j6n98zstxj6ybggtr0000gn/T/tmpw27pp6kt.html 2/3"
            },
            {
                "page": 3,
                "content": "(TechCorp %20Organizational %20Structure %2011f8c4eac04181d89913df1195bf9f83 /Screenshot_2024-\n10-14_at_13.44.58.png )22/10/2024, 15:34 tmpw27pp6kt.html\n\ufb01le:///private/var/folders/z8/lzg1ky6j6n98zstxj6ybggtr0000gn/T/tmpw27pp6kt.html 3/3"
            }
        ]
    },
    {
        "filename": "Finance _ The GitLab Handbook.pdf",
        "pages": [
            {
                "page": 1,
                "content": "Finance\nWelcome to the GitLab Finance Handbook\nThe GitLab Finance Department includes multiple Teams: Accounting, Financial Planning &\nAnalysis, Tax and Business Operations Programs.\n\uf296 Quick Links\nFinance Issues\nPlease use confidential issues for topics that should only be visible to team\nmembers at GitLab.\nAccounts Payable\nExpense Guidelines\nOperating Metrics\nProcurement\nSales Comp Plan\nSignature Authorization Matrix\nAuthorization Matrix Policy\nStock Options\nForms\n2024 GitLab Inc W-9 Document and Certificate of Residence\nForm CA-590 - Please request by email to tax@gitlab.com\nCorrespondence\nPlease use the #finance chat channel in Slack for questions that don\u02bct seem\nappropriate for the issue tracker or internal email correspondence.\nAccounts Payable- inquiries which relate to vendor and merchant invoices, or team\nmember\u02bcs expenses should be sent to our Accounts Payable mailbox - ap@gitlab.com.The GitLab Handbook\n\uf296GitLab\ue4bbTeamOps\uf02dHandbook\uf0c0Job Families\uf0f6Reports22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 1/11"
            },
            {
                "page": 2,
                "content": "You can also reach the AP team on Slack in the #accountspayable or #expense-\nreporting-inquiries chat channels. Invoices that require payment processing should\nbe sent to ap@gitlab.com.\nBilling Operations- customer billing inquiries should be sent to our Billing mailbox \u2013\nbilling@gitlab.com.\nAccounts Receivable - customer payment/remittance inquiries should be sent to our\nAccounts Receivable mailbox - AR@gitlab.com\nPayroll- inquiries which relate to contractor invoices should be sent to our Payroll\nmailbox - nonuspayroll@gitlab.com.\nCFO Approvals\nPlease use the #cfo-approvals chat channel in Slack for alerting the CFO to a\nrequest for his approval\nTag the CFO\u02bcs Staff EBA in the Slack request for visibility and followup\nAppropriate Finance team members in the approval flow must approve prior to\nrequesting CFO approval\nAll requests must go through the appropriate approvals process, include a link to the\nIssue or description and receive all approvals prior to requesting CFO approval\nWe \u2665 Finance\n\uf02dFinance Handbooks\nAccounting\nBusiness Technology\nFinancial Planning & Analysis\nInvestor Relations\nTax\nGeneral Topics\nLegal and Financial Information\nFor commonly requested company information, please visit our wiki page.\n22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 2/11"
            },
            {
                "page": 3,
                "content": "Company Accounts\nLogin information for the following accounts can be found in the Secretarial vault on\n1Password:\nFedEx\nAmazon\nIND (Immigratie en Naturalisatie Dienst, in the Netherlands) company number\nIf you need this information but cannot find it in your shared vaults, check with the People\nConnect Team members to get access.\nFiscal Year\nA fiscal year is a one-year period that corporations use for accounting and budgeting.\nGitLab\u02bcs Fiscal Year runs from February 1 to January 31.\nQ1: February 1 through April 30\nQ2: May 1 through July 31\nQ3: August 1 through October 31\nQ4: November 1 through January 31\nFiscal YearCalendar Year\nFY25-Q12024-02-01 to 2024-04-30\nFY25-Q22024-05-01 to 2024-07-31\nFY25-Q32024-08-01 to 2024-10-31\nFY25-Q42024-11-01 to 2025-01-31\nRefer to our writing style guidelines for proper use of date formats.\nRevenue non-committee\nInternal Management Members: Chief Financial Officer (DRI), Chief Executive\nOfficer, Chief Revenue Officer (model, guidance, plan, target)\nInvoice template and where to send\nVendor invoices are to be sent to ap@gitlab.com and payroll@gitlab.com for contractors.\nAn invoice template can be found in Google Docs by the name of \u201cInvoice Template\u201d.22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 3/11"
            },
            {
                "page": 4,
                "content": "Non-US contractors not from Hungary, Italy, Japan, New Zealand, Nigeria, South Africa,\nSwitzerland, and Ukraine will get pay their monthly wages and expenses through iiPay.\nHere is the process:\nenter bank information in BambooHR under Bank Information tab. Note - new\ncontractor should enter their bank information within 3 business days from their start\ndate.\nenter VAT number if it is available\nsubmit monthly salary/bonus/commission invoice in BambooHR under Contractor\nInvoice tab (select the currency based on contract agreement) by the 8th of each\nmonth\nsubmit expenses through Navan Expense by the 8th of each month\nthe scheduled payment date is the 22nd of each month\niiPay will send out remittance advice along with the scheduled payment via your\nGitLab email address\nNon-US contractors from Italy, Nigeria, South Africa, Switzerland, and Ukraine will need to\nsend their monthly invoice for salary/bonus/commission and any expenses by the 15th to\npayroll@gitlab.com.\nIn many cases, VAT will not be payable on transactions between GitLab BV and EU-based\nvendors/contractors, thanks to \u201cShifted VAT\u201d. To make use of this shifted VAT:\nThe vendor/contractor writes the phrase \u201cVAT shifted to recipient according to article\n44 and 196 of the European VAT Directive\u201d on the invoice along with the VAT-number\nof GitLab IT BV (NL860316828B01).\nOn the vendor\u02bcs VAT return the revenue from GitLab BV goes to the rubric \u201cRevenue\nwithin the EU\u201d. It goes without saying that vendors are responsible for their own\ncorrect and timely filings.\nGitLab BV files the VAT on the VAT return, and is generally able to deduct this VAT all\nas part of the same return.\nTimesheets for Hourly Employees\n\u0000. People Ops and Finance will share a private Google Sheet with you where you will log\nyour hours for each day in the \u201chours\u201d column.\n\u0000. There is a dropdown in the \u201cpay type\u201d column, with the default being Regular. There\nare also options for Overtime, Vacation, Sick, and Bereavement. Choose the\nappropriate pay type for your time.\n\u0000. If you work overtime or more hours than agreed upon in your contract, please obtain\napproval from your manager and forward to Finance before payroll cutoff.\n\u0000. Your timesheet is due one day prior to the submit payroll date, which is outlined for the\ncalendar year on your timesheet.22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 4/11"
            },
            {
                "page": 5,
                "content": "How spend is allocated to departments\nBudgets are aligned to departments, and budgets follow the owner who requested the\nspend. When determining who should request the spend, consider the owner of the\noutcome.\nFor example, work to enable a sales partner that will not be incorporated into the product\nwould go to Sales. Work that will be part of the product and supported by engineering,\nshould be charged to the Engineering budget.\nFinance Business Partner Alignment\nFunction Name\nCustomer SupportR&D Finance\nR & D R&D Finance\nSales Sales Finance\nProfessional ServicesSales Finance\nMarketing Marketing Finance\nG & A Ellen Boyd and Jess Smith\nTypes of Work that the team does\n\u0000. Level 1: Keeping the lights on activity. Always striving to make this area as efficient as\npossible so more Layer 2 focus can be attained. Example: closing the books.\n\u0000. Level 2: Operational Efficiencies, Business Engagement and Partnering, actionable\ninsights for the organization. Examples: improving close process, partnering with sales\nto make a business decision\nAccounting and Reporting\nThis page contains GitLab\u02bcs accounting and reporting policies, which can be made\npublic. Please find our internal processes in the Accounting and Reporting internal\nhandbook section.\nQuote to cash\nInvoicing to customers\nCalculated Billings\n22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 5/11"
            },
            {
                "page": 6,
                "content": "Calculated billings is defined as revenue plus the sequential change in total deferred\nrevenue as presented on the balance sheet.\nWe do not believe that calculated billings provides a meaningful indicator of financial\nperformance as billings can be impacted by timing volatility of renewals, co-terming\nupgrades and multi year prepayment of subscriptions.\nAccounts Payable\nThis page contains GitLab\u02bcs Accounts Payable department policies, procedures and\nguidelines. Our goal is to enable payments in a timely manner to both our team\nmembers and our external partners. We also provide useful links to other areas of the\nhandbook that are relevant to the Accounts Payable procedures.\n\uf1d8 Introduction\nWelcome to Accounts Payable, commonly referred to as AP. You should be able to find\nanswers to most of your questions in the sections below. If you cannot find what you\nare looking for, then please connect with us:\nAuthorization Matrix\nPlease refer to the authorization matrix here\nCommittee Composition\nDisclosure Committee Composition\nChairperson: Chief Executive Officer, Chief Financial Officer, Chief Legal Officer\nand Principal Accounting Officer\nMembers: Chief Revenue Officer, Chief People Officer, Chief Technology Officer,\nChief Marketing Officer, VP, Corporate Controller, VP of Internal Audit, VP of\nFinance, Senior Director of Legal- Corporate, Director of R2R, Chief Product Officer\nManagement DRI: Chief Financial Officer\nDisclosure Committee Charter\nGitLab has established the disclosure committee (the \u201cCommittee\u201d) to help satisfy its\nobligation under the Securities Exchange Act of 1934 (Exchange Act) to maintain\neffective disclosure controls and procedures. GitLab\u02bcs CEO and CFO adopted the\nCommittee charter to outline the company\u02bcs Committee\u02bcs governance and disclosure\nprocedures. Please click here to read the Disclosure Committee Charter.\nFinance Growth and Development22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 6/11"
            },
            {
                "page": 7,
                "content": "Welcome to the GitLab Finance Growth and\nDevelopment Page\nThe GitLab Finance Department is dedicated to the growth and development of our\nteam members. To ensure that this is a focus area, we have come up with five programs\nfor FY22.\nOn-Boarding Growth and Development\nFinance Team Member on-boarding will include specific tasks and information to foster\na culture of continued development. This will include:\na list of \u201cMust Meet\u201d for onboarding coffee chats, to be provided by the team\nmember\u02bcs manager\na working style assessment using Simpli5\na view into the Finance Career Ladders and a view of the Org Chart\na link to read GitLab\u02bcs take on Career Development\nan overview of the mentorship programs, shadowing opportunities and internship\nprograms\nlinks to the GitLab training tools available from the People group :External\nResources (with no cost) & Internal Resources\nWork Style Assessment\nFinance Team Performance Indicators\nExecutive Summary\nKPI Health Status\nRecurring revenue variance ex-JVConfidentialConfidential\nExpense variance excluding CR ConfidentialConfidential\nBilling variance ConfidentialConfidential\nDays to financial close ConfidentialConfidential\n\\% of journal entries automated ConfidentialConfidential\nOn-Boarding CSAT Okay Above target22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 7/11"
            },
            {
                "page": 8,
                "content": "KPI Health Status\nDeliver Annualized Savings ConfidentialConfidential\nAccounting Efficiency (FY23 Plan)ConfidentialConfidential\nData Monthly Active Users (FY23 Plan)Okay Above target\nKey Performance Indicators\nRecurring revenue variance ex-JV\nVariance Actual to Forecast of recurring revenue, excluding joint ventures. This metric\nfalls under \u201cAccurate and reliable financial forecast\u201d umbrella.\nFinancial Planning & Analysis\nWelcome to the FP&A Team Handbook. Our missions is to maximize GitLab's long-term\nvaluation by enabling e-group and FP&A to plan, prioritize, and execute effectively\nGitLab Finance Team READMEs\nLearn more about working with various members of the marketing team\nGlobal Travel and Expense Policy\n1. POLICY\nGitLab\u02bcs Global Travel & Expense Policy is meant to provide guidance to all Team\nMembers to ensure that we act in the best interest of our Company at all times. The\npurpose of this policy is to:\nProvide guidance around allowable reimbursable expenses.\nEnsure the best utilization of our Team Member\u02bcs time.\nDrive transparency across all business travel related spend.\nHelp Team Members understand that a centralized travel program results in\nimproved safety, visibility, support and savings.\nPrevent violations of applicable anti-bribery and corruption laws.\n2. Responsibilities\nTeam Members:\nInvestor Relations22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 8/11"
            },
            {
                "page": 9,
                "content": "We have an externally facing investor relation website. The page you are on now the\nhandbook that describes internal processes around investor relations.\nQuarterly Earnings Process\nAs a public company we share financial results publicly after the close of each fiscal\nquarter or fiscal year. The key deliverables for each earnings cycle are:\nEarnings press release summarizing business & financial results, providing\nguidance\nEarnings call with prepared remarks by CEO and CFO followed by Q&A with sellside\nanalysts\nUpdated investor presentation , webcast, transcript, posted to ir.gitlab.com\nFile required forms with the SEC, e.g. 10-Q, 10-K, 8-K\nA cross-functional working group collaborates on the earnings cycle each quarter. Key\ncontributors are the e-Group, IR, FP&A, Accounting, PR, Exec Comms, and Legal teams.\nThe DRI for this project is the CFO; each work-stream has functional DRIs.\nPayroll\nPlease refer to the Payroll internal handbook page\nhttps://internal.gitlab.com/handbook/finance/payroll/.\nSales Compensation Plan\nFY23 Compensation T&Cs can be found in the Internal Handbook:\nhttps://internal.gitlab.com/handbook/sales/sales-commission/#fy23-sales-commission-\npolicies\nSpending Company Money\nAll team members and contractors must protect our Company assets, such as\nequipment, supplies, cash, and information. Treat Company assets with the same\ncare you would if they were your own. No team member or contractor may commit\ntheft, fraud or embezzlement, or misuse Company property.\nGuidelines\n\u0000. As a public company, GitLab has an obligation to act in the best interests of the\ncorporation and its shareholders. This obligation is shared by all team members\nand is the basis of our global travel and expense policy as a public company; team\nmembers must be thoughtful in spending the Company\u02bcs money.\n\u0000. Spending Company money includes travel and expenses.22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 9/11"
            },
            {
                "page": 10,
                "content": "\u0000. You may privately use GitLab property, a MacBook for example, to check your\nprivate e-mails or watch a movie as long as it does not violate the law, harm GitLab,\nor interfere with Intellectual Property. More details can be found in the Internal\nAcceptable Use Policy.\n\u0000. File your expense report in a timely manner, as expense claims over 90 days from\npurchase date will not be reimbursed unless approved by your Manager. The\nsooner it is submitted, the sooner you will get reimbursement.\n\u0000. If team members knowingly submit expenses for reimbursement for personal\npurchases that are not covered in the expense policy, this is a violation of our Code\nof Business Conduct & Ethics.\nPolicy Links and Resources\nThis table captures all of the links for different policies that are documented around\nusing Company money. This includes information of when to use our expense tool\nNavan, when to use a virtual credit card and when to get a PO from Zip.\nThe GitLab Procurement Team\nWhat is Procurement?\nThe Procurement team manages GitLab\u02bcs Supplier Lifecycle through the process of\nstrategically vetting and selecting vendors, negotiating commercial terms, the\npurchasing of goods and services, and managing the renewal or vendor offboarding\nprocess.\nProcurement process\nProcurement Team Alignment\nDivision alignment for spend over >$25k USD / year:\nMarketing - Ashley Abbate\nSales - Ashley Abbate\nProduct - Adrienne Ruhaak\nEngineering - Adrienne Ruhaak\nPeople - Adrienne Ruhaak\nFinance - Adrienne Ruhaak\nLegal - Adrienne Ruhaak\nAll division spend <$25k USD - Dasha Yarmusik\nIndividual Software Purchases - Anam Shaikh\nShared Goals22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 10/11"
            },
            {
                "page": 11,
                "content": "Procurement is a cross-functional team that supports GitLab as a public company. We\nhave four key objectives monitored in the following ways:\nThe GitLab Tax Team\nThe tax department is responsible for GitLab's overall tax strategy including all\ncomponents of tax compliance, tax planning and accounting for income taxes. In\naddition, the tax department manages GitLab's statutory requirements including\nstatutory audits, filing of entity-level financial information, transfer pricing, and ensuring\nintercompany transactions are recorded appropriately.\nThe Internal Audit Function\nPlease refer to the Internal Audit page in the internal handbook.\nTimekeeping Policies and Procedures\nInternal handbook link\nTravel Safety and Security\nTravel Safety and Security\nTeam member safety and security are a top priority for GitLab. If a team member feels\nuncomfortable or unsafe traveling to a location on GitLab\u02bcs behalf due to concerns\nabout the location, region, personal health, or other safety or security risks, please\ncontact People Connect via Slack or email. The People Connect team will assist by\nhelping to connect the team member with the right resources.\nLast modified July 10, 2024: Fix broken links and spelling (680a0bc8)\n\uf1c9 View page source - \uf044 Edit this page - please contribute. \n22/10/2024, 14:57 Finance | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/\ufb01nance/ 11/11"
            }
        ]
    },
    {
        "filename": "Enterprise Data Team _ The GitLab Handbook.pdf",
        "pages": [
            {
                "page": 1,
                "content": "Enterprise Data Team\nThe GitLab Enterprise Data Team is responsible for empowering every\nGitLab team member to contribute to the data program and generate\nbusiness value from our data assets.\nWelcome to the Enterprise Data Team Handbook\nOur Vision is to Contribute to GitLab\u02bcs journey of becoming the leading AllOps\nplatform by responsibly harnessing the power of data.\nIn pursuit of our vision, we will focus on 4 outcomes:\n\u0000. Drive company results by building trusted, reliable, and innovative data products and\ninsights when and where needed.\n\u0000. Minimize time from question to insight to action, enabling team members to move\nfaster by implementing efficient processes and enabling self-service analytics.\n\u0000. Develop and secure our data into a uniform, trusted asset through data protection &\nprivacy, iterating on processes, people, and platforms.\n\u0000. Enable every team member to contribute to initiatives responsibly and with trust,\nbuilding a powerful data-driven culture.\nRead our Direction page to learn what we are doing to improve data at GitLab.\nOur Principles inform how we accomplish our mission.\nWatch our Data Recruiting Video to learn about the growing Data Program.\nWould you like to contribute? Recommend an improvement, visit Slack #data, watch\na Data Team video. We want to hear from you!\nHow Data Works at GitLab\nThe collective set of people, projects, and initiatives focused on advancing the state of\ndata at GitLab is called the GitLab Data Program. GitLab has two primary distinct groups\nwithin the Data Program who use data to drive insights and business decisions. These\ngroups are complementary to one another and are focused on specific areas to drive a\ndeeper understanding of trends in the business. The two teams are the (central) EnterpriseThe GitLab Handbook\n\uf296GitLab\ue4bbTeamOps\uf02dHandbook\uf0c0Job Families\uf0f6Reports22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 1/11"
            },
            {
                "page": 2,
                "content": "Data Team and, separately, Function Analytics Teams located in Sales, Marketing, Product,\nEngineering or Finance. Watch the Data Recruiting Video to hear from some of the teams\ninvolved and what they are working on.\nThe Data Team reports into Business Technology and is the Center of Excellence for\nenterprise insights & analytics (not operational), data science, data platform &\ninfrastructure, BI technologies, master data, data governance and data quality. The\nData Team is also responsible for the enterprise data strategy, building enterprise-\nwide data models, providing Self-Service Data capabilities, maintaining the data\nplatform, developing Data Pumps, and monitoring and measuring Data Quality. The\nData Team is responsible for data that is defined and accessed on a regular basis by\nGitLab team members from the Snowflake Enterprise Data Warehouse. The Data Team\nbuilds data infrastructure to power approximately 80% of the data that is accessed on\na regular basis. The Data Team also provides a Data Science center of excellence to\nlaunch new advanced analytics initiatives and provide guidance to other GitLab team\nmembers.\nFunction Analytics Teams reside and report into their respective divisions and\ndepartments. These teams perform specific analysis for business activities and\nworkflows that take place within the function. These teams perform ad-hoc analysis\nand develop dashboards based on the urgency and importance of the analysis\nrequired, following the Data Development approach. The most important and\nrepeatable analysis will be powered by the centralized Trusted Data Model managed\nby the central Data Team. Function Analytics Teams also build function-specific/ad-\nhoc data models and business insights models to solve for urgent and operational\nneeds, not requiring trusted data features. Function Analytics Teams work closely with\nthe Data Team in a variety of ways: expand GitLab\u02bcs overall analytics capabilities,\nextend the Data Catalog, provide requirements for new Trusted Data models and\ndashboards, validate metrics, and help drive prioritization of work asked of the Data\nTeam. When data gaps are found in our business processes and source systems, the\nteam members will provide requirements to product management, sales ops,\nmarketing ops, and others to ensure the source systems capture correct data.\nData Program Teams\nThe GitLab Data Program includes teams focused in the following areas:\nCustomer Success Operational Data Team\nEnterprise Data Team\nEngineering Analytics\nFinance Analytics & Insights\nMarketing Strategy and Performance\nMarketing Web Analytics22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 2/11"
            },
            {
                "page": 3,
                "content": "People Analytics Team\nProduct Data Insights\nAnalytics Instrumentation Group\nSales Analytics\nHow Data Teams Work Together\nOn a normal operational basis, the Data Team and Function Analyst teams work in a \u201cHub &\nSpoke\u201d model, with the Data Team serving as the \u201cHub\u201d and Center of Excellence for\nanalytics, analytics technology, operations, and infrastructure, while the \u201cSpokes\u201d\nrepresent each Division or Departments Function analysts. Function analysts develop deep\nsubject matter expertise in their specific area and leverage the Data Team when needed.\nFrom time to time, the Data Team provides limited development support for GitLab\nDepartments that do not yet have dedicated Function Analysts or those teams which do\nhave dedicated Function Analysts, but might need additional support. The teams\ncollaborate through Slack Data Channels, the GitLab Data Project, and ad-hoc meetings.\nSales\n+Sales Analyst\nData\n+Data Analyst\n+Analytics Engineer\n+Data Engineer\n+Data ScientistMarketing\n+Marketing AnalystProduct\n+Product AnalystEngineering\n+Operations Analyst\n+Infrastructure AnalystFinance\n+Financial AnalystPeople\n+People Analyst\nThe Data Platform & Architecture Team\nThe Data Platform Team & Architecture Team is part of the Enterprise Data Team and\nfocuses on building and maintaing secure, efficent, and reliable data systems data\ninfrastructure. The Data Platform & Architecture Team is both a development team and an\noperations/site reliability team. The team supports all Data Pods with available, reliable,\nand scalable data compute, processing, and storage. Platform components include the\nData Warehouse, New Data Sources, Data Pumps, Data Security, and related new data\ntechnology. The Data Platform team also drives the Data Management processes. The\nData Platform Team is composed of Data Engineers.\nAnalytics Engineering Team\nThe Analytics Engineering Team** transforms raw data into clean, structure and usable\nformats for data decision-making. The Analytics Engineering team also drives Enterprise\nData Program and supports the wider data community. The team focuses on inventorying,22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 3/11"
            },
            {
                "page": 4,
                "content": "integrating, maintaining, and governing the data at an Enterprise level. This includes\ncollaborating with the business units and data teams in establishing and facilitating\ncommonly accepted guidelines around Enterprise data along with building enterprise-wide\ndata models, supporting Self-Service BI and Analytical capabilities by providing Data\nEnablement and required training to the Users on Enterprise Data Models.\nThe Enterprise Insights & Data Science Team\nThe Enterprise Insights & Data Science Team utilize analytics and Machine Learning (ML)\nfor insights into customer behavior and company performance. The Enterprise Insights &\nData Science team focuses on delivering a complete view of the customer (Customer\n360), predict customers that are likely to buy, expand or churn, develop models to predit\nthe long-term value of customers, create detailed customer profiles, and deliver insights\non company performance. The Team acts as a Center of Excellence for predictive analytics\nand supports other teams in their data science endeavours by developing tooling,\nprocesses, and best practices for data science and machine learning. List of the current\nprojects can be found in the Data Science handbook page.\nData Job Families\nThe job families are designed to support all of the routine activities expected of a Data\nTeam. In FY22 we are introducing two new job families, Data Scientist and Analytics\nEngineer.\nData Analyst\nData Scientist\nAnalytics Engineer\nData Engineer\nManager, Data\nDirector, Data\nHow We Measure Impact\nOur impact will be measured against 4 dimensions (these metrics will adjust as our data\nmaturity increases and our focus areas change):\nData Platform Stability\nInfrastructure Cost vs Plan: This performance indicator tracks the financial position of\nthe actual cost vs the planned costs for the data infrastructure (warehouse, ETL\npipelines, etc.).22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 4/11"
            },
            {
                "page": 5,
                "content": "Data Uptime: This performance indicator measures the % of time a data pipeline was\nproviding data without reported incidents. This indicator is currently measured based\non Monte-Carlo data, according to the configured (automatic) monitors on any given\ntable in the raw data layer.\nData Quality & Governance\n% completion of the data validation and data cleansing roadmap\nGovernance & Quality data assessment scores\nData Adoption\nData Monthly Active Users (DMAU): DMAU Measures the direct usage of the Data\nPlatform by GitLab Team Members based on usage of the primary analysis tools we\nprovide: Snowflake and Tableau. Over time we will include additional tools such as\nJupyter and Data Studio, as well as usage of data pumped into EApps such as Marketo\n(PQLs), Gainsight (Usage Data), and Salesforce (Propensity Scores). A visualization of\nthese numbers can be found in the Data Monthly Active Users report.\nData Monthly Active Users (DMAU) = Unique users of a Data system (i.e. Snowflake,\nTableau) in a given month\nData Maturity Score: measured annually, evaluates our current data maturity against 8\ndata capabilities:\n\u0000. Strategy & Approach\n\u0000. Culture & leadership\n\u0000. Metrics & KPIs\n\u0000. Organization & Skills\n\u0000. Architecture & Integration\n\u0000. Governance & Quality\n\u0000. Deployment & Usage\n\u0000. Technology & Operations\nNumber of certified Tableau dashboards\n% total views from certified dashboards\nRevenue/Efficiency Impact\nFirst we have the evaluation criteria known as Dollar Value of our Results as calculated by\nthe Data Value Calculator. We can use the Data Team Value Calculator to calculate the\ndollar value of the initiatives we contribute to and the issues we complete. Additionally we\nwant to shift to a more aspirational measurement which is to measure the ARR impact or22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 5/11"
            },
            {
                "page": 6,
                "content": "efficiency gain from each of our data products. Our data science models will be measured\nin the following ways:\nPropensity to Expand (PtE) and Purchase (PtP) - We will evaluate two metrics: 1)\nIncremental revenue impact 2) # of leads generated that are not currently in the sales\nfunnel\nPropensity to Churn (PtC) - We will evaluate two metrics: 1) # of high propensity to\nchurn customers that didn\u02bct churn 2) Incremental revenue impact\nHow To Connect With Us\nPrimary #Data Slack Channel\nIssue tracker\nGitLab Unfiltered Data Team Playlist\nWhat time is it for folks on the data team?\nData Slack Channels\n#data is the primary channel for all of GitLab\u02bcs data and analysis conversations. This is\nwhere folks from other teams can link to their issues, ask for help, direction, and get\ngeneral feedback from members of the Data Team.\n#data-daily is where the Data Team tracks day-to-day productivity, blockers, and fun.\nPowered by Geekbot, it\u02bcs our asynchronous version of a daily stand-up, and helps\nkeep everyone on the Data Team aligned and informed.\n#data-lounge is for links to interesting articles, podcasts, blog posts, etc. A good\nspace for casual data conversations that don\u02bct necessarily relate to GitLab. Also used\nfor intrateam discussion for the Data Team.\n#data-engineering is where the GitLab Data Platform team collaborates.\n#bt-data-science is where the GitLab Data Science team collaborates.\n#business-technology is where the Data Team coordinates with Business Technology\nin order to support scaling, and where all Business Technology-related conversations\noccur.\n#analytics-pipelines is where slack logs for dbt runs and monte carlo analysis are\noutput and is for analytics engineers to maintain. The DRI for tracking and triaging\nissues from this channel is shown here.22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 6/11"
            },
            {
                "page": 7,
                "content": "#data-triage is an activity feed of opened and closed issues and MR in the data team\nproject.\n#data-pipelines is where alerts from the ELT pipelines / FiveTran/ Monte Carlo RAW\nlayer anomalies published and is for data engineers to maintain. The DRI for tracking\nand triaging issues from this channel is shown here.\nYou can also tag subsets of the Data Team using:\n@datateam - this notifies the entire Data Team\n@data-engineers - this notifies just the Data Engineers\n@data-analysts - this notifies just the Data Analysts\n@analytics-engineers - this notifies just the Analytics Engineers\nExcept for rare cases, conversations with folks from other teams should take place in\n#data, and possibly the fusion team channels when appropriate. Posts to other channels\nthat go against this guidance should be responded to with a redirection to the #data\nchannel, and a link to this handbook section to make it clear what the different channels\nare for.\nGitLab Groups and Projects\nThe Data Team primarily uses these groups and projects on GitLab:\nGitLab Data is the main group for the GitLab Data Team.\nGitLab Data Team is the primary project for the GitLab Data Team.\nThough many of our GitLab projects are internal only, the rest are still public by default.\nYou can tag the Data Team in GitLab using:\n@gitlab-data - this notifies the entire Data Team\n@gitlab-data/engineers - this notifies just the Data Engineers\n@gitlab-data/analysts - this notifies just the Data Analysts\nTeam, Operations, and Technical Guides\nTECH GUIDES INFRASTRUCTUREDATA TEAM\nSQL Style Guide High Level DiagramHow We Work\ndbt Guide System Data FlowsTeam Organization\nPython Guide Data Sources Calendar\nAirflow & Kubernetes Snowplow Triage22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 7/11"
            },
            {
                "page": 8,
                "content": "TECH GUIDES INFRASTRUCTUREDATA TEAM\nDocker Permifrost Merge Requests\nData CI Jobs DataSiren Planning Drumbeat\nRstudio Guide Trusted Data Data Science Team\nJupyter Guide Data Management\nMeltano Guide\nExperimentation Best Practices\nData Onboarding\nLearning Library\nTableau Guide\nTableau Style Guide\nData Team Handbook Structure\nDashboards & Data You Can Use\nData Learning and Resources\nData Programs\nHow The Data Team Works\nCalendar\nData Analytics Team\nData Platform Team\nData Science Team\nData Team Principles\nData Management\nData Handbook Documentation\nPlanning Drumbeat\nTriage\nHow The Data Platform Works\nData CI Jobs\nData Infrastructure\nData Onboarding\nInternship Experience22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 8/11"
            },
            {
                "page": 9,
                "content": "Data for Product Managers\nData Quality\nData Services\ndbt Guide\nEnterprise Data Warehouse\nJupyter Guide\nMeltano Guide\nPermifrost\nPython Guide\nRStudio Guide\nSQL Style Guide\nSnowplow\nTableau\nTableau Style Guide\nTrusted Data Framework\nData Catalog\nThe Data Catalog page indexes Analytics Dashboards, Workflows, and Terms.\nData Development\nThis page defines the Data Development lifecycle\nData Platform Security\nData platform security involves implementing measures to protect the confidentiality,\nintegrity, and availability of data within our platform. This encompasses a range of\nstrategies and technologies aimed at safeguarding sensitive information from\nunauthorised access, data breaches, and other security threats. These measures often\ninclude access controls, encryption, authentication mechanisms, monitoring tools, and\ncompliance frameworks to ensure that data remains secure throughout its lifecycle\nwithin the platform. By prioritising data platform security, we can mitigate risks,\nmaintain regulatory compliance and build trust with our stakeholders.\nData Quality\nMVC for a Data Quality Program at GitLab\nData Team - How We Work\nGitLab Data Team Workflow\nData Team Data Management Page\n22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 9/11"
            },
            {
                "page": 10,
                "content": "The Data Management Page covers the content around managing, securing, and\ngoverning the Enterprise Data Platform and related activities.\nData Team Direction\nThis page contains forward-looking content and may not accurately reflect\ncurrent-state or planned feature sets or capabilities.\nStrategy\nAs an important step towards achieving our mission, meeting our responsibilities, and\nhelping GitLab become a successful public company, we are creating an Enterprise\nData Platform (EDP), a single unified data and analytics stack, along with a broad suite\nof Data Programs such as Self-Serve Data and Data Quality. The EDP will power\nGitLab\u02bcs KPIs, cross-functional reporting and analysis, and in general, allow all team\nmembers to make better decisions with trusted data. Over time, the EDP will further\naccelerate GitLab\u02bcs analytics capabilities with features such as data publishing and\nproducts - enriched and aggregated data integrated into business systems or into the\nGitLab product for use by our customers. This acceleration happens through the\ndevelopment of \u201cData Flywheels\u201d, much like GitLab\u02bcs Open Core and Development\nSpend flywheels.\nData Team Learning and Resources\nGitLab Data Team Library\nData Team Organization\nGitLab Data Team Organization\nData Team Platform\nGitLab Data Team Platform\nData Team Programs\n\uf1d8Introduction\nWelcome to the Data Programs page. Here you\u02bcll find information about the various\nData Programs around GitLab and those the Data Team supports, ranging from\nonboarding to day-to-day operations.\nData Slack Channels\nPrimary Data Slack Channel: #data\nData Lounge Channel: #data-lounge\n\uf1ea Show-n-Tell and Demos22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 10/11"
            },
            {
                "page": 11,
                "content": "Recordings of previous demos are posted to the GitLab Unfiltered Data Team playlist.\n\uf1ea Data Onboarding\nIf you are onboarding to GitLab and will be working in the Data Program as an Engineer,\nAnalyst, or Developer, follow these steps:\nEnterprise Data & Insights Team Operating Principles\nGitLab Enterprise Data & Insights Team Operating Principles Handbook\nFunctional Analytics Center of Excellence\nThe FACE is a cross-functional group of functional analytics teams that aim to make our\nteams more efficient by solving and validating shared data questions which results in\ncohesive measurement approaches across teams.\nGitLab Experimentation Best Practices\nExperimentation allows us to learn and give the right experiences to our Customers, to\ncreate better value for Customers and GitLab.\nLearnings From Internships\nPurpose\nThis page is created to share the experiences of Data Team members who completed\ninternships with various teams within GitLab, with the aim of providing insights,\nlearnings, and best practices.\nInternship Experience\nLessons from the Trenches: Insights from an SRE Internship\nLast modified September 23, 2024: Fix broken links (d748cf8c)\n\uf1c9 View page source - \uf044 Edit this page - please contribute. \n22/10/2024, 14:59 Enterprise Data Team | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/enterprise-data/ 11/11"
            }
        ]
    },
    {
        "filename": "Customer Success _ The GitLab Handbook.pdf",
        "pages": [
            {
                "page": 1,
                "content": "Customer Success\nThe Customer Success department is part of the GitLab Sales function who\npartners with our customers to deliver value and positive business outcomes\nthroughout their journey with GitLab\nThe Customer Success department is part of the GitLab Sales function who partners with\nour customers to deliver value and positive business outcomes throughout their journey\nwith GitLab.\nThe team can be reached in Slack channel (internal only).\nMission Statement\nTo deliver value to all customers by engaging in a consistent, repeatable, and scalable way\nacross defined segments so that customers see the value in their investment with GitLab,\nand we retain and drive growth within our enterprise customers.\nThe mission of the Customer Success Department is to provide these customers with\nexperience in order to:\nAccelerate initial customer value\nMaximize long-term, sustainable customer value\nImprove overall customer satisfaction & referenceability\nMaximize the total value of the customer to GitLab\nVision Page\nThe \u201cCustomer Success Vision Page\u201d provides the long-term view of company wide\nsuccess to which the customer success will be building in partnership with the value\ncenters of the GitLab organization (i.e., Marketing, Sales, Product/Engineering, Support,\nFinance, and IT).\nDepartment InitiativesThe GitLab Handbook\n\uf296GitLab\ue4bbTeamOps\uf02dHandbook\uf0c0Job Families\uf0f6Reports22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 1/11"
            },
            {
                "page": 2,
                "content": "Our large and strategic customers are in need of an ongoing partnership that combines\nexpert guidance with flexibility and adaptability to support their adoption and continuous\nimprovement initiatives.\nThese customers expect that partner to provide a streamlined, consistent and fully\ncoordinated experience that encompasses the full span of their needs as well as the fully\nlifecycle of the relationship. Need to focus on 4 main areas in order to grow in our existing\naccounts as well as land large and strategic:\n\u0000. Awareness\n\u0000. Adoption\n\u0000. Usage\n\u0000. Performance\nInitiative: Awareness\nOpportunity to improve the overall awareness of GitLab in order to promote and evangelize\nour brand and solution in a meaningful way to provide big business impact to our\ncustomers so that they believe in our vision and strategy.\nInitiative: Adoption\nEnsuring paying customers are successful in their onboarding in order to gain adoption and\nget the most out of our platform and remain happy, paying GitLab team-members and\nbrand advocates.\nInitiative: Usage\nCollecting and making use of customer data and insights is key to customer success. It\u02bcs\nimportant to do more with data and when necessary share back with customers, which in\nturn helps and encourages our customers to improve and drive adoption.\nInitiative: Performance\nUtilizing built-in monitoring instrumentation and a scalable HA architecture, the Customer\nSuccess team helps ensure implementations of GitLab are operating at peak performance\nas organization scale and adopt more features.\nCustomer Success Playbooks\nSee the Playbooks Page22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 2/11"
            },
            {
                "page": 3,
                "content": "Customer Terrain Mapping Engagements\nTerrain Mapping discovery engagements provide customers with the benefit of GitLab\u02bcs\nexperience with DevOps methodologies, Git, GitLab, CI, CD, and monitoring by\nbrainstorming a high level, first draft discovery of the elements of a success plan to\naddress various challenges. They are also mapped to professional services that can help\nwith some of the elements identified in the engagement.\nSee the Terrain Mapping Engagements Page\nCustomer Success Groups\nCustomer Success Teams\nCustomer Success Manager handbook\nCustomer Success Engineer handbook\nCustomer Success Architect handbook\nCustomer Success Decision Tree\nCSMAE Decision Tree - internal only\nRenewals Managers\nRenewals Managers handbook\nDigital Strategy\nDigital Strategy handbook\nDemo Systems\nDemo Systems documentation\nAccount Team\nThe account team is comprised of the Strategic Account Executive/Account Executive,\nSolutions Architect (Enterprise), and Customer Success Manager.\nMore information about the account team22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 3/11"
            },
            {
                "page": 4,
                "content": "Overlap Between Solution Architects and Customer\nSuccess Managers or Architects\nSA owns 1) pre-sales technical evaluation and relationships prior to the initial sale and 2)\ntier upgrades and new business units (i.e., connected new) within an existing customer.\nCSM owns 1) post-sales customer relationship and 2) license upgrades within an existing\ncustomer.\nMore information on the transition and ownership between Pre-Sales and Post-Sales\nOther Resources\nEducation and Enablement\nAs a Customer Sucess team member, it is important to be continuously learning more\nabout our product and related industry topics. The education and enablement handbook\npage provides a dashboard of aggregated resources that we encourage you to use to get\nup to speed.\nCustomer Workshops\nCSM-Created, Enablement Focus:\nAll CSM-created workshops\nCSE-Created, Enablement Focus:\nGitLab User Webinars and Labs\nUsing Salesforce within Customer Success\nVisit this page for more info on using Salesforce within Customer Success.\nUsing Gainsight with Customer Success\nVisit this page for more information on using Gainsight within Customer Success.\nDogfooding\nOutside of Engineering the Customer Success team has the largest concentration of\ntooling development capability. The team has unique needs that can\u02bct always be solved by\nGitLab\u02bcs single DevOps platform. However, it is important to dogfood and avoid dogfooding\nanti-patterns. As a result the Product organization heavily weights internal customers when22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 4/11"
            },
            {
                "page": 5,
                "content": "considering prioritization. If you are considering building tooling in support of Customer\nSuccess priorities outside of GitLab, please follow the dogfooding process.\nCustomer Success AWS Test Account\nIn an effort to keep AWS spend down, initiatives are being taken to automatically clean up\nour AWS account. This account is primarily used as a proof of concept for IaC and creating\ndemos for GitLab customers. An automated cleanup script is currently being tested that\nwill tag, shutdown and delete old resources as they are no longer needed. The automation\nwill:\nTurn off and Tag Un-named resources. When resources are created a \u201cName\u201d tag\nshould be created with a value that\u02bcs meaningful and indicates who deployed the\nresource. Example: {initials}-GitLabRunner\nNew Resources will be automatically tagged with a Discovered and Expiration tag.\nThe Expiration tag is 14 days after the discovery. The script will only a tag an instance\nonce. If you need additional time, please change the date to a reasonable date for\ncleanup (Add a month or two for prospective customers).\nIf a resource needs to be permanent please set termination protection on the instance.\nThis should also include tagging the instance with an explanation on why it\u02bcs\npermanent and what its for.\nOn expiration the resource will be shut off and left for 7 days.\nIn 7 days if the instance is still off a snapshot will be taken and it will be terminated.\nIf the instance is still on but the expiration has not been changed it will be terminated.\nCustomer Success Tools and Scripts\nBy customer or internal request, we sometimes develop tools to automate certain GitLab\ntasks using the API. The resulting tools and scripts are publicly available for everyone to\nuse and contribute to in the GitLab CS Tools group. Note : Those tools are not supported\nby GitLab Support.\nCommunities of Practice\nCommunity of Practice are cross-functional groups of SME\u02bcs (or aspiring to be!) within the\nCS organization dedicated to a topic within GitLab or the broader DevOps space. The goal\nis to build assets, best practices, demonstrations, and share experiences we learn from\nprospects and customers. In turn, CoP will build broader technical depth within our CS\norganization to better advise our customers and influence our product roadmap.\nAnyone can establish a Community of Practice, and anyone can be a part of one. To be\nefficient and transparent, we have set guidelines on how Communities of Practice should22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 5/11"
            },
            {
                "page": 6,
                "content": "operate.\nFrequently Asked Questions\nCustomer Success team members maintain a FAQ to keep questions customers ask\ndocumented in a place where everyone can view and contribute to.\nCustomer Success resource links outside handbook\nCustomer Reference Sheet\nSales Collateral\nGitLab University\nOur Support Handbook\nCustomer Collaboration Project template\nGitLab Demo Portal\nWorkflow SA Demo Scenarios (Internal Only)\nSA-Created - Hands-On Workshops\nOther Sales Topics\nSales Handbook\nSales Operations\nSales Skills Best Practices\nSales Discovery Questions\nEE Product Qualification Questions\nGitLab Positioning\nFAQ from prospects\nClient Use Cases\nProof of Value Guidelines\nAccount Planning Template for Large/Strategic Accounts)\nSales Demo\nSales Development Group Handbook\nWith Whom to Talk to Ask Questions or Give Feedback on a GitLab feature\nCEO Preferences when speaking with prospects and customers\nCustomer Success Meetings\nCustomer Success has a few standing meetings:\nCS Team Monthly All-Hands - Monthly on the second Wednesday22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 6/11"
            },
            {
                "page": 7,
                "content": "CS Skills Exchange - once or twice Monthly\nThe different groups within CS also have standing meetings, including meetings for the\nCustomer Success teams and Renewal Managers, regional groups, and social calls.\nAccount Team\nThe account team works together to drive value, success, and growth for a customer\nAPJ Customer Success\nThe APJ Customer Success department is part of the GitLab Sales function under the\nWW Customer Success organisation who partners with our large, mid-market and\nstrategic customers to deliver value throughout their GitLab adoption in the code\ndevelopment lifecycle.\nThe team can be reached in WW Customer Success Slack channel (internal only).\nFurther to that, the APJ Customer Success team also communicates via our Slack\nchannel (internal & private only) amongst themselves.\nMission Statement\nTo deliver value to all customers by engaging in a consistent, repeatable, scalable way\nacross defined segments so that customers see the value in their investment with\nGitLab, and we retain and drive growth within our enterprise customers.\nCommercial Sales - Customer Success\nThe Commercial Sales segment consists of two sales teams, Small Business (SMB) and\nMid-Market (MM)\nCustomer Health Scoring\nCustomer Account Scoring overview and methodology framework to improve our\nunderstanding of the customer's journey and their ROI attainment.\nCustomer Success Management Handbook\nThe Customer Success Management team at GitLab is a part of the Customer Success\ndepartment, acting as trusted advisors to our customers and helping them realize value\nfaster.\nCustomer Success Playbooks\nView the Customer Success homepage for additional Customer Success handbook\ncontent.\n22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 7/11"
            },
            {
                "page": 8,
                "content": "Customer Success playbooks assist in selling, driving adoption, and ultimately\ndelivering more value to customers via GitLab\u02bcs DevOps platform. The below playbooks\nwill include original content as well as links to other parts of the handbook.\nStructure of Playbooks\nProcedure: Each Playbook contains the outline of steps to position, apply discovery\nquestions, lead value discussions, and drive adoption (CSM only). The will be driven\nand tracked via Gainsight.\nCustomer Success Reporting and Dashboarding framework\nThis page describes the underlying philosophy and framework for how to consider and\nbuild toward the long term goal of effective and efficient reporting and dashboarding\nCustomer Success Vision\nCreate a company-wide customer success approach, providing an engagement\nframework for the Customer Success organization\nCustomer Success' Frequently Asked Questions\nCustomer Success FAQ Charter\nTeam members in Customer Success face questions from customers every day about a\nvariety of topics related to GitLab. In an effort to maintain GitLab\u02bcs values of\ncollaboration, results, efficiency, Diversity, Inclusion & Belonging, iteration, and\ntransparency, we are collectively updating this FAQ as a Customer Success team with\nquestions received by customers, in the hope to help other GitLab team members (both\niin and out of Customer Success), our customers, and our wider GitLab community.\nCustomer Terrain Mapping Engagements\nCustomer Terrain Mapping Engagements provide customers with the benefit of GitLab\u02bcs\nexperience with DevOps methodologies, Git, GitLab, CI, CD and monitoring by\nbrainstorming a high level, first draft discovery of their specific challenges that need to\nbe addressed for success in a scoped area of DevOps (a Terrain). The need for this\ngenerally arises when the customer is getting ready to utilize technologies and/or\nmethodologies they are less familiar with.\nCustomer Workshops\nPlease reference the Workshops section on the Customer Success page for up-to-date\ninformation on and links to CS Workshops.\nDemo Systems22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 8/11"
            },
            {
                "page": 9,
                "content": "The GitLab Demo Systems provide infrastructure for the GitLab Customer Success,\nMarketing, Sales, and Training teams to demonstrate GitLab features, value\npropositions, and workflows in a variety of asynchronous and live capacities.\nEducational Services\nGitLab Product Training for Customer Success\nAs a Solutions Architect, Customer Success Manager, or Professional Services\nEngineer, it is important to be continuously learning more about our product and related\nindustry topics. This handbook page provides an dashboard of aggregated resources\nthat we encourage you to use to get up to speed.\nGitLab Quick Start for New GitLab.com Customers\nTasks to complete when your subscription starts\nInitiatives\nPartners\nProduct Usage Reporting Vision\nThe page outlines the current and planned utilization of operational data at GitLab,\nincluding Product, Sales, Customer Success, and Marketing.\nProfessional Services Team Handbook\nThe Professional Services team at GitLab is a part of the Customer Success department\nhelping customers achieve value faster.\nPublic Sector\nRenewals Managers\nResources to get started with GitLab\nA 5-day plan to get started with GitLab\nSuccess Services\nThe Success Services department is part of the Customer Success function who\npartners with our customers to deliver value and positive business outcomes\nthroughout their journey with GitLab.\nThe team can be reached in Slack channel (internal only).\nFor content for positioning the value of the service, how to price/quote the service and\nhow to handle objections, please visit the internal handbook page here.22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 9/11"
            },
            {
                "page": 10,
                "content": "Success Services\nOverview\nOur Success Services drive adoption and value realization of GitLab products whilst\nproviding customers with Best Practices and a higher tier of White Glove support. We\nachieve this by bundling a named Support Engineer, a Customer Success Architect\n(CSA) and Education services into a single orderable SKU as an annual renewable\nservice.\nTransitioning Accounts from Pre-Sales to Post-Sales\nHow to effectively transition a customer from the pre-sales engagement to post-sales\nto ensure the customer is successful.\nUsing Salesforce within Customer Success\nUsing Salesforce within Customer Success (Current)\nAccount Onboarding\nCustomer Success Manager Summary\nAccount Triage\nAccount Engagement\nOn an account view in Salesforce, there is a Customer Success section, with the\nfollowing fields:\nHealth Score - A field to record the overall customer health CSM Sentiment - A\nfield to list the CSM\u02bcs sense of the customer\u02bcs health\nGitLab Customer Success Project - Where you enter the URL of the project created\nusing the template described above\nCustomer Slack Channel - A field to record Slack channel(s) used for internal and\nexternal customer collaboration. If a channel is internal, make sure it follows the\nnaming convention #a_<customer-name>-internal per Communication Chat\nSolutions Architect - The Solutions Architect aligned with the account\nCustomer Success Manager - The Customer Success Manager aligned with the\naccount\nSalesforce Objects\nSalesforce operates using a series of objects. Standard objects are objects that are\nincluded with Salesforce. Common business objects like Account, Contact, Lead, and\nOpportunity are all standard objects.22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 10/11"
            },
            {
                "page": 11,
                "content": "Last modified September 23, 2024: Fix broken links (d748cf8c)\n\uf1c9 View page source - \uf044 Edit this page - please contribute. \n22/10/2024, 14:59 Customer Success | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/customer-success/ 11/11"
            }
        ]
    },
    {
        "filename": "About the Handbook _ The GitLab Handbook.pdf",
        "pages": [
            {
                "page": 1,
                "content": "About the Handbook\nHistory of the handbook\nThe handbook started when GitLab was a company of just ten people to make sharing\ninformation efficient and easy. We knew that future GitLab team-members wouldn\u02bct be\nable to see emails about process changes that were being sent before they joined and that\nmost of the people who would eventually join GitLab likely hadn\u02bct even heard of us yet. The\nhandbook was our way of ensuring that all of our company information was accessible to\neveryone regardless of when they became part of the team.\nAdvantages\nAt GitLab our handbook is extensive and keeping it relevant is an important part of\neveryone\u02bcs job. It is a vital part of who we are and how we communicate. We established\nthese processes because we saw these benefits:\n\u0000. Reading is much faster than listening.\n\u0000. Reading is async, you don\u02bct have to interrupt someone or wait for them to become\navailable.\n\u0000. Talent Acquisition is easier if people can see what we stand for and how we operate.\n\u0000. Retention is better if people know what they are getting into before they join.\n\u0000. On-boarding is easier if you can find all relevant information spelled out.\n\u0000. Teamwork is easier if you can read how other parts of the company work.\n\u0000. Discussing changes is easier if you can read what the current process is.\n\u0000. Communicating change is easier if you can just point to the diff.\n\u0000. Everyone can contribute to it by proposing a change via a merge request.\nOne common concern newcomers to the handbook express is that the strict\ndocumentation makes the company more rigid. In fact, writing down our current process in\nthe handbook has the effect of empowering contributors to propose change. As a result,\nthis handbook is far from rigid. You only need to look at the handbook changelog to see the\nevidence. Every attempt is made to document guidelines and processes in the handbook.\nHowever, it is not possible to document every possible situation or scenario that could\npotentially occur. Just because something is not yet in the handbook does not mean that itThe GitLab Handbook\n\uf296GitLab\ue4bbTeamOps\uf02dHandbook\uf0c0Job Families\uf0f6Reports22/10/2024, 14:54 About the Handbook | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/about/ 1/6"
            },
            {
                "page": 2,
                "content": "is allowed. GitLab will review each team member\u02bcs concern or situation based on local laws\nto determine the best outcome and then update the handbook accordingly. If you have\nquestions, please discuss with your manager or contact the People Success team.\nHandbook Interpretation\nThe handbook is subject to interpretation. We do our best to be as clear as possible to\nminimize confusion and/or misinterpretation. We also recognize that we have a global\naudience and that may bring different interpretations. If you have any questions or need\nfurther clarification please check with the content owner of the page. When in doubt\nplease reach out and ask.\nRemember that everything is in draft at GitLab and subject to change, this includes\nour handbook.\nCount handbook pages\nIt\u02bcs easy to see that the handbook is large, but have you ever wondered just how large? The\nhandbook is over twothousand pages long. That\u02bcs a lot of good info!\nHistorical Word and Page Counts\nabout.gitlab.com/handbook\nDateWord CountPage Count Notes\n2018-01-01298,806228\n2018-10-01427,929335\n2019-01-01520,519439\n2019-04-01656,668586\n2019-07-01818,064766\n2019-10-01987,397884\n2020-01-011,204,6421,035\n2020-04-011,491,0171,222\n2020-07-011,851,3501,48822/10/2024, 14:54 About the Handbook | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/about/ 2/6"
            },
            {
                "page": 3,
                "content": "DateWord CountPage Count Notes\n2020-10-012,166,6271,759\n2021-01-012,410,5541,914\n2021-04-012,615,3722,056\n2021-07-012,956,7812,271\n2021-10-013,138,9522,355\n2022-01-013,280,1082,395\n2022-04-013,474,9932,553\n2022-07-013,628,2802,641\n2022-10-013,732,3842,724\n2023-01-013,732,1862,722 \u2b05 Last entry before migration\n2023-07-013,905,9792,743\n2023-10-013,478,4072,306\n2023-12-2200 \u2b05 Handbook Migration Complete\nhandbook.gitlab.com/handbook\nDateWord CountPage Count Notes\n2023-07-01150,732133\n2023-10-011,909,1391,403\n2024-01-013,631,3603,003 \u2b05 Migration Completed\n2024-10-223,855,9493,086 \u2b05 Hugo generated Live Count\nMethodology\nWord and page counts are determined through a simple two-step process:\n\u0000. Count the number of words in the handbook. This can be done by running find\nsites/handbook/source/handbook -type f -name \"*.md\" -o -name \"*.md.erb\" |\nxargs wc -w from the root of the repository.22/10/2024, 14:54 About the Handbook | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/about/ 3/6"
            },
            {
                "page": 4,
                "content": "\u0000. Count the number of pages in the handbook. This can be done by running grep -l -r\n\"\\\" * | wc -l from the root of the repository.\nNote: If you need to go back to an earlier version of the handbook, use git checkout `git\nrev-list -n 1 --first-parent --before=\"2021-07-02 00:00\" master` specifying the\nnext day after the day you want.\nView Statistics\nOn this page you can see handbook trends and discover popular pages that you may not\nknow about.\nGitLab uses Snowplow to track handbook usage; the information can be viewed on\nTableau.\nMore about the handbook\nWe\u02bcve gathered some information about the handbook here, but there\u02bcs still more\nelsewhere.\nHandbook usage\nEvolution of the handbook on the CEO page\nChangelog\nHandbook editing examples\nContent Websites\nOverview\nThis area has traditionally been referred to as \u201cthe handbook\u201d, but over time has grown\nin scope to include multiple sites, projects, repos, and types of content.\nTherefore, we are using the term \u201ccontent websites\u201d here to avoid ambiguity and\nproperly frame discussions around this scope of responsibility.\nSee our direction page for more.\nIf you need help, please see the editing handbook section, or escalation information if\nit\u02bcs urgent.\nEditing the Handbook\n22/10/2024, 14:54 About the Handbook | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/about/ 4/6"
            },
            {
                "page": 5,
                "content": "Information on how to edit the handbook including tips and troubleshooting.\nGitLab Handbook Usage\nAbout how GitLab uses the handbook.\nHandbook Changelog\nThe last 100 Merge Requests to the Handbook\nHandbook Direction\nOverview\nThe GitLab Handbook is the single source of truth for how we operate at GitLab,\nincluding processes, policies, and product direction. In keeping with our value of\ntransparency, the GitLab Handbook is entirely open to the world. We welcome feedback\nfrom the community and hope that it serves as inspiration for other current or future\ncompanies. The GitLab Handbook is also an incredible talent acquisition tool, providing\ncandidates with valuable insight into how GitLab runs as a company.\nHandbook Escalation\nFor information on team members\u02bc roles and responsibilities, see Content Websites\npage.\nIntroduction\nThe Handbook is a critical part of empowering team members to do their jobs\neffectively. As such, we have a group of team members who assist in resolving issues\naffecting all team members.\nReporting an issue\nIf you\u02bcre looking for general help, please see the editing handbook page.\nAny issues should be reported in the #handbook-escalation channel in Slack.\nHandbook Style Guide\nGitLab\u02bcs general communications practices are detailed at GitLab Communication, but\nbeyond those we do have some channel-specific guidance available. See the list of\nresources below for links to other guides.\nHandbook style guidance is covered primarily by the handbook markdown guide, and\nthe editing handbook page.\nIn the absence of handbook-specific guidance, follow:22/10/2024, 14:54 About the Handbook | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/about/ 5/6"
            },
            {
                "page": 6,
                "content": "\u0000. GitLab\u02bcs Writing Style Guidelines, or\n\u0000. the Documentation Style Guide.\nRelated Resources\nGitLab Communication\nMarkdown guide\nGitLab Documentation guidelines\nDocumentation style Guide\nGitLab style guides\nPajamas Design System\nMarketing site content style guide\nBlog style guide\nLast modified September 23, 2024: Fix broken links (d748cf8c)\n\uf1c9 View page source - \uf044 Edit this page - please contribute. \n22/10/2024, 14:54 About the Handbook | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/about/ 6/6"
            }
        ]
    },
    {
        "filename": "Triage Operations _ The GitLab Handbook.pdf",
        "pages": [
            {
                "page": 1,
                "content": "Triage Operations\nAutomation and tooling for processing un-triaged issues at GitLab\nAny GitLab team-member can triage issues. Keeping the number of un-triaged issues low is\nessential for maintainability, and is our collective responsibility.\nWe have implemented automation and tooling to handle this at scale and distribute the load to\neach team or group.\nVideo introduction to triage operations, triage report, priority and severity labels.\nTriaging at GitLab - Intr o to triage oper ations, triage r epor t, Triaging at GitLab - Intr o to triage oper ations, triage r epor t, \u2026\u2026\nAccountability\nThe Quality Engineering Department ensures that every Product and Engineering group is held\naccountable to deliver on the SLA set forth.\nOur defect SLA can be viewed at:\nPriority labels\nSeverity labels\nThe Quality Engineering department employs a number of tools and automation in addition to\nmanual intervention to help us achieve this goal. The work in this area can been seen in our\ndepartment roadmap under Triage and Measure tracks of work.The GitLab Handbook\n\uf296GitLab\ue4bbTeamOps\uf02dHandbook\uf0c0Job Families\uf0f6Reports22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-re\u2026 1/25"
            },
            {
                "page": 2,
                "content": "Label renaming\nThere is a large amount of automation that uses stage, group, and category labels. We ask that\nProduct Managers create an issue in triage-ops when any of the following changes occur. This\nissue helps ensure limited to no impact to automation and reports.\nStage creation or rename\nGroup creation or rename\nCategory label creation or rename\nAuto-labelling of issues and merge requests\nOur triage bot will automatically infer section, stage, and group labels based on the\ncategory/feature already set on an issue or MR. This is available for open issues/MRs within the\ngitlab-org group.\nThe most important rules are:\nThe bot doesn\u02bct change a stage or group label if the stage or group is listed in stages.yml\nand the label is already set.\nA group label is chosen only if the highest group match from its category labels is > 50%.\nA group label is chosen only if it matches the already set stage label (if applicable).\nA stage label is set based on the chosen or already set group label.\nA section label is set based on the chosen or already set group or stage label.\nThe bot leaves a message that explains its inference logic.\nThe following logic was initially implemented in this merge request:22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-re\u2026 2/25"
            },
            {
                "page": 3,
                "content": "Yes\nYes No\nYes No Yes\nNo\nYes No\nYes No\nYes NoNo\nYes\nYes NoNo\nYes NoStage label\nis present?\nGroup label\nis present?\nGroup has\none category?Group is detected based \non category labels\nwith a match rate > 50% \namong\nall category labels?\nSet category label. Nothing to do.Does detected group label\nmatches stage label?\nSeveral potential groups in\ncurrent stage detected\nfrom category labels?Set detected\ngroup label.\nManual triage\nrequired.Does the stage has\na single group?\nSet this\ngroup label.Manual triage\nrequired.Group label\nis present?\nGroup has\none category?\nSet stage and category \nlabels\nbased on group label,\nwe're done!Set stage label\nbased on group label,\nwe're done!Group is detected based \non category labels\nwith a match rate > 50% \namong\nall category labels?\nSet group and\nstage labels.Manual triage\nrequired.\nAfter the above inference is done, a section label will be added based on the stage or group\nlabel. An explanation will not be added in this step if the inferred labels contain only a section\nlabel.\nCheck out the list of actual use-cases to better understand what this flow means in practice.\nIf your issue/MR doesn\u02bct belong to a particular stage, you can remove the stage label and add\nthe ~\"automation:devops-mapping-disable\" label to prevent this automation from happening\nin the future.\nTriage reports22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-re\u2026 3/25"
            },
            {
                "page": 4,
                "content": "A triage report is an issue containing a checklist of issues or merge requests requiring\nattention. Usually, each task corresponds to an issue or a merge request that needs labels,\nprioritization, scheduling, attention etc. Some reports also include heatmaps or other various\ninformation.\nTriage report are automatically assigned to specific team members, listed in the stages\ndefinition file.\nTo change who an issue gets assigned to, open a merge request for the above files. If the group\ndefinition file is changed, we\u02bcll need to run some scripts to update the generated files as well.\nCommunity-related triage reports\nThese reports are owned by the Contributor Success team.\nNewly created community merge requests\nThis report contains community merge requests requiring partial triage. The goal is for coaches\nto add type, stage, and group labels, so that the relevant people can be pinged later on based\non these labels.\nFrequency: Daily.\nAssignees: Merge Request Coaches who are not out of the office by gitlab roulette.\nListed merge requests: The latest 100 Community contribution which are not partially\ntriaged.\nTriage action: Follow the instructions in the triage report.\nExample: https://gitlab.com/gitlab-org/quality/triage-reports/-/issues/7903\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/report/untriaged-community-merge-requests.yml\nCommunity merge requests requiring attention\nThis report contains community merge requests that may require some attention from GitLab\nteam members.\nFrequency: Weekly.\nAssignees: Contributor Success team + volunteer wider community members.\nListed merge requests (all awaiting GitLab response):\n\u0000. Merge requests from new contributors idle for 7 days.\n\u0000. Merge requests idle for 21 days (excluding ~group::runner).\n\u0000. ~group::runner merge requests idle for 21 days.\nTriage action:\n\u0000. Determine if the merge request should be followed through or closed.\n\u0000. Determine if the merge request is ready or further changes are required.22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-re\u2026 4/25"
            },
            {
                "page": 5,
                "content": "\u0000. Assign a reviewer as needed.\nExample: https://gitlab.com/gitlab-org/quality/triage-reports/-/issues/7690\nPolicy: https://gitlab.com/gitlab-org/quality/triage-ops/-/blob/master/policies/groups/gitlab-\norg/quality/community-contribution-mr-report.yml\nTeam reports\nGroup level bugs, features, and Deferred UX\nThis report contains the relevant bugs, feature requests, and Deferred UX issues that belong to\na group in our DevOps stages. The goal is to achieve complete-triage by the Product Manager,\nEngineering Manager, UX team member in that area.\nThe report itself is divided into 4 main parts.\nFeature proposals\nDeferred UX issues\nFrontend bugs\nBugs (likely backend)\n~priority::1 and ~priority::2 bugs past the target SLO.\nThe bug sections also contains a heatmap.\nAn example: https://gitlab.com/gitlab-org/quality/triage-ops/issues/118\nVideo overview of the triage report.22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-re\u2026 5/25"
            },
            {
                "page": 6,
                "content": "Triage P ackage iter ation, mor e emphasis on cust omer bug Triage P ackage iter ation, mor e emphasis on cust omer bug \u2026\u2026\nThere is also an optional stage policy for missing categories. If your team has enabled this, you\nwill receive a list of up to 100 items that have the stage label but have zero appropriate\ncategory labels for that stage.\nFeature proposals\nThis section contains issues with the ~\"type::feature\" label without a milestone. It is divided\nfurther into issues with and without ~\"customer\"\nTriage owner: Product Manager(s) for that group.\nTriage actions:\n\u0000. If the issue is a duplicate or irrelevant, close the issue out.\n\u0000. Assign a milestone either to a versioned milestone, Backlog or Awaiting further\ndemand milestone.\nFrontend bugs\nThis section contains issues with the ~\"type::bug\" and ~\"frontend\" labels without priority\nand severity. It is divided further into issues with and without ~\"customer\"\nTriage owner: Frontend Engineering Manager(s) for that group.\nTriage actions:\n\u0000. Close the issue if it is no longer relevant or a duplicate.\n\u0000. Assign a Priority Label.\n\u0000. Assign a Severity Label.\n\u0000. Assign either a versioned milestone or to the Backlog.\nNon-frontend bugs (likely backend)\nThis section contains issues with the ~\"type::bug\" label without priority and severity. It is\ndivided further into issues with and without ~\"customer\"22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-re\u2026 6/25"
            },
            {
                "page": 7,
                "content": "Triage owner: Backend Engineering Manager(s) for that group.\nTriage actions:\n\u0000. Close the issue if it is no longer relevant or a duplicate.\n\u0000. Assign a Priority Label.\n\u0000. Assign a Severity Label.\n\u0000. Assign either a versioned milestone or to the Backlog.\nseverity::1 & severity::2 bugs past SLO\nThis section contains bugs which has past our targeted SLO based on the severity label set.\nThis is based on our missed SLO detection triage policy.\nHeatmap for ~customer bugs\nThis section contains a table displaying the open issues for a group labeled with ~\"customer\"\nand ~\"bug\". There is a breakdown by the assigned severity and priority labels\nGroup level merge requests that may need attention\nThis report contains idle group merge requests authored by GitLab team members.\nMerge requests are considered idle when they have no human activity for 28 days. This report\ncollects them for prompting of any actions to move the MR forward, such as nudging the\nauthor, reviewer, or maintainer.\nTriage owner: Engineering Manager(s) for that group.\nTriage frequency: On 8th and 23rd every month.\nTriage actions:\n\u0000. Review these merge requests to identify if there are any steps that can shorten the\ntime to merge. Steps can be:\n\u0000. Reminding the author about it.\n\u0000. Changing the DRI.\nAn example report: Merge requests requiring attention for group::access - 2020-11-08.\nCurrent reports can be found in the triage-reports project\nGroup level feature flags that may need attention\nThis report contains feature flags that have enabled in the codebase for 2 or more releases for\ngroups within our DevOps stages.\nThe DRI is responsible for reviewing these feature flags to determine if they are able to be\nremoved entirely, or create separate issues to ensure the overdue feature flags are removed\naccordingly.\nTriage owner: Engineering Manager(s) for that group.22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-re\u2026 7/25"
            },
            {
                "page": 8,
                "content": "Triage frequency: On 1st of every month.\nTriage actions:\n\u0000. Review the feature flags to identify whether they can be:\n\u0000. Removed by the Engineering DRI.\n\u0000. Tracked with a separate issue for removal to be scheduled by the PM for the\ngroup.\nAn example report: Feature Flags requiring attention for group::continuous integration -\n2021-03-01. Current reports can be found in the triage-reports project\nThe feature flag triage reports are generated in a quality toolbox scheduled pipeline with the\ngitlab-feature-flag-alert project.\nGroup level Bug Prioritization report\nThis report contains group level the Top 10 open issues of ~\"type::bug\" which needs to be\nprioritized for the upcoming milestone. It is divided further into issues with ~\"severity::,\n~\"bug::vulnerability\" and ~\"customer\" labels and listed based on the oldest age of the\nissues\nTriage owner: Product Manager(s) and Engineering Manager(s) for that group.\nTriage frequency: On 2nd of every month.\nTriage actions:\n\u0000. Close the issue if it is no longer relevant or a duplicate.\n\u0000. Prioritize these issues and identify the ones that needs to be picked into the upcoming\nmilestone\n\u0000. Assign either a versioned milestone or to the Backlog.\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/template/group/bug-prioritization.yml.erb\nAn example report: 2023-11-01 - Bugs Prioritization for \u201cgroup::source code\u201d for upcoming\nmilestone - 16.7. Current reports can be found in the triage-reports project\nAuto closure of triage reports\nReports open for more than 2 weeks with the ~\"triage report\" label will be closed\nautomatically with the close old triage reports automation.\nReactive workflow automation\nReactive triage automation is complementary to scheduled triage automation where realtime\nfeedback provides an improved developer experience. This is handled by triage-ops.\nCommunity-related reactive workflow automation22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-re\u2026 8/25"
            },
            {
                "page": 9,
                "content": "Note: reactive command arguments between brackets ([]) are considered as optional.\nFollowing is a diagram that shows how all the automations fit together:\nYes\nYes\nYesYes\nYes\nYes\n@gitlab-bot label ...\n@gitlab-bot feedback\n@gitlab-bot help\n@gitlab-bot readyWider Community Merge \nrequest\n(author is not a member of \nUnsupported markdown: \ncodespan)\nMerge request with the \nUnsupported markdown: \ncodespan labelMR is opened\nMR is updated\nMR is merged\nMR is closed\nMR author posts a note\nAnyone posts a noteUnsupported markdown: \nlist\nWas the\nUnsupported markdown: \ncodespan\nlabel added?If reviewers are present, \nask them to review .\nOtherwise, ask (and \nassign) an MR coach\n(selected based on group \nlabel) to review\nDoes the MR touches\ndocumentation files?Post a note asking a\ntechnical writer to review\nDoes the MR has\nthe Unsupported \nmarkdown: codespan label?Post a message in the\nUnsupported markdown: \ncodespan\nSlack channel, and on the \nMR\nPost a note asking\nfor feedbackIs a Hackathon\ncurrently running?Add the Unsupported \nmarkdown: codespan label\nWhat note is it?\nWhat note is it?Add the requested label\nAsk (and assign as \nreviewer)\nan MR coach for help\nAdd the Unsupported \nmarkdown: codespan labelPost the feedback in the\nUnsupported markdown: \ncodespan Slack channel\nCommunity contribution thank you note\nAutomation conditions:\nMR was opened\nThe MR is opened in a project under the gitlab-org group or for the gitlab-\ncom/www-gitlab-com project, and its author is not present in the team page\nAutomation actions:\nPosts a \u201cThank you\u201d note\nAdds the Community contribution and workflow::in dev labels\nAssigns the MR to its author22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-re\u2026 9/25"
            },
            {
                "page": 10,
                "content": "Processor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/thank_contribution.rb\nAutomated review request\nAutomation conditions:\nThe workflow::ready for review label was added\nThe MR has the Community contribution label set\nThe MR is not opened in a distribution project listed at https://gitlab.com/gitlab-\norg/distribution/monitoring/-/raw/master/lib/data_sources/projects.yaml\nThe MR is not opened in a project which has an external review process (as defined in\nthe processor).\nAutomation actions:\nIf the MR already has reviewers, nudge them to perform a review, reassign or set the\nworkflow::in dev label\nIf the MR has no reviewers, nudge and assign (as reviewer) a coach based on the MR\u02bcs\ngroup (or a random coach otherwise), to review, reassign or set the workflow::in\ndev label\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/automated_review_request_generic.rb\nAutomated review request for doc contributions\nAutomation conditions:\nThe workflow::ready for review label was added\nThe MR has the Community contribution label set\nThe MR does not have the Technical Writing label set\nMR has documentation changes\nNo existing note asking for documentation review\nAutomation actions:\nAsks a relevant Technical Writer (based on the changes\u02bc mapped from the\nCODEOWNERS file) to review\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/automated_review_request_doc.rb\nAutomated review request for UX contributions\nAutomation conditions:\nThe workflow::ready for review label was added\nThe MR has the Community contribution label set\nThe MR has the UX label set\nNo existing note asking for UX review22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 10/25"
            },
            {
                "page": 11,
                "content": "Automation actions:\nPosts a Slack message in the #ux-community-contributions Slack channel (internal)\nto ask a UX reviewer to review non-draft MRs\nPosts a note to let the author know about the Slack ping\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/automated_review_request_ux.rb\nReactive help command\nAutomation conditions:\nA new MR note that starts with @gitlab-bot help is posted on a merge request\nThe note is posted by the MR author or a team member\nAutomation actions:\nPings and assigns (as reviewer) a random MR coach for help\nRate limiting: once per author/MR per hour, or 100 times per team member/MR per hour\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/command_mr_help.rb\nReactive ready command\nAutomation conditions:\nA new MR note that starts with @gitlab-bot ready [@user1 @user2 ...], @gitlab-\nbot review [@user1 @user2 ...], or @gitlab-bot request_review [@user1 @user2\n...]\nThe note is posted by the MR author or a team member\nAutomation actions:\nAdds the workflow::ready for review label to the MR\nAssigns the provided users (any GitLab community member) as reviewers, otherwise\npicks a random MR coach as reviewer\nRate limiting: once per author/MR per hour, or 100 times per team member/MR per hour\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/command_mr_request_review.rb\nReactive unassign_review command\nAutomation conditions:\nA new MR note that starts with @gitlab-bot unassign_review\nThe note is posted by one of the currently assigned reviewers (any GitLab community\nmember)\nAutomation actions:\nRemoves the posting user from the list of currenly assigned reviewers\nRate limiting: 100 times per hour22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 11/25"
            },
            {
                "page": 12,
                "content": "Processor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/command_mr_unassign_review.rb\nReactive label and unlabel commands\nAutomation conditions:\nA new note that starts with @gitlab-bot label ~\"label-name\" or @gitlab-bot\nunlabel ~\"label-name\" where label-name matches:\ngroup::*, type::*, feature::*, bug::*, maintenance::*, category:*\nbackend, database, documentation, frontend, handbook, UX\nsecurity (label only for community members)\nworkflow::in dev, workflow::ready for review, workflow::blocked\nThe note is posted by the author, an assignee, or a team member\nNote: to add or remove multiple labels, list all labels after the command, for example:\n@gitlab-bot label ~\"group::project management\" ~\"type::bug\"\nAutomation actions:\nAdds or removes the requested label\nRate limiting: 60 times per requester/item per hour\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/command_mr_label.rb\nIdle/Stale label remover\nAutomation conditions:\nThe MR author posts a note or pushes new changes to the MR\nThe MR has the Community contribution label set\nThe MR has the idle or stale labels set\nAutomation actions:\nRemoves the idle and stale labels\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/remove_idle_labels_on_activity.rb\nCode Review Experience Feedback\nAutomation conditions:\nMR was merged or closed\nThe MR has the Community contribution label set\nNo existing note asking for feedback\nAutomation actions:\nPosts a note to ask MR author about their contributing experience\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/code_review_experience_feedback.rb22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 12/25"
            },
            {
                "page": 13,
                "content": "Reactive feedback command\nAutomation conditions:\nA new MR note that starts with @gitlab-feedback\nThe note is posted by the MR author or a team member\nAutomation actions:\nPosts the contributor feedback note in the #mr-feedback Slack channel (internal)\nRate limiting: once per requester/MR per day\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/command_mr_feedback.rb\nLeading Organizations labeler\nAutomation conditions:\nMR was opened or updated\nThe MR does not have the Leading Organization label set\nThe MR author is from a leading organization based on the data we have on Sisense\nAutomation actions:\nAdds the Leading Organization label\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/label_leading_organization.rb\nHackathon labeler\nAutomation conditions:\nMR was opened or updated during the Hackathon dates\nThe MR has the Community contribution label set\nNo existing note mentioning the Hackathon\nAutomation actions:\nPosts a note mentioning the Hackathon\nAdds the Hackathon label\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/hackathon_label.rb\nSpam detector\nAutomation conditions:\nMR has the Community contribution label set\nMR not currently labeled as Spam\nMR content matches phrases associated with inappropriate and abusive activity (More\ninformation can be found in the Processor implementation)\nAutomation actions:\nPosts a note linking to GitLab Website Terms of Use22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 13/25"
            },
            {
                "page": 14,
                "content": "Relabels (removes all other labels) as Spam\nCloses the MR\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/community/detect_and_flag_spam.rb\nEngineering workflow automation\nEnsure priorities for availability issues\nFor issues labeled ~\"availability\", the minimal are enforced with the guidelines at\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-\nproductivity/issue-triage/#availability-prioritization\nEnsure no deprecated backstage labels are added\nWhenever ~\"backstage [DEPRECATED]\" is added, it\u02bcll remove it and hint about why it should\nnot be added, and alternatives will be provided.\nAdd customer label whenever a customer associated link is added\nThe ~\"customer\" label is applied when a customer associated link is applied.\nThe following URLs are considered customer associated links:\ngitlab.zendesk.com\ngitlab.my.salesforce.com\nAdd type label from subtype\nWhenever a subtype label is added, the corresponding type label is added. Current type labels\nwith subtype labels are:\n~\"type::feature\"\n~\"type::tooling\"\nMerge request type label copy from related issues\nAutomation conditions:\nOpen or update of a merge request without a type label that have a related issue with\na type label.\nAutomation actions:\nThe type label in the issue is applied to the merge request\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/apply_type_label_from_related_issue.rb22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 14/25"
            },
            {
                "page": 15,
                "content": "Reactive retry_job command\nAutomation conditions:\nA new issue note with @gitlab-bot retry_job <job_id> posted by a GitLab team\nmember in a broken master incident.\nThis automation can only be invoked from the gitlab-org/quality/engineering-\nproductivity/master-broken-incidents project right now.\nAutomation actions:\n@gitlab-bot will send a request to retry the target job and reply with a new job link.\nExample: https://gitlab.com/gitlab-org/quality/engineering-productivity/master-broken-\nincidents/-/issues/3188#note_1496059720\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/gitlab_internal_commands/command_retry_pipeline_or_job.rb\nReactive retry_pipeline command\nAutomation conditions:\nA new issue note with @gitlab-bot retry_pipeline <pipeline_id> posted by a\nGitLab team member in a broken master incident.\nThis automation can only be invoked from the gitlab-org/quality/engineering-\nproductivity/master-broken-incidents project right now.\nAutomation actions:\n@gitlab-bot will send a request to retry all failed jobs in the target pipeline and reply\nwith the pipeline link.\nExample: https://gitlab.com/gitlab-org/quality/engineering-productivity/master-broken-\nincidents/-/issues/3187#note_1496076800\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/gitlab_internal_commands/command_retry_pipeline_or_job.rb\nDatabase-related reactive workflow automation\nDatabase Review Experience Feedback\nAutomation conditions:\nMR was merged or closed\nThe MR has the database::reviewed or database::approved label set\nNo existing note asking for feedback\nAutomation actions:\nPosts a note to ask MR author for feedback to improve the database review process\nProcessor: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/triage/processor/database/database_review_experience_feedback.rb22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 15/25"
            },
            {
                "page": 16,
                "content": "Scheduled workflow automation\nScheduled triage automation is run to label and update issues which help with reporting and\nmilestone transition. This is handled by triage-ops.\nCommunity-related scheduled workflow automation\nRemove Seeking community contributions from issues with an\nassignee\nWhen an issue is assigned, it shouldn\u02bct accept any new contribution to prevent duplicated\nwork.\nAutomation conditions:\nIssues with an assignee and the Seeking community contributions label\nAutomation actions:\nThe Seeking community contributions label is removed\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/label-seeking-community-contributions.yml\nRemove Seeking community contributions from issues with an invalid\nworkflow label\nWhen an issue has the Seeking community contributions label set, but also an incompatible\nworkflow label, the issue isn\u02bct actually ready to accept a contribution.\nAutomation conditions:\nIssues with the Seeking community contributions and one of the\nworkflow::blocked, workflow::design, workflow::planning breakdown,\nworkflow::refinement, workflow::verification labels\nAutomation actions:\nThe Seeking community contributions label is removed\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/label-seeking-community-contributions.yml\nRemove Seeking community contributions from all merge requests\nIt doesn\u02bct make sense to have Seeking community contributions set on merge requests.\nAutomation conditions:\nMerge requests with the Seeking community contributions label\nAutomation actions:\nThe Seeking community contributions label is removed22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 16/25"
            },
            {
                "page": 17,
                "content": "Policy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/label-seeking-community-contributions.yml\nLabel community contributions\nMerge requests which have an author that is not a member of gitlab-org will have the\nCommunity contribution label applied. This scheduled automation is a backup for the\nreactive automation that applies Community contribution in the welcome message.\nAutomation conditions:\nMerge request under gitlab-org with author that is not ia member of the gitlab-\norg group, or with author that is a member of the gitlab-org/gitlab-core-\nteam/community-members group\nFrequency: daily\nAutomation actions:\nThe label Community contribution is applied, and optionally the 1st contribution\nlabel if it\u02bcs the first contribution from the author in this project\nExample: https://gitlab.com/gitlab-org/gitlab-\nce/merge_requests/30909/#note_0a1c0937d1b2851e9695fb89848d8425dcf28e00\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/label-community-contributions.yml\nAdd milestone to community merge requests\nMerged merge requests with the Community contribution label and no milestone will\nautomatically get the relevant milestone set. This helps keep the community contributions\nnumbers accurate.\nAutomation conditions:\nMerged merge request with the Community contribution label, and no milestone\nAutomation actions:\nThe relevant milestone is set based on the merged_at of the merge request and the\nstart_date and due_date of the milestone\nExample:\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/add-milestone-to-community-merge-\nrequests.yml\nLabel idle community merge requests\nAutomation conditions:\nMerge request with the Community contribution label, and no human interaction for\nmore than 28 days\nAutomation actions:22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 17/25"
            },
            {
                "page": 18,
                "content": "The idle label is applied\nExample:\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/label-idle-community-mrs.yml\nLabel stale community merge requests\nAutomation conditions:\nMerge request with the Community contribution label, and no human interaction for\nmore than 120 days\nAutomation actions:\nThe stale label is applied\nExample:\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/label-idle-community-mrs.yml\nNudge EMs on community merge requests that are stale\nAutomation conditions:\nMerge request with the Community contribution and stale labels\nAutomation actions:\nAn Engineering Manager is pinged to decide if a GitLab team member will pick up the\nwork on it or close the merge request\nExample:\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/nudge-stale-community-contributions.yml\nNudge relevant coach on community merge requests that are waiting for\na review\nAutomation conditions:\nMerge request with the Community contribution and workflow::ready for review\nlabels, and without the automation:reviewers-reminded label\nNo activity on the MR in the last day (i.e. after 1 day of inactivity)\nMR has no reviewers assigned\nAutomation actions:\nNudge and assign (as reviewer) a coach based on the MR\u02bcs group (or a random coach\notherwise), to review, reassign or set the workflow::in dev label\nExample: https://gitlab.com/gitlab-org/gitlab-\npages/-/merge_requests/788#note_1011327312\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/community/hygiene/ping-inactive-reviewers.yml22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 18/25"
            },
            {
                "page": 19,
                "content": "Nudge assigned reviewers on community merge requests that are waiting\nfor a review\nAutomation conditions:\nMerge request with the Community contribution and workflow::ready for review\nlabels, and without the automation:reviewers-reminded label\nNo activity on the MR in the last 7 days\nMR has reviewer(s) assigned\nAutomation actions:\nNudge current reviewers to perform a review, reassign or set the workflow::in dev\nlabel\nExample: https://gitlab.com/gitlab-org/gitlab-\nrunner/-/merge_requests/3460#note_1011327399\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/community/hygiene/ping-inactive-reviewers.yml\nEngineering workflow automation\nMilestone reschedule\nOpen issues and merge requests that have missed the current release will be rescheduled to\nthe next active milestone. This identifies pending work that was not completed within the\nplanned milestone.\nNote: Confidential issues will be skipped as part of the missed label application. Please see\nthe this issue for more information\nAutomation conditions: Open issues or merge requests that missed the current milestone,\ni.e. current date is >= third Wednesday of the month\nAutomation actions:\nThe issues and merge requests are rescheduled to the next milestone\nThe label ~missed:x.y is applied, where x.y is the current milestone\nIf the resource has the ~Deliverable label, the ~missed-deliverable label is\napplied\nExample: Rescheduled Issue\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/missed-resources.yml\nMissed deliverable\nOpen issues and merge requests planned as ~Deliverable but have a ~missed:x.y label will\nhave the ~missed-deliverable label applied.22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 19/25"
            },
            {
                "page": 20,
                "content": "Note: Confidential issues will be skipped as part of the missed label application. Please see\nthe this issue for more information\nAutomation conditions:\nOpen issues or merge requests with the ~Deliverable label and a ~missed:x.y\nlabel, and no ~missed-deliverable label.\nAutomation actions:\nThe labels ~missed-deliverable is applied.\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/missed-resources.yml\nDeliverable with no milestone\nIssues which have a label of ~Deliverable without a milestone will have the milestone set to\n%Backlog.\nAutomation conditions:\nOpen issues or merge requests have label of ~Deliverable without a milestone\nAutomation actions:\n~Deliverable label is removed\n(Issues only) Milestone is set to %Backlog\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/remove-far-deliverable.yml\nMissed SLO\nIssues which have a severity label and missed the SLO target will be labeled with ~missed-SLO.\nThe calculation for elapsed time starts from the date of the severity label was applied. This\nenables reporting on SLO target adherence.\nAutomation conditions:\nIssue with severity label present and is remains in an open state past SLO target.\nWe currently only detect missed SLOs for ~severity::1 and ~severity::2 bugs.\nAutomation actions:\nThe label ~missed-SLO is applied.\nExample: https://gitlab.com/gitlab-org/gitlab-ce/issues/61662\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/label-missed-slo.yml\nBug priority label inference\nBugs which have a severity 1 or severity 2 label without a priority label will be labeled with the\nequal priority label. For example, a ~severity::1~\"type::bug\" without a priority label will\nhave ~priority::1 applied.22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 20/25"
            },
            {
                "page": 21,
                "content": "Automation conditions:\n~\"type::bug\" issue with ~severity::1 or ~severity::2 without a ~priority::*\nlabel.\nAutomation actions:\nApply the ~priority::* label of the same level\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/set-priority-from-severity.yml\nMaster broken categorization\nIssues or merge requests that have a label of ~\"master:broken\" will have labels of\n~\"priority::1\" and ~\"severity::1\" applied. This ensures that requests which break master\nare sufficiently categorized for reporting.\nAutomation conditions:\nOpen issue or merge request with ~\"master:broken\" label.\nAutomation actions:\nThe ~\"priority::1\" and ~\"severity::1\" labels are applied.\nExample: https://gitlab.com/gitlab-org/gitlab-ee/issues/12363\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/label-reminders.yml#L27-45\nIdentify interesting feature proposals\nThis automation identifies potential and popular proposals using upvotes. This helps identify\nfeature proposals that people have indicated they would like.\nAutomation conditions:\nIssues with 10 or more upvotes are identified as potential\nIssues with 50 or more upvotes are identified as popular\nAutomation actions:\nThe label ~\"potential proposal\" or ~\"popular proposal\" is applied depending on\nthe condition.\nExamples:\nPotential: https://gitlab.com/gitlab-org/gitlab-\nce/issues/62067#note_ca6949d26c3d121c421b4f8b20f7e5dc2028c0a6\nPopular: https://gitlab.com/gitlab-org/gitlab-\nce/issues/55638#note_b15ea9cbc76b8dea82963d7f14a4a65da52c2b09\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/discover.yml\nAuto-close inactive bugs22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 21/25"
            },
            {
                "page": 22,
                "content": "GitLab values the time spent by contributors on reporting bugs. However, if a bug remains\ninactive for a very long period, it will qualify for auto-closure. The following is the policy for\nidentification and auto-closure of inactive bugs.\nIf a ~\"severity::3\" or ~\"severity::4\"~\"type::bug\" issue is inactive for at least 12\nmonths, it will be identified as eligible for auto-closure. At this point, the following actions\noccur:\nApplication of ~\"vintage\" to indicate the issue has been inactive for a year.\nApplication of ~\"stale\" to indicate that it is currently being identified for auto-\nclosure.\nComment by GitLab Bot to the author to check whether the reported bug still persists\nand to comment accordingly within the next 7 days.\nAfter 7 days, one of the below mentioned actions happen:\nIssues which have not received a comment will be closed and the ~\"auto-closed\" is\napplied.\nIssues with a comment from anyone other than the gitlab-bot in the last 7 days are\nconsidered active and ~\"stale\" is removed\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/close-stale-bugs.yml\nPrompt for Tier labels on issues\nTier labels should be applied to issues to specify the license tier of feature. This policy prompts\nthe Product Manager for the applied group label to add the license tier label to issues that are\nscheduled for the current milestone and labeled with ~direction.\nThe possible tier labels to be applied are:\n~\u201cGitLab Free\u201d\n~\u201cGitLab Premium\u201d\n~\u201cGitLab Ultimate\u201d\nAutomation conditions:\nOpen issue without tier labels, with group and ~direction label, in current milestone\nAutomation actions:\nMention the relevant PM for the group asking to add appropriate label\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/prompt-for-tier-labels.yml\nPrompt for Type labels on issues\nType labels are applied to issues to increase the visibility and discoverability during team issue\nrefinement. This policy applies to gitlab-org team member created issues and prompts the22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 22/25"
            },
            {
                "page": 23,
                "content": "author to apply a type label to the issue within the first week.\nType labels ensure that issues are present in the group triage report and added to the correct\nsection.\nAutomation conditions:\nOpen issue with no type label applied, opened in the past 7 days, authored by\ngitlab-org member\nAutomation actions:\nMention the author asking to add appropriate type label\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/prompt-team-member-type-label.yml\nData\nChart displaying the number of open issues by type label\nBug SLO Warning\nBugs have a severity label that indicates the SLO for a fix. This automated policy aims to\nprompt managers about bugs in their group that are approaching the SLO threshold\nAutomation conditions:\nOpen issue labeled ~\"type::bug\" and has a ~severity::1 or ~severity::2\nTime since current severity label was applied and today is over 75% towards the SLO\nthreshold\nAutomation actions:\nMention EM and PM on the issue to make them aware of the impending SLO breach\nExample:\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/comment-slo-breaching-bugs.yml\nReminder on ~infradev issues to set severity label, priority label, and\nmilestone\nIssues with the ~infradev label should have a severity label, a priority label, and a milestone set.\nThis automated policy aims to prompt managers about such issues missing one of these\nattributes.\nAutomation conditions:\nOpen issue labeled ~infradev and has no severity label, or no priority label, or no\nmilestone set\nIssue doesn\u02bct have the ~\"automation:infradev-missing-labels\" set\nAutomation actions:\nThe label ~\"automation:infradev-missing-labels\" is applied22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 23/25"
            },
            {
                "page": 24,
                "content": "A message is posted to ask for a severity label, a priority label, and a milestone to be\nset on the issue\nExample:\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/ask-severity-priority-for-infradev-issues.yml\nNote:\n\u0000. The ~\"automation:infradev-missing-labels\" is automatically removed when a severity\nlabel, a priority label, and a milestone are set on the issue.\n\u0000. The ~\"automation:infradev-missing-labels\" is automatically removed after two weeks,\nleading to a new message being posted if the Automation Conditions above are still met.\nThis effectively ensures that a reminder is posted on the issue every two weeks.\nReminder on ~customer ~type::bug issues to set severity label\nIssues with the ~customer and ~type::bug labels should have a severity label set. This\nautomated policy aims to prompt team members to set a severity so that ~customer bugs are\ntriaged in a timely fashion.\nAutomation conditions:\nOpen issue labeled ~customer and ~type::bug which has no severity label set\nIssue does not have the ~\"automation:customer-bug-missing-labels\" set\nAutomation actions:\nThe label ~\"automation:customer-bug-missing-labels\" is applied\nA message is posted to ask for a severity label to be set on the issue\nPolicy: https://gitlab.com/gitlab-org/quality/triage-\nops/-/blob/master/policies/stages/hygiene/ask-severity-for-customer-bug-issues.yml\nNote:\n\u0000. The ~\"automation:customer-bug-missing-labels\" is automatically removed when a\nseverity label is set on the issue.\nResources\nIssue Triage Policies.\nWider Community Merge Request Triage Policies\nChat channels; we use our chat internally as a realtime communication tool:\n#triage: general triage team channel.\n#gitlab-issue-feed - Feed of all GitLab-CE issues\n#support-tracker-feed - Feed of the GitLab.com Support Tracker\n#mr-coaching: for general conversation about Merge Request Coaching.\n#opensource: for general conversation about Open Source.22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 24/25"
            },
            {
                "page": 25,
                "content": "Issue Triage Onboarding\nOnboarding guidelines for Issue Triaging team\nLast modified July 9, 2024: Fix links and spelling (e30f31b6)\n\uf1c9 View page source - \uf044 Edit this page - please contribute. \n22/10/2024, 15:01 Triage Operations | The GitLab Handbook\nhttps://handbook.gitlab.com/handbook/engineering/infrastructure/engineering-productivity/triage-operations/#newly-created-community-contribution-merge-r\u2026 25/25"
            }
        ]
    }
]